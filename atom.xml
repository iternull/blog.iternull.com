<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IterNull Blog</title>
  <subtitle>万物即联网，万物皆可黑；</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.iternull.com/"/>
  <updated>2017-06-05T19:27:00.989Z</updated>
  <id>https://blog.iternull.com/</id>
  
  <author>
    <name>ZnHoCn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>YubiKey 4 PGP 功能使用教程</title>
    <link href="https://blog.iternull.com/posts/2017/06/03/YubiKey-4-GPG-Tutorial.html"/>
    <id>https://blog.iternull.com/posts/2017/06/03/YubiKey-4-GPG-Tutorial.html</id>
    <published>2017-06-02T16:23:15.000Z</published>
    <updated>2017-06-05T19:27:00.989Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.yubico.com/" target="_blank" rel="external">YubiKey</a> 是一款用于安全认证的硬件工具，其中的 YubiKey 4, YubiKey 4 Nano, YubiKey 4C, YubiKey NEO, YubiKey NEO-n，这些产品型号是包含 OpenPGP Card 功能的。</p>
<p>你可将你的私钥移动到 YubiKey 里，在需要使用的时候插上，而不必担心私钥泄露或被恶意程序盗取，并且支持在多种操作系统上使用。</p>
<a id="more"></a>
<h2 id="1、生成密钥对"><a href="#1、生成密钥对" class="headerlink" title="1、生成密钥对"></a>1、生成密钥对</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">$ gpg --gen-key</div><div class="line"></div><div class="line">gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.</div><div class="line"></div><div class="line">Please select what kind of key you want:</div><div class="line">   (1) RSA and RSA (default)</div><div class="line">   (2) DSA and Elgamal</div><div class="line">   (3) DSA (sign only)</div><div class="line">   (4) RSA (sign only)</div><div class="line">Your selection? 1  // 输入 1 选择默认的 RSA 加密算法</div><div class="line">RSA keys may be between 1024 and 4096 bits long.</div><div class="line">What keysize <span class="keyword">do</span> you want? (2048) 4096</div><div class="line">Requested keysize is 4096 bits</div><div class="line">Please specify how long the key should be valid.</div><div class="line">         0 = key does not expire</div><div class="line">      &lt;n&gt;  = key expires <span class="keyword">in</span> n days</div><div class="line">      &lt;n&gt;w = key expires <span class="keyword">in</span> n weeks</div><div class="line">      &lt;n&gt;m = key expires <span class="keyword">in</span> n months</div><div class="line">      &lt;n&gt;y = key expires <span class="keyword">in</span> n years</div><div class="line">Key is valid <span class="keyword">for</span>? (0)  // 直接回车选择 0 默认永不过期</div><div class="line">Key does not expire at all</div><div class="line">Is this correct? (y/N) y  // 输入 y 确定 下一步</div><div class="line"></div><div class="line">GnuPG needs to construct a user ID to identify your key.</div><div class="line"></div><div class="line">Real name: Test User  // 输入你的姓名</div><div class="line">Email address: <span class="built_in">test</span>@example.com  // 输入你的邮箱</div><div class="line">Comment:  // 输入你的附加信息，可以是你的网络 ID 名称，或者直接回车跳过</div><div class="line">You selected this USER-ID:</div><div class="line">    <span class="string">"Test User &lt;test@example.com&gt;"</span></div><div class="line"></div><div class="line">Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o  // 输入 o 回车后会要求你设置一个私钥的密码</div><div class="line">You need a Passphrase to protect your secret key.</div><div class="line"></div><div class="line">We need to generate a lot of random bytes. It is a good idea to perform</div><div class="line">some other action (<span class="built_in">type</span> on the keyboard, move the mouse, utilize the</div><div class="line">disks) during the prime generation; this gives the random number</div><div class="line">generator a better chance to gain enough entropy.</div><div class="line">We need to generate a lot of random bytes. It is a good idea to perform</div><div class="line">some other action (<span class="built_in">type</span> on the keyboard, move the mouse, utilize the</div><div class="line">disks) during the prime generation; this gives the random number</div><div class="line">generator a better chance to gain enough entropy.</div><div class="line">gpg: key A8C37A46 marked as ultimately trusted</div><div class="line">public and secret key created and signed.</div><div class="line"></div><div class="line">gpg: checking the trustdb</div><div class="line">gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model</div><div class="line">gpg: depth: 0  valid:   2  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 2u</div><div class="line">pub   4096R/F891791F 2017-05-29</div><div class="line">      Key fingerprint = 628C 7B5D D284 224A 3321  4369 BC71 9F68 F891 791F</div><div class="line">uid       [ultimate] Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   4096R/46D4D220 2017-05-29</div></pre></td></tr></table></figure>
<h2 id="2、添加验证密钥"><a href="#2、添加验证密钥" class="headerlink" title="2、添加验证密钥"></a>2、添加验证密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">$ gpg --expert --edit-key F891791F</div><div class="line"></div><div class="line">gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.</div><div class="line"></div><div class="line">Secret key is available.</div><div class="line"></div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: ultimate      validity: ultimate</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">[ultimate] (1). Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; addkey</div><div class="line">This key is not protected.</div><div class="line">Please select what kind of key you want:</div><div class="line">   (3) DSA (sign only)</div><div class="line">   (4) RSA (sign only)</div><div class="line">   (5) Elgamal (encrypt only)</div><div class="line">   (6) RSA (encrypt only)</div><div class="line">   (7) DSA (<span class="built_in">set</span> your own capabilities)</div><div class="line">   (8) RSA (<span class="built_in">set</span> your own capabilities)</div><div class="line">Your selection? 8</div><div class="line"></div><div class="line">Possible actions <span class="keyword">for</span> a RSA key: Sign Encrypt Authenticate</div><div class="line">Current allowed actions: Sign Encrypt</div><div class="line"></div><div class="line">   (S) Toggle the sign capability</div><div class="line">   (E) Toggle the encrypt capability</div><div class="line">   (A) Toggle the authenticate capability</div><div class="line">   (Q) Finished</div><div class="line"></div><div class="line">Your selection? A</div><div class="line"></div><div class="line">Possible actions <span class="keyword">for</span> a RSA key: Sign Encrypt Authenticate</div><div class="line">Current allowed actions: Sign Encrypt Authenticate</div><div class="line"></div><div class="line">   (S) Toggle the sign capability</div><div class="line">   (E) Toggle the encrypt capability</div><div class="line">   (A) Toggle the authenticate capability</div><div class="line">   (Q) Finished</div><div class="line"></div><div class="line">Your selection? S</div><div class="line"></div><div class="line">Possible actions <span class="keyword">for</span> a RSA key: Sign Encrypt Authenticate</div><div class="line">Current allowed actions: Encrypt Authenticate</div><div class="line"></div><div class="line">   (S) Toggle the sign capability</div><div class="line">   (E) Toggle the encrypt capability</div><div class="line">   (A) Toggle the authenticate capability</div><div class="line">   (Q) Finished</div><div class="line"></div><div class="line">Your selection? E</div><div class="line"></div><div class="line">Possible actions <span class="keyword">for</span> a RSA key: Sign Encrypt Authenticate</div><div class="line">Current allowed actions: Authenticate</div><div class="line"></div><div class="line">   (S) Toggle the sign capability</div><div class="line">   (E) Toggle the encrypt capability</div><div class="line">   (A) Toggle the authenticate capability</div><div class="line">   (Q) Finished</div><div class="line"></div><div class="line">Your selection? Q</div><div class="line">RSA keys may be between 1024 and 4096 bits long.</div><div class="line">What keysize <span class="keyword">do</span> you want? (2048) 4096</div><div class="line">Requested keysize is 4096 bits</div><div class="line">Please specify how long the key should be valid.</div><div class="line">         0 = key does not expire</div><div class="line">      &lt;n&gt;  = key expires <span class="keyword">in</span> n days</div><div class="line">      &lt;n&gt;w = key expires <span class="keyword">in</span> n weeks</div><div class="line">      &lt;n&gt;m = key expires <span class="keyword">in</span> n months</div><div class="line">      &lt;n&gt;y = key expires <span class="keyword">in</span> n years</div><div class="line">Key is valid <span class="keyword">for</span>? (0)</div><div class="line">Key does not expire at all</div><div class="line">Is this correct? (y/N) y</div><div class="line">Really create? (y/N) y</div><div class="line">We need to generate a lot of random bytes. It is a good idea to perform</div><div class="line">some other action (<span class="built_in">type</span> on the keyboard, move the mouse, utilize the</div><div class="line">disks) during the prime generation; this gives the random number</div><div class="line">generator a better chance to gain enough entropy.</div><div class="line"></div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: ultimate      validity: ultimate</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">sub  4096R/C10AE6D4  created: 2017-05-29  expires: never       usage: A</div><div class="line">[ultimate] (1). Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; q</div><div class="line">Save changes? (y/N) y</div></pre></td></tr></table></figure>
<h2 id="3、备份密钥"><a href="#3、备份密钥" class="headerlink" title="3、备份密钥"></a>3、备份密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gpg --armor --output public-key.asc --export F891791F  // 导出公钥到文件</div><div class="line">gpg --armor --output private-key.asc --export-secret-keys F891791F  // 导出私钥到文件</div><div class="line">gpg --armor --output subkeys-key.asc --export-secret-subkeys F891791F  // 导出子钥到文件</div></pre></td></tr></table></figure>
<h2 id="4、设置-OpenPGP-卡"><a href="#4、设置-OpenPGP-卡" class="headerlink" title="4、设置 OpenPGP 卡"></a>4、设置 OpenPGP 卡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">$ gpg --card-edit</div><div class="line"></div><div class="line">Application ID ...: D2760001240102000060000000420000</div><div class="line">Version ..........: 2.1</div><div class="line">Manufacturer .....: Yubico</div><div class="line">Serial number ....: 00000042</div><div class="line">Name of cardholder: [not <span class="built_in">set</span>]</div><div class="line">Language prefs ...: [not <span class="built_in">set</span>]</div><div class="line">Sex ..............: unspecified</div><div class="line">URL of public key : [not <span class="built_in">set</span>]</div><div class="line">Login data .......: [not <span class="built_in">set</span>]</div><div class="line">Signature PIN ....: forced</div><div class="line">Key attributes ...: 2048R 2048R 2048R</div><div class="line">Max. PIN lengths .: 127 127 127</div><div class="line">PIN retry counter : 3 0 3</div><div class="line">Signature counter : 0</div><div class="line">Signature key ....: [none]</div><div class="line">Encryption key....: [none]</div><div class="line">Authentication key: [none]</div><div class="line">General key info..: [none]</div><div class="line"></div><div class="line">gpg/card&gt; admin  // 进入管理员模式</div><div class="line">Admin commands are allowed</div><div class="line"></div><div class="line">gpg/card&gt; passwd  // 设置密码</div><div class="line">gpg: OpenPGP card no. D2760001240102000060000000420000 detected</div><div class="line"></div><div class="line">1 - change PIN</div><div class="line">2 - unblock PIN</div><div class="line">3 - change Admin PIN</div><div class="line">4 - <span class="built_in">set</span> the Reset Code</div><div class="line">Q - quit</div><div class="line"></div><div class="line">Your selection? 1  // 输入 1 选择设置普通 PIN 码，默认的 PIN 码为 123456 如果是新设备或重置后的都是默认码。</div><div class="line">PIN changed.       // 设置时会先要求你输入普通 PIN 码的当前的密码，然后是设置新的 PIN 码，再是新的 PIN 码的二次确认。如果当前的 PIN 码输错 3 次就会被锁。</div><div class="line"></div><div class="line">1 - change PIN</div><div class="line">2 - unblock PIN</div><div class="line">3 - change Admin PIN</div><div class="line">4 - <span class="built_in">set</span> the Reset Code</div><div class="line">Q - quit</div><div class="line"></div><div class="line">Your selection? 3  // 输入 3 选择设置 Admin PIN 码，默认的 PIN 码为 12345678 如果是新设备或重置后的都是默认码。</div><div class="line">PIN changed.       // 设置时会先要求你输入 Admin PIN 码的当前的密码，然后是设置新的 PIN 码，再是新的 PIN 码的二次确认。如果当前的 PIN 码输错 3 次就会被锁。</div><div class="line"></div><div class="line">1 - change PIN</div><div class="line">2 - unblock PIN</div><div class="line">3 - change Admin PIN</div><div class="line">4 - <span class="built_in">set</span> the Reset Code</div><div class="line">Q - quit</div><div class="line"></div><div class="line">Your selection? 2  // （可选）输入 2 选择设置 unblock PIN 码，也就解锁码，用于在普通 PIN 码被锁后解锁并重置新的普通 PIN 码。unblock PIN 码只能用于解锁普通 PIN 码，无法用于 Admin PIN 码。</div><div class="line">PIN unblocked and new PIN set.  // 设置时会先要求你输入 Admin PIN 码的当前的密码，然后是设置新的 unblock PIN 码，再是新的 unblock PIN 码的二次确认。</div><div class="line"></div><div class="line">1 - change PIN</div><div class="line">2 - unblock PIN</div><div class="line">3 - change Admin PIN</div><div class="line">4 - <span class="built_in">set</span> the Reset Code</div><div class="line">Q - quit</div><div class="line"></div><div class="line">Your selection? q  // 输入 q 退出密码设置</div><div class="line"></div><div class="line">gpg/card&gt; name  // 设置姓名</div><div class="line">Cardholder<span class="string">'s surname: User  // 持卡人的姓</span></div><div class="line">Cardholder's given name: Test  // 持卡人的名字</div><div class="line"></div><div class="line">gpg/card&gt; lang  // 设置语言</div><div class="line">Language preferences: en</div><div class="line"></div><div class="line">gpg/card&gt; sex  // 设置性别 M 为男性 F 为女性</div><div class="line">Sex ((M)ale, (F)emale or space): m</div><div class="line"></div><div class="line">gpg/card&gt; url  // 设置公钥的网络链接</div><div class="line">URL to retrieve public key: https://www.example.com/public-key.asc  // 链接地址</div><div class="line"></div><div class="line">gpg/card&gt; login  // 设置用户名</div><div class="line">Login data (account name): <span class="built_in">test</span></div><div class="line"></div><div class="line">gpg/card&gt; </div><div class="line"></div><div class="line">Application ID ...: D2760001240102000060000000420000</div><div class="line">Version ..........: 2.1</div><div class="line">Manufacturer .....: Yubico</div><div class="line">Serial number ....: 00000042</div><div class="line">Name of cardholder: Test User</div><div class="line">Language prefs ...: en</div><div class="line">Sex ..............: male</div><div class="line">URL of public key : https://www.example.com/public-key.asc</div><div class="line">Login data .......: <span class="built_in">test</span></div><div class="line">Signature PIN ....: forced</div><div class="line">Key attributes ...: 2048R 2048R 2048R</div><div class="line">Max. PIN lengths .: 127 127 127</div><div class="line">PIN retry counter : 3 3 3  // 3 3 3 分别表示普通 PIN 码、unblock PIN 码、Admin PIN 码的输入错误计数器，默认为 3 输错一次减 1 ，减到 0 会被锁，被锁之前输入正确的 PIN 码会自动还原计数器。</div><div class="line">Signature counter : 0</div><div class="line">Signature key ....: [none]</div><div class="line">Encryption key....: [none]</div><div class="line">Authentication key: [none]</div><div class="line">General key info..: [none]</div><div class="line"></div><div class="line">gpg/card&gt; quit  // 退出 OpenPGP 卡设置</div></pre></td></tr></table></figure>
<ul>
<li>注：在 Yubikey 4 中引入了一个新功能，当用户输入正确的 PIN 码和 <strong>触摸硬件</strong> 后才会进行签名、解密或身份验证操作。具体参考 <a href="https://developers.yubico.com/PGP/Card_edit.html" target="_blank" rel="external">YubiKey 4 touch</a> 里的内容。</li>
</ul>
<h2 id="5、移动密钥到-YubiKey-4"><a href="#5、移动密钥到-YubiKey-4" class="headerlink" title="5、移动密钥到 YubiKey 4"></a>5、移动密钥到 YubiKey 4</h2><ul>
<li>注：OpenPGP Card 是支持在自身硬件上直接生成密钥对的，但多数使用 PGP 非对称加密的用户都有自己的密钥所以这里使用移动已有密钥到 YubiKey 里。直接在硬件上生成密钥对是在 admin 模式下使用 <code>generate</code> 命令，生成的密钥是无法导出备份的！</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">$ gpg --edit-key F891791F</div><div class="line"></div><div class="line">gpg (GnuPG) 2.0.30; Copyright (C) 2015 Free Software Foundation, Inc.</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.</div><div class="line"></div><div class="line">Secret key is available.</div><div class="line"></div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: ultimate      validity: ultimate</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">sub  4096R/C10AE6D4  created: 2017-05-29  expires: never       usage: A</div><div class="line">[ultimate] (1). Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; toggle</div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">ssb  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">ssb  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; keytocard</div><div class="line">Really move the primary key? (y/N) y</div><div class="line">Signature key ....: [none]</div><div class="line">Encryption key....: [none]</div><div class="line">Authentication key: [none]</div><div class="line"></div><div class="line">Please select <span class="built_in">where</span> to store the key:</div><div class="line">   (1) Signature key</div><div class="line">   (3) Authentication key</div><div class="line">Your selection? 1</div><div class="line"></div><div class="line">You need a passphrase to unlock the secret key <span class="keyword">for</span></div><div class="line">user: <span class="string">"Test User &lt;test@example.com&gt;"</span></div><div class="line">4096-bit RSA key, ID F891791F, created 2017-05-29</div><div class="line"></div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">ssb  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; key 1</div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb* 4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">ssb  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; keytocard</div><div class="line">Signature key ....: 743A 2D58 688A 9E9E B4FC  493F 70D1 D7A8 13AF CE85</div><div class="line">Encryption key....: [none]</div><div class="line">Authentication key: [none]</div><div class="line"></div><div class="line">Please select <span class="built_in">where</span> to store the key:</div><div class="line">   (2) Encryption key</div><div class="line">Your selection? 2</div><div class="line"></div><div class="line">You need a passphrase to unlock the secret key <span class="keyword">for</span></div><div class="line">user: <span class="string">"Test User &lt;test@example.com&gt;"</span></div><div class="line">4096-bit RSA key, ID 46D4D220, created 2017-05-29</div><div class="line"></div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb* 4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; key 1</div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; key 2</div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb* 4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; keytocard</div><div class="line">Signature key ....: 743A 2D58 688A 9E9E B4FC  493F 70D1 D7A8 13AF CE85</div><div class="line">Encryption key....: 8D17 89A0 5C2F B804 22E5  5C04 8A68 9CC0 D742 1CDF</div><div class="line">Authentication key: [none]</div><div class="line"></div><div class="line">Please select <span class="built_in">where</span> to store the key:</div><div class="line">   (3) Authentication key</div><div class="line">Your selection? 3</div><div class="line"></div><div class="line">You need a passphrase to unlock the secret key <span class="keyword">for</span></div><div class="line">user: <span class="string">"Test User &lt;test@example.com&gt;"</span></div><div class="line">4096-bit RSA key, ID C10AE6D4, created 2017-05-29</div><div class="line"></div><div class="line"></div><div class="line">sec  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">ssb* 4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">                     card-no: 0006 00000042</div><div class="line">(1)  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; quit</div><div class="line">Save changes? (y/N) y</div></pre></td></tr></table></figure>
<p>当前密钥移动到 OpenPGP 卡后就没法再导出无须硬件卡就可直接使用的密钥了，如果你在上面的步骤没有导出备份密钥，那么 OpenPGP 卡里是私钥将是你唯一的私钥且没法备份。</p>
<p>查看 OpenPGP 卡状态信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ gpg --card-status</div><div class="line"></div><div class="line">Application ID ...: D2760001240102000060000000420000</div><div class="line">Version ..........: 2.1</div><div class="line">Manufacturer .....: Yubico</div><div class="line">Serial number ....: 00000042</div><div class="line">Name of cardholder: Test User</div><div class="line">Language prefs ...: en</div><div class="line">Sex ..............: male</div><div class="line">URL of public key : https://www.example.com/public-key.asc</div><div class="line">Login data .......: <span class="built_in">test</span></div><div class="line">Signature PIN ....: forced</div><div class="line">Key attributes ...: 4096R 4096R 4096R</div><div class="line">Max. PIN lengths .: 127 127 127</div><div class="line">PIN retry counter : 3 3 3</div><div class="line">Signature counter : 0</div><div class="line">Signature key ....: 743A 2D58 688A 9E9E B4FC  493F 70D1 D7A8 13AF CE85</div><div class="line">      created ....: 2017-05-29 22:11:07</div><div class="line">Encryption key....: 8D17 89A0 5C2F B804 22E5  5C04 8A68 9CC0 D742 1CDF</div><div class="line">      created ....: 2017-05-29 22:11:07</div><div class="line">Authentication key: 628C 7B5D D284 224A 3321  4369 BC71 9F68 F891 791F</div><div class="line">      created ....: 2017-05-29 22:11:07</div><div class="line">General key info..: pub  4096R/F891791F 2017-05-29 Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sec&gt;  4096R/F891791F  created: 2017-05-29  expires: never</div><div class="line">                      card-no: 0006 00000042</div><div class="line">ssb&gt;  4096R/46D4D220  created: 2017-05-29  expires: never</div><div class="line">                      card-no: 0006 00000042</div><div class="line">ssb&gt;  4096R/C10AE6D4  created: 2017-05-29  expires: never</div><div class="line">                      card-no: 0006 00000042</div></pre></td></tr></table></figure>
<h2 id="6、在其他电脑上使用"><a href="#6、在其他电脑上使用" class="headerlink" title="6、在其他电脑上使用"></a>6、在其他电脑上使用</h2><p>当你配置好了一个 YubiKey 的 OpenPGP 智能卡后你可以在其他任何支持 PGP 客户端的电脑上插上 YubiKey 使用你是私钥进行签名、加密、认证操作，而不用担心私钥泄露。</p>
<p>从文件导入公钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --import public-key.asc</div></pre></td></tr></table></figure>
<p>或者从公钥服务器上导入公钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --keyserver keys.gnupg.net --recv 0xF891791F</div></pre></td></tr></table></figure>
<p>插入 YubiKey 查看 OpenPGP 卡信息，这一步会自动映射 YubiKey 里的私钥到 OpenPGP 的配置里。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --card-status</div></pre></td></tr></table></figure>
<p>设置密钥在本系统上的信任状态</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">$ gpg --edit-key F891791F</div><div class="line"></div><div class="line">gpg (GnuPG) 1.4.21; Copyright (C) 2015 Free Software Foundation, Inc.</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.</div><div class="line"></div><div class="line"></div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: ultimate      validity: ultimate</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">sub  4096R/C10AE6D4  created: 2017-05-29  expires: never       usage: A</div><div class="line">[ unknown] (1). Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">gpg&gt; trust</div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: unknown      validity: unknown</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">sub  4096R/C10AE6D4  created: 2017-05-29  expires: never       usage: A</div><div class="line">[unknown] (1). Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line"></div><div class="line">Please decide how far you trust this user to correctly verify other users<span class="string">' keys</span></div><div class="line">(by looking at passports, checking fingerprints from different sources, etc.)</div><div class="line"></div><div class="line">  1 = I don't know or won<span class="string">'t say</span></div><div class="line">  2 = I do NOT trust</div><div class="line">  3 = I trust marginally</div><div class="line">  4 = I trust fully</div><div class="line">  5 = I trust ultimately</div><div class="line">  m = back to the main menu</div><div class="line"></div><div class="line">Your decision? 5  // 输入 5 设置为终极信任</div><div class="line">Do you really want to set this key to ultimate trust? (y/N) y</div><div class="line"></div><div class="line">pub  4096R/F891791F  created: 2017-05-29  expires: never       usage: SC</div><div class="line">                     trust: ultimate      validity: unknown</div><div class="line">sub  4096R/46D4D220  created: 2017-05-29  expires: never       usage: E</div><div class="line">sub  4096R/C10AE6D4  created: 2017-05-29  expires: never       usage: A</div><div class="line">[unknown] (1). Test User &lt;test@example.com&gt;</div><div class="line">Please note that the shown key validity is not necessarily correct</div><div class="line">unless you restart the program.</div><div class="line"></div><div class="line">gpg&gt; q</div></pre></td></tr></table></figure>
<p>查看系统上的密钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$ gpg -k  // 查看所有的公钥</div><div class="line"></div><div class="line">~/.gnupg/pubring.gpg</div><div class="line">-----------------------------------------------</div><div class="line">pub   4096R/F891791F 2017-05-29</div><div class="line">uid       [ultimate] Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   4096R/46D4D220 2017-05-29</div><div class="line">sub   4096R/C10AE6D4 2017-05-29</div><div class="line"></div><div class="line">$ gpg -K  // 查看所有的私钥</div><div class="line"></div><div class="line">~/.gnupg/secring.gpg</div><div class="line">-----------------------------------------------</div><div class="line">sec&gt;  4096R/F891791F 2017-05-29</div><div class="line">      Card serial no. = 0006 00000042  // 这里可以看出这个私钥的位置是指向 OpenPGP 智能卡的</div><div class="line">uid                  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">ssb&gt;  4096R/46D4D220 2017-05-29</div><div class="line">ssb&gt;  4096R/C10AE6D4 2017-05-29</div></pre></td></tr></table></figure>
<p>公钥加密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -ea -r <span class="built_in">test</span>@example.com msg.txt</div></pre></td></tr></table></figure>
<p>私钥解密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg msg.txt.asc</div></pre></td></tr></table></figure>
<p>文件签名</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -o msg.txt.sig -ab msg.txt</div></pre></td></tr></table></figure>
<p>签名验证</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --verify msg.txt.sig</div></pre></td></tr></table></figure>
<h2 id="7、重置-YubiKey-4-PGP-功能"><a href="#7、重置-YubiKey-4-PGP-功能" class="headerlink" title="7、重置 YubiKey 4 PGP 功能"></a>7、重置 YubiKey 4 PGP 功能</h2><p>新建一个 <code>reset.txt</code> 的文本文件，并写入以下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">/hex</div><div class="line">scd serialno</div><div class="line">scd apdu 00 20 00 81 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 81 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 81 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 81 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 83 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 83 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 83 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 20 00 83 08 40 40 40 40 40 40 40 40</div><div class="line">scd apdu 00 e6 00 00</div><div class="line">scd apdu 00 44 00 00</div><div class="line">/echo Card has been successfully reset.</div></pre></td></tr></table></figure>
<p>重置 YubiKey 4 的 OpenPGP 卡功能</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg-connect-agent -r reset.txt</div></pre></td></tr></table></figure>
<p>重新插拔 YubiKey 并查看 OpenPGP 卡状态信息，如果查看信息遇到错误可能是 OpenPGP 卡功能还没打开，需要通过命令手动启用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ gpg --card-status</div><div class="line"></div><div class="line">gpg: selecting openpgp failed: Card error  // OpenPGP Card 错误</div><div class="line">gpg: OpenPGP card not available: Card error</div></pre></td></tr></table></figure>
<p>启用 OpenPGP 卡功能</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gpg-connect-agent -–hex</div><div class="line">&gt; scd apdu 00 44 00 00</div><div class="line">D[0000]  90 00                                              ..</div><div class="line">OK</div><div class="line">&gt;  // 直接回车推出</div></pre></td></tr></table></figure>
<p>手动启用 <code>OK</code> 后你可能还需要重新插拔 YubiKey 再重新查看 OpenPGP 卡状态信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ gpg --card-status</div><div class="line"></div><div class="line">Application ID ...: D2760001240102000060000000420000</div><div class="line">Version ..........: 2.1</div><div class="line">Manufacturer .....: Yubico</div><div class="line">Serial number ....: 00000042</div><div class="line">Name of cardholder: [not <span class="built_in">set</span>]</div><div class="line">Language prefs ...: [not <span class="built_in">set</span>]</div><div class="line">Sex ..............: unspecified</div><div class="line">URL of public key : [not <span class="built_in">set</span>]</div><div class="line">Login data .......: [not <span class="built_in">set</span>]</div><div class="line">Signature PIN ....: forced</div><div class="line">Key attributes ...: 2048R 2048R 2048R</div><div class="line">Max. PIN lengths .: 127 127 127</div><div class="line">PIN retry counter : 3 0 3</div><div class="line">Signature counter : 0</div><div class="line">Signature key ....: [none]</div><div class="line">Encryption key....: [none]</div><div class="line">Authentication key: [none]</div><div class="line">General key info..: [none]</div></pre></td></tr></table></figure>
<p>重置后的 OpenPGP 卡可以重新进行配置。</p>
<hr>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul>
<li><a href="https://www.gnupg.org/gph/en/manual.html" target="_blank" rel="external">The GNU Privacy Handbook</a></li>
<li><a href="https://developers.yubico.com/PGP/" target="_blank" rel="external">YubiKey PGP</a></li>
<li><a href="https://www.yubico.com/support/knowledge-base/categories/articles/use-yubikey-openpgp/" target="_blank" rel="external">How to Use Your YubiKey With OpenPGP</a></li>
<li><a href="https://developers.yubico.com/yubikey-piv-manager/PIN_and_Management_Key.html" target="_blank" rel="external">PIN and Management Key</a></li>
<li><a href="https://www.yubico.com/support/knowledge-base/categories/articles/reset-applet-yubikey/" target="_blank" rel="external">How to Reset Your Applet on Your YubiKey</a></li>
<li><a href="https://developers.yubico.com/ykneo-openpgp/ResetApplet.html" target="_blank" rel="external">YubiKey ResetApplet</a></li>
<li><a href="https://openpgpcard.org/makecard/" target="_blank" rel="external">Make OpenPGP Card</a></li>
<li><a href="https://github.com/drduh/YubiKey-Guide" target="_blank" rel="external">Guide to using YubiKey as a SmartCard for GPG and SSH</a></li>
<li><a href="https://spin.atomicobject.com/2014/02/09/gnupg-openpgp-smartcard/" target="_blank" rel="external">Using an OpenPGP Smartcard with GnuPG</a></li>
<li><a href="https://www.sidorenko.io/blog/2014/11/04/yubikey-slash-openpgp-smartcards-for-newbies/" target="_blank" rel="external">Yubikey/OpenPGP Smartcards for Newbies</a></li>
<li><a href="https://www.esev.com/blog/post/2015-01-pgp-ssh-key-on-yubikey-neo/" target="_blank" rel="external">PGP and SSH keys on a Yubikey NEO</a></li>
<li><a href="https://www.jfry.me/articles/2015/gpg-smartcard/" target="_blank" rel="external">Using GPG with Smart Cards</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.yubico.com/&quot;&gt;YubiKey&lt;/a&gt; 是一款用于安全认证的硬件工具，其中的 YubiKey 4, YubiKey 4 Nano, YubiKey 4C, YubiKey NEO, YubiKey NEO-n，这些产品型号是包含 OpenPGP Card 功能的。&lt;/p&gt;
&lt;p&gt;你可将你的私钥移动到 YubiKey 里，在需要使用的时候插上，而不必担心私钥泄露或被恶意程序盗取，并且支持在多种操作系统上使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="YubiKey" scheme="https://blog.iternull.com/tags/YubiKey/"/>
    
      <category term="PGP" scheme="https://blog.iternull.com/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>ChameleonMini 使用教程</title>
    <link href="https://blog.iternull.com/posts/2017/05/22/ChameleonMini-Tutorial.html"/>
    <id>https://blog.iternull.com/posts/2017/05/22/ChameleonMini-Tutorial.html</id>
    <published>2017-05-22T15:58:47.000Z</published>
    <updated>2017-07-16T17:28:39.264Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/emsec/ChameleonMini" target="_blank" rel="external">ChameleonMini</a> 是一款可编程的 NFC 安全分析工具的开源硬件项目，可以用于嗅探、模拟和克隆非接触式智能卡 (RFID Card)。<br>ChameleonMini 常见的有两个版本 <strong>ChameleonMini Rev.E</strong> 与 <strong>ChameleonMini Rev.G</strong> 其中 Rev.G 是最新升级的版本，自带电池供电。</p>
<a id="more"></a>
<h4 id="Rev-G-版本特点"><a href="#Rev-G-版本特点" class="headerlink" title="Rev.G 版本特点"></a>Rev.G 版本特点</h4><ul>
<li>固件支持 ISO14443A 编解码器（仿真和读卡器）</li>
<li>固件支持 Mifare Classic 1K 和 4K 仿真（ 4 和 7 字节 UID）</li>
<li>固件支持 Mifare Ultralight 仿真</li>
<li>硬件支持 ASK 调制（均为 10％ 和 100％ ），可覆盖几乎所有可用的卡标准</li>
<li>使用子载波的 ASK 和 BPSK 负载调制的硬件支持</li>
<li>模块化固件结构允许其他卡和标准的易扩展性</li>
<li>支持通过 Atmel DFU 引导加载程序，快速可靠的固件更新，因此只需要一次编程硬件</li>
<li>可以使用 <a href="http://www.fourwalledcubicle.com/LUFA.php" target="_blank" rel="external">LUFA USB stack</a> 通过 CDC 使用完全记录的 AT 类命令进行控制</li>
<li>可以存储最多 8 个虚拟化卡，每个卡大小最多可达 8 KB，存储在 ChameleonMini 的非易失性存储器中</li>
<li>卡数据可以通过命令行和 X-MODEM 轻松上传和下载</li>
<li>符合 ISO14443A 标准的卡 UID 可以在阅读器模式下轻松获得</li>
<li>识别 ISO14443A 卡的类型 (Mifare Ultralight, Mifare Classic 1k, …) 也可以在阅读器模式</li>
<li>透明/手动 ISO14443A 阅读器：通过发送自定义数据位从而获取卡片内的数据应答</li>
<li>从而允许 ChameleonMini 与标准串口终端软件以及用户编写的脚本和应用程序连接</li>
</ul>
<h3 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h3><p>ChameleonMini 常见的支持两种跨平台的方式来进行硬件的操控，一种是使用命令行终端软件用命令进行操控，另一种是使用官方自带的一个用 Python 编写的工具实现操控。在 Windows 平台上还有第三方编写的 GUI 客户端软件。</p>
<h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>在 Windows 上使用需要先安装驱动，安装方法参考 <a href="http://wiki.radiowar.org/Proxmark3#Proxmark3.E9.A9.B1.E5.8A.A8.E5.AE.89.E8.A3.85" target="_blank" rel="external">Proxmark3 驱动安装</a>，驱动文件在 <a href="https://github.com/emsec/ChameleonMini" target="_blank" rel="external">ChameleonMini</a> 项目文件的 ChameleonMini/Drivers/ 文件夹里（RevE 版本在 RevE/ 文件夹里）。<br>Windows 上也能通过诸如 <a href="https://osdn.net/projects/ttssh2/releases/" target="_blank" rel="external">TeraTerm</a>, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="external">PuTTY</a> 之类的支持 COM 串口通信的命令行软件进行操作。这里不重复讲解，可以参考 Linux 部分的使用方法。</p>
<p>ChameleonMini GUI 客户端：<a href="http://bronken.de/chameleonminigui/" target="_blank" rel="external">http://bronken.de/chameleonminigui/</a></p>
<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>在 Linux 上可以使用 <code>cu, minicom, socat</code> 等客户端对硬件进行控制，这里我们使用 <code>socat</code> 工具。</p>
<p>安装 socat</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install socat</div></pre></td></tr></table></figure>
<p>连接 ChameleonMini 到电脑，并通过命令行控制设备。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">socat - /dev/ttyACM0,crnl</div></pre></td></tr></table></figure>
<p>获取固件版本信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">VERSION?    // 你输入的命令（这里并不会有命令行提示符显示）</div><div class="line">101:OK WITH TEXT    // 设备返回的确认信息</div><div class="line">Chameleon-Mini 150304 using LUFA 130901 compiled with AVR-GCC 4.8.1    // 设备返回的数据信息</div></pre></td></tr></table></figure>
<p>获取配置与设置配置信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">config?                 // 你输入的命令（查看当前配置的卡信息）</div><div class="line">101:OK WITH TEXT        // 设备返回的确认信息</div><div class="line">MF_UL TRALIGHT          // 设备返回的数据信息</div><div class="line">config                  // 你输入的命令（查看所有可配置的卡）</div><div class="line">101:OK WITH TEXT        // 设备返回的确认信息</div><div class="line">NONE,MF_ULTRALIGHT,MF_CLASSIC_1K,MF_PLUS1K_7B,MF_CLASSIC_4K,ISO14443A_SNIFF    // 设备返回的数据信息</div><div class="line">config=MF_CLASSIC_1K    // 你输入的命令（配置当前卡为 Mifare Classic 1K 卡）</div><div class="line">100:OK                  // 设备返回的确认信息</div><div class="line">config?                 // 你输入的命令（查看当前配置的卡信息）</div><div class="line">101:OK WITH TEXT        // 设备返回的确认信息</div><div class="line">MF_CLASSIC_1K           // 设备返回的数据信息（当前配置为 Mifare Classic 1K 卡）</div></pre></td></tr></table></figure>
<p>设置模拟 Mifare Classic 1K 卡的 UID</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">uid?                // 你输入的命令（查看当前的 UID）</div><div class="line">101:OK WITH TEXT    // 设备返回的确认信息</div><div class="line">00000000            // 设备返回的数据信息（当前 UID 为 00000000）</div><div class="line">uid=ABCD1234        // 你输入的命令（设置 UID 为 ABCD1234）</div><div class="line">100:OK              // 设备返回的确认信息</div><div class="line">uid?                // 你输入的命令（查看当前的 UID）</div><div class="line">101:OK WITH TEXT    // 设备返回的确认信息</div><div class="line">ABCD1234            // 设备返回的数据信息（当前 UID 为 ABCD1234）</div></pre></td></tr></table></figure>
<h4 id="ChamTool-py"><a href="#ChamTool-py" class="headerlink" title="ChamTool.py"></a>ChamTool.py</h4><p>ChamTool.py 是 ChameleonMini 项目官方自带的一个用 Python 编写的客户端工具，可跨平台使用。</p>
<p>安装 Python 和依赖包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get install python3</div><div class="line"><span class="built_in">cd</span> ChameleonMini/Software/</div><div class="line">pip install -r requirements.txt</div></pre></td></tr></table></figure>
<p>使用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">$ ./chamtool.py -h</div><div class="line">usage: chamtool.py [-h] [-v] [-p COMPORT] [-u DUMPFILE] [<span class="_">-d</span> DUMPFILE]</div><div class="line">                   [<span class="_">-l</span> LOGFILE] [-i] [<span class="_">-s</span> [&#123;1,2,3,4,5,6,7,8&#125;]] [-U [UID]]</div><div class="line">                   [-c [CFGNAME]] [-lb [ACTION]] [-rb [ACTION]]</div><div class="line">                   [-gl [FUNCTION]] [-rl [FUNCTION]]</div><div class="line"></div><div class="line">Controls the Chameleon through the <span class="built_in">command</span> line</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></div><div class="line">  -v, --verbose         output verbose</div><div class="line">  -p COMPORT, --port COMPORT</div><div class="line">                        specify device<span class="string">'s comport</span></div><div class="line"></div><div class="line">Chameleon commands:</div><div class="line">  These arguments can appear multiple times and are executed in the order</div><div class="line">  they are given on the command line. Some of these arguments can be used</div><div class="line">  with '?<span class="string">' as parameter to get a list of suggestions.</span></div><div class="line"></div><div class="line">  -u DUMPFILE, --upload DUMPFILE</div><div class="line">                        upload a card dump</div><div class="line">  -d DUMPFILE, --download DUMPFILE</div><div class="line">                        download a card dump</div><div class="line">  -l LOGFILE, --log LOGFILE</div><div class="line">                        download the device log</div><div class="line">  -i, --info            retrieve the version information</div><div class="line">  -s [&#123;1,2,3,4,5,6,7,8&#125;], --setting [&#123;1,2,3,4,5,6,7,8&#125;]</div><div class="line">                        retrieve or set the current setting</div><div class="line">  -U [UID], --uid [UID]</div><div class="line">                        retrieve or set the current UID</div><div class="line">  -c [CFGNAME], --config [CFGNAME]</div><div class="line">                        retrieve or set the current configuration</div><div class="line">  -lb [ACTION], --lbutton [ACTION]</div><div class="line">                        retrieve or set the current left button action</div><div class="line">  -rb [ACTION], --rbutton [ACTION]</div><div class="line">                        retrieve or set the current right button action</div><div class="line">  -gl [FUNCTION], --gled [FUNCTION]</div><div class="line">                        retrieve or set the current green led function</div><div class="line">  -rl [FUNCTION], --rled [FUNCTION]</div><div class="line">                        retrieve or set the current red led function</div></pre></td></tr></table></figure>
<h3 id="读取-RFID-卡"><a href="#读取-RFID-卡" class="headerlink" title="读取 RFID 卡"></a>读取 RFID 卡</h3><p>打开终端输入命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CONFIG=ISO14443A READER    // 你输入的命令</div><div class="line">_G@ISO14443A READER_100:OK    // 设备返回的确认信息</div><div class="line"></div><div class="line">IDENTIFY    // 你输入的命令</div><div class="line">101:OK WITH TEXT    // 设备返回的确认信息</div><div class="line">MIFARE Cڱ__ 1▒ .A.▒s.A@.▒t▒6u/=<span class="variable">$A</span>    // 设备返回的数据信息（下同）</div><div class="line">ATQA: 0400</div><div class="line">UID: ABCD1234</div><div class="line">SAK: 08</div></pre></td></tr></table></figure>
<h3 id="嗅探-RFID-卡"><a href="#嗅探-RFID-卡" class="headerlink" title="嗅探 RFID 卡"></a>嗅探 RFID 卡</h3><p>进行嗅探 RFID 卡你还需要有一个 ACR122U 读卡器和一张符合 ISO14443A 的被嗅探 RFID 卡。</p>
<p>首先将 ACR122U 和 ChameleonMini 连接到电脑，再将 ChameleonMini 放置于 ACR122U 上，被嗅探的卡放在与 ChameleonMini 上。</p>
<p>在终端程序上输入命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">LOGMODE=TERMINAL    // 你输入的命令</div><div class="line">100:OKE=TERMINAL    // 设备返回的确认信息</div></pre></td></tr></table></figure>
<p>开始嗅探</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CONFIG=ISO14443A_SNIFF    // 你输入的命令</div><div class="line">100:OK=ISO14443A_SNIFF    // 设备返回的确认信息</div><div class="line">...</div><div class="line">...                       // 返回类似乱码的嗅探信息（此处省略）</div><div class="line">...</div></pre></td></tr></table></figure>
<p><img src="//files.iternull.com/images/2017-05-22_01-0001.png" alt=""></p>
<p>停止嗅探</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CONFIG=NONE</div></pre></td></tr></table></figure>
<p>使用 ChamTool.py 工具嗅探</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./chamtool.py -v -p /dev/ttyACM0 -c ISO14443A_SNIFF</div></pre></td></tr></table></figure>
<h3 id="模拟-RFID-卡"><a href="#模拟-RFID-卡" class="headerlink" title="模拟 RFID 卡"></a>模拟 RFID 卡</h3><p>使用 ChameleonMini 模拟另一张 RFID 卡，需要你先获得那张卡的完整扇区数据再将数据上传到 ChameleonMini 硬件存储内开始模拟，文件格式为 <code>.mfd</code> 的十六进制文件。<br>获取原始 RFID 的完整扇区数据你可以使用 Proxmark3 或者 ACR122U or PN532 + mfoc 破解获得 RFID 卡所有扇区的 Key 并 Dump 所有扇区的数据。<br>Dump 下来的数据可能会是 ASCII 的存文本格式或者是与卡内格式一样的十六进制，ChameleonMini 只支持导入十六进制格式的，如果是其他格式数据你先需要将它转换为十六进制的文件。<br>Proxmark3 客户端内自带转换工具 <code>pm3_eml2mfd.py</code> ，你也可以手动使用 <code>HxD Hex Editor</code>, <code>WinHex</code> 等 十六进制编辑器创建编辑一张卡的数据。<br>当有了 Dump 文件后你可以使用 SecureCRT 或其他终端连接到 ChameleonMini 串口把文件上传上去。<br>在终端输入 <code>UPLOAD</code> 命令，打开 传输 &gt; 发送 Xmodem &gt; 找到你要上传的文件。<br>上传完成后再在终端设置你的卡片类型，如：<code>CONFIG=MF_CLASSIC_1K</code> 设置卡片为 Mifare Classic 1K 卡</p>
<p>使用 ChamTool.py 工具上传卡数据文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./chamtool.py -p /dev/ttyACM0 -u card.mfd</div></pre></td></tr></table></figure>
<h3 id="模拟多张-RFID-卡"><a href="#模拟多张-RFID-卡" class="headerlink" title="模拟多张 RFID 卡"></a>模拟多张 RFID 卡</h3><p>模拟多张卡需要用到 ChameleonMini 的按钮功能用以切换不同的卡片，并可把不同的卡片数据上传上去，按钮功能是可自定义配置，最多支持 8 张卡的存储和切换。</p>
<p>在终端输入 <code>button</code> 命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">button    // 查看按钮的配置选项</div><div class="line">101:OK WITH TEXT</div><div class="line">NONE,UID_RANDOM,UID_LEFT_INCREMENT,UID_RIGHT_INCREMENT,UID_LEFT_DECREMENT,UID_RIGHT_DECREMENT,CYCLE_SETTINGS,STORE_MEM,RECALL_MEM</div></pre></td></tr></table></figure>
<p>配置按钮功能为切换卡片</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">button=CYCLE_SETTINGS    // 开启按钮的卡片切换功能</div><div class="line">100:OK</div><div class="line">setting?    // 查看当前的卡片编号</div><div class="line">101:OK WITH TEXT</div><div class="line">1</div><div class="line">config?    // 查看当前卡片类型的配置信息</div><div class="line">101:OK WITH TEXT</div><div class="line">MF_CLASSIC_1K</div><div class="line">uid?    // 查看当前的 UID</div><div class="line">101:OK WITH TEXT</div><div class="line">ABCD1234</div><div class="line">setting=2    // 设置卡片编号</div><div class="line">100:OK</div><div class="line">setting?    // 查看当前的卡片编号</div><div class="line">101:OK WITH TEXT</div><div class="line">2</div><div class="line">config=MF_ULTRALIGHT    // 设置卡片类型</div><div class="line">100:OK</div><div class="line">config?    // 查看当前卡片类型的配置信息</div><div class="line">101:OK WITH TEXT</div><div class="line">MF_ULTRALIGHT</div><div class="line">uid=AABBCCDDEEFF11    // 设置 UID</div><div class="line">100:OK</div><div class="line">uid?    // 查看当前的 UID</div><div class="line">101:OK WITH TEXT</div><div class="line">AABBCCDDEEFF11</div></pre></td></tr></table></figure>
<p>按钮的功能配置和说明</p>
<table>
<thead>
<tr>
<th style="text-align:left">按钮配置</th>
<th style="text-align:left">功能说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">NONE</td>
<td style="text-align:left">什么都不做</td>
</tr>
<tr>
<td style="text-align:left">UID_RANDOM</td>
<td style="text-align:left">生成随机 UID</td>
</tr>
<tr>
<td style="text-align:left">UID_LEFT_INCREMENT</td>
<td style="text-align:left">将 UID 的最左十六进制值增加 1</td>
</tr>
<tr>
<td style="text-align:left">UID_RIGHT_INCREMENT</td>
<td style="text-align:left">将 UID 的最右边的十六进制值增加 1</td>
</tr>
<tr>
<td style="text-align:left">UID_LEFT_DECREMENT</td>
<td style="text-align:left">将 UID 的最左边十六进制值减少 1</td>
</tr>
<tr>
<td style="text-align:left">UID_RIGHT_DECREMENT</td>
<td style="text-align:left">将 UID 的最右边的十六进制值减少 1</td>
</tr>
<tr>
<td style="text-align:left">CYCLE_SETTINGS</td>
<td style="text-align:left">允许按钮在多张卡之间切换</td>
</tr>
<tr>
<td style="text-align:left">STORE_MEM</td>
<td style="text-align:left">存储内存</td>
</tr>
<tr>
<td style="text-align:left">RECALL_MEM</td>
<td style="text-align:left">记忆输出（还原存储的内存）</td>
</tr>
</tbody>
</table>
<h3 id="烧录固件"><a href="#烧录固件" class="headerlink" title="烧录固件"></a>烧录固件</h3><p>ChameleonMini 的 MCU 使用的是 Atmel 的 AVR ATxmega 系列的处理器，烧录固件的方法与烧录其他 AVR 单片机固件的方法一样。<br>可以使用 AVRISP mkII, USBasp 等编程硬件工具加上 Atmel Studio, AVRDUDE 等编程软件客户端，烧录 Bootloader 和固件。<br>接线针脚，Chameleon-Mini 底部一排未焊接的焊盘是标准的 ATxmega 编程引脚，以有贴片元件的一面为正面，正面 3 个引脚分别是 <code>VCC</code>, <code>NC</code>, <code>GND</code> 正对的背面 3 个分别是 <code>PDI_DATA</code>, <code>NC</code>, <code>PDI_CLK/RST</code> 。</p>
<p><img src="//files.iternull.com/images/2017-05-22_01-0002.jpg" alt=""></p>
<h3 id="升级固件"><a href="#升级固件" class="headerlink" title="升级固件"></a>升级固件</h3><p>Chameleon Mini 使用了 USB DFU Bootloader，可直接使用 USB 连接硬件升级固件。(只有烧录了 Bootloader 的才支持，自己制作的裸板需要先烧录 Bootloader。)</p>
<p>Linux 用户升级固件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install avra avrdude</div><div class="line">avrdude -c flip2 -p ATXMega128A4U -B 60 -P usb -U application:w:Chameleon-Mini.hex:i -U eeprom:w:Chameleon-Mini.eep:i</div></pre></td></tr></table></figure>
<p>Windows 用户升级固件</p>
<ol>
<li>下载 <a href="https://sourceforge.net/projects/dfu-programmer/files/dfu-programmer/0.7.2/dfu-programmer-win-0.7.2.zip/download" target="_blank" rel="external">dfu-programmer 0.7.2</a></li>
<li>解压到目录，然后打开文件夹 dfu-prog-usb-1.2.2 ，安装 <code>atmel_usb_dfu.inf</code> 驱动程序。（右键单击 &gt; 安装）</li>
<li>将 dfu-programmer.exe 复制到 hex 和 eep 文件的同一目录里。</li>
<li>将 ChameleonFirmwareUpgrade.bat 复制在与 hex 和 eep 文件相同的目录里。</li>
<li>以管理员身份运行 ChameleonFirmwareUpgrade.bat 等待固件升级终止。（成功后 ChameleonMini 的绿色 LED 应该亮起来）</li>
</ol>
<hr>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><ul>
<li><a href="https://github.com/emsec/ChameleonMini/wiki" target="_blank" rel="external">ChameleonMini Wiki</a></li>
<li><a href="https://rawgit.com/emsec/ChameleonMini/master/Doc/Doxygen/html/index.html" target="_blank" rel="external">Chameleon-Mini Documentation</a></li>
<li><a href="https://www.kickstarter.com/projects/1980078555/chameleonmini-a-versatile-nfc-card-emulator-and-mo" target="_blank" rel="external">Kickstarter - ChameleonMini</a></li>
<li><a href="https://store.ryscc.com/products/chameleonmini" target="_blank" rel="external">ChameleonMini - Rysc Corp</a></li>
<li><a href="https://store.ryscc.com/blogs/news/54097857-getting-started-with-the-chameleonmini" target="_blank" rel="external">Getting Started with the ChameleonMini RevE-2</a></li>
<li><a href="https://store.ryscc.com/blogs/news/34542273-unleash-the-chameleons" target="_blank" rel="external">Unleash the Chameleons!</a></li>
<li><a href="https://store.ryscc.com/blogs/news/86357121-installing-driver-for-chameleonmini-on-windows-7" target="_blank" rel="external">Installing Driver for ChameleonMini on Windows 7</a></li>
<li><a href="https://store.ryscc.com/blogs/news/77102465-sniffing-tags-with-the-chameleonmini" target="_blank" rel="external">Sniffing Tags with the ChameleonMini</a></li>
<li><a href="https://store.ryscc.com/blogs/news/39859649-emulating-mifare-4k-tags-with-the-chameleonmini" target="_blank" rel="external">Emulating Mifare 4K Tags with the ChameleonMini RevE-2</a></li>
<li><a href="https://store.ryscc.com/blogs/news/37733761-how-to-emulate-multiple-smart-cards-at-once-using-the-chameleonmini" target="_blank" rel="external">How to Emulate Multiple Smart Cards at once using the ChameleonMini</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/emsec/ChameleonMini&quot;&gt;ChameleonMini&lt;/a&gt; 是一款可编程的 NFC 安全分析工具的开源硬件项目，可以用于嗅探、模拟和克隆非接触式智能卡 (RFID Card)。&lt;br&gt;ChameleonMini 常见的有两个版本 &lt;strong&gt;ChameleonMini Rev.E&lt;/strong&gt; 与 &lt;strong&gt;ChameleonMini Rev.G&lt;/strong&gt; 其中 Rev.G 是最新升级的版本，自带电池供电。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.iternull.com/tags/Hardware/"/>
    
      <category term="RFID" scheme="https://blog.iternull.com/tags/RFID/"/>
    
      <category term="ChameleonMini" scheme="https://blog.iternull.com/tags/ChameleonMini/"/>
    
  </entry>
  
  <entry>
    <title>YARD Stick One 使用教程</title>
    <link href="https://blog.iternull.com/posts/2017/05/17/YARD-Stick-One-Tutorial.html"/>
    <id>https://blog.iternull.com/posts/2017/05/17/YARD-Stick-One-Tutorial.html</id>
    <published>2017-05-17T15:27:28.000Z</published>
    <updated>2017-06-01T14:16:54.758Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://greatscottgadgets.com/yardstickone/" target="_blank" rel="external">YARD Stick One</a> 是一款 1 GHz 以下的 USB 无线收发器设备，基于 TI 的 <a href="http://www.ti.com/product/CC1110-CC1111" target="_blank" rel="external">CC1111</a> 芯片。你可以将 YARD Stick One 用于进行各种遥控信号的重放，汽车遥控锁的安全研究等。</p>
<a id="more"></a>
<ul>
<li>半双工发送和接收</li>
<li>工作频率-官方：300 - 348 MHz, 391 - 464 MHz 和 782 - 928 MHz</li>
<li>工作频率-非官方：281 - 361 MHz, 378 - 481 MHz 和 749 - 962 MHz</li>
<li>信号调制：ASK, OOK, GFSK, 2-FSK, 4-FSK, MSK</li>
<li>传输速率：500 kbps</li>
<li>全速 USB 2.0</li>
<li>SMA 母头天线连接器（50欧姆）</li>
<li>软件控制的天线端口功率（3.3 V 时最大为 50 mA）</li>
<li>低通滤波器，用于在 800 和 900 MHz 频带中工作时消除谐波</li>
<li>GoodFET 兼容的扩展和编程接口</li>
<li>GIMME 兼容编程测试点</li>
<li>开源硬件</li>
</ul>
<p>官方的工作频率是德州仪器 (TI) CC1111 芯片所支持的频率。但实际测试发现非官方的范围是可靠的，使用依旧正常。</p>
<ul>
<li>注：YARD Stick One 并不支持在 Windows 上使用，虽然有第三方尝试更改固件去支持 Windows 10 的 Linux 子系统，但目前官方并没宣布支持 Windows 系统。</li>
</ul>
<h2 id="1-使用"><a href="#1-使用" class="headerlink" title="1. 使用"></a>1. 使用</h2><p>YARD State One 并不与任何通用的 SDR 软件相兼容，你只能使用他指定的客户端 <a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">RfCat</a>。</p>
<h3 id="1-1-安装-RfCat"><a href="#1-1-安装-RfCat" class="headerlink" title="1.1 安装 RfCat"></a>1.1 安装 RfCat</h3><p>从源码安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install python-usb</div><div class="line">wget https://bitbucket.org/atlas0fd00m/rfcat/downloads/rfcat_170508.tgz</div><div class="line">tar xvzf rfcat_170508.tgz</div><div class="line"><span class="built_in">cd</span> rfcat_170508/</div><div class="line">python setup.py install</div></pre></td></tr></table></figure>
<p>Kali Linux</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install rfcat</div></pre></td></tr></table></figure>
<h3 id="1-2-RfCat-帮助"><a href="#1-2-RfCat-帮助" class="headerlink" title="1.2 RfCat 帮助"></a>1.2 RfCat 帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat -h</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">usage: rfcat [-h] [-r] [-i INDEX] [-s] [-f BASEFREQ] [-c INC] [-n SPECCHANS]</div><div class="line">             [--bootloader] [--force]</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help            show this help message and exit</div><div class="line">  -r, --research        Interactive Python and the &quot;d&quot; instance to talk to</div><div class="line">                        your dongle. melikey longtime.</div><div class="line">  -i INDEX, --index INDEX</div><div class="line">  -s, --specan          start spectrum analyzer</div><div class="line">  -f BASEFREQ, --basefreq BASEFREQ</div><div class="line">  -c INC, --inc INC</div><div class="line">  -n SPECCHANS, --specchans SPECCHANS</div><div class="line">  --bootloader          trigger the bootloader (use in order to flash the</div><div class="line">                        dongle)</div><div class="line">  --force               use this to make sure you want to set bootloader mode</div><div class="line">                        (you *must* flash after setting --bootloader)</div></pre></td></tr></table></figure>
<h3 id="1-3-频谱分析"><a href="#1-3-频谱分析" class="headerlink" title="1.3 频谱分析"></a>1.3 频谱分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat <span class="_">-s</span> <span class="_">-f</span> 433e6</div></pre></td></tr></table></figure>
<p><img src="//files.iternull.com/images/2017-05-17_01-0002.png" alt=""></p>
<h3 id="1-4-RfCat-命令行"><a href="#1-4-RfCat-命令行" class="headerlink" title="1.4 RfCat 命令行"></a>1.4 RfCat 命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rfcat -r</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()  // </div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)  // 设置信号频段</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)  // </div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)  // 发送数据</div><div class="line">    &gt;&gt;&gt; d.RFrecv()  // 接收数据</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig() // 打印配置选项</div><div class="line"></div><div class="line"></div><div class="line">In [1]: <span class="built_in">print</span> d.reprRadioConfig()  // 打印配置选项</div><div class="line">== Hardware ==</div><div class="line">Dongle:              YARDSTICKONE</div><div class="line">Firmware rev:        0348</div><div class="line">Compiler:            Not found! Update needed!</div><div class="line">Bootloader:          CC-Bootloader</div><div class="line"></div><div class="line">== Software ==</div><div class="line">rflib rev:           450</div><div class="line"></div><div class="line">== Frequency Configuration ==</div><div class="line">Frequency:           901999877.929688 hz (0x259555L)</div><div class="line">Channel:             0</div><div class="line">Intermediate freq:   281250 hz</div><div class="line">Frequency Offset:    0 +/-</div><div class="line">Est. Freq Offset:    241</div><div class="line"></div><div class="line">== Modem Configuration ==</div><div class="line">Modulation:          2FSK</div><div class="line">DRate:               38360.595703 hz</div><div class="line">ChanBW:              93750.000000 hz</div><div class="line">DEVIATION:           20507.812500 hz</div><div class="line">Sync Mode:           15 of 16 bits must match</div><div class="line">M<span class="keyword">in</span> TX Preamble:     4 bytes</div><div class="line">Chan Spacing:        199951.171875 hz</div><div class="line">BSLimit:             No data rate offset compensation performed</div><div class="line">DC Filter:           enabled</div><div class="line">Manchester Encoding: disabled</div><div class="line">Fwd Err Correct:     disabled</div><div class="line"></div><div class="line">== Packet Configuration ==</div><div class="line">Sync Word:           0x0C4E</div><div class="line">Packet Length:       255</div><div class="line">Length Config:       Fixed Packet Mode</div><div class="line">Configured Address:  0x0</div><div class="line">Preamble Quality Threshold: 4 * 2</div><div class="line">Append Status:       No</div><div class="line">Rcvd Packet Check:   No address check</div><div class="line">Data Whitening:      off</div><div class="line">Packet Format:       Normal mode</div><div class="line">CRC:                 disabled</div><div class="line"></div><div class="line">== AES Crypto Configuration ==</div><div class="line">AES Mode:            CBC - Cipher Block Chaining</div><div class="line">Crypt RF Input:      off</div><div class="line">Crypt RF Output:     off</div><div class="line"></div><div class="line">== Radio Test Signal Configuration ==</div><div class="line">TEST2:               0x88</div><div class="line">TEST1:               0x31</div><div class="line">TEST0:               0x9</div><div class="line">VCO_SEL_CAL_EN:      0x0</div><div class="line"></div><div class="line">== Radio State ==</div><div class="line">     MARCSTATE:      MARC_STATE_RX (d)</div><div class="line">     DONGLE RESPONDING:  mode :c, last error<span class="comment"># 1</span></div><div class="line"></div><div class="line">== Client State ==</div><div class="line">========================================================================================================================</div><div class="line">     client thread cycles:      99/14</div><div class="line">     client errored cycles:     0</div><div class="line">     recv_queue:                (0 bytes) <span class="string">''</span></div><div class="line">     trash:                     (3 blobs) <span class="string">"[128, 142, (1495128220.831341, '')]"</span></div><div class="line">     recv_mbox                  (2 keys)  <span class="string">"['0x42', '0xff']"</span></div><div class="line">       app 0x42 (1 records)</div><div class="line">             [0x7]    (0 frames)  <span class="string">"[]"</span></div><div class="line"></div><div class="line">       app 0xff (4 records)</div><div class="line">             [0x88]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x80]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x82]    (0 frames)  <span class="string">"[]"</span></div><div class="line">             [0x86]    (0 frames)  <span class="string">"[]"</span></div><div class="line"></div><div class="line"></div><div class="line">In [2]: d.ping()</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003433 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003278 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003287 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003417 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003243 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003240 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003528 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003263 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003441 seconds)</div><div class="line">PING: 26 bytes transmitted, received: <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span> (0.003416 seconds)</div><div class="line">Out[2]: (10, 0, 0.03384900093078613)</div><div class="line"></div><div class="line">In [3]: d.setFreq(433000000)  // 设置信号频段为 433 MHz</div><div class="line"></div><div class="line">In [4]: d.specan(433e6)  // 频谱分析界面，433e6 设置的是频段，这里使用的写法是科学计数法等同于 433000000</div><div class="line"></div><div class="line">In [5]: bin(0x1234f)  // 进制转换 十六进制转二进制</div><div class="line">Out[5]: <span class="string">'0b10010001101001111'</span></div><div class="line"></div><div class="line">In [6]: <span class="built_in">help</span>(d)  // 查看所有参数的帮助</div><div class="line"></div><div class="line">In [7]: d.  // 按 Tab 键，查看所有参数</div><div class="line">Display all 182 possibilities? (y or n)</div><div class="line">d.FHSSxmit                   d.getChannel                 d.mac_SyncCell               d.rf_redirection             d.setMdmNumPreamble</div><div class="line">d.RESET                      d.getChannels                d.makePktFLEN                d.rsema                      d.setMdmSyncMode</div><div class="line">d.RFcapture                  d.getCompilerInfo            d.makePktVLEN                d.runEP5_recv                d.setMdmSyncWord</div><div class="line">d.RFdump                     d.getDebugCodes              d.max_packet_size            d.runEP5_send                d.setModeIDLE</div><div class="line">d.RFlisten                   d.getEnableMdmDCFilter       d.mhz                        d.run_ctrl                   d.setModeRX</div><div class="line">d.RFrecv                     d.getEnableMdmFEC            d.nextChannel                d.scan                       d.setModeTX</div><div class="line">d.RF<span class="built_in">test</span>Long                 d.getEnableMdmManchester     d.peek                       d.send                       d.setPktAddr</div><div class="line">d.RFxmit                     d.getEnablePktAppendStatus   d.ping                       d.send_thread                d.setPktPQT</div><div class="line">d.RFxmitLong                 d.getEnablePktCRC            d.poke                       d.send_threadcounter         d.setPower</div><div class="line">d.adjustFreqOffset           d.getEnablePktDataWhitening  d.pokeReg                    d.setAESiv                   d.setRFRegister</div><div class="line">d.bootloader                 d.getFHSSstate               d.printClientState           d.setAESkey                  d.setRFbits</div><div class="line">d.calculateFsIF              d.getFreq                    d.printRadioConfig           d.setAESmode                 d.setRFparameters</div><div class="line">d.calculateFsOffset          d.getFreqEst                 d.printRadioState            d.setAmpMode                 d.setRadioConfig</div><div class="line">d.calculateMdmDeviatn        d.getFsIF                    d.radiocfg                   d.setBSLimit                 d.setRfMode</div><div class="line">d.calculatePktChanBW         d.getFsOffset                d.recv                       d.setChannel                 d.setup</div><div class="line">d.changeChannel              d.getInterruptRegisters      d.recvAll                    d.setChannels                d.setup24330MHz</div><div class="line">d.checkRepr                  d.getLQI                     d.recv_event                 d.setEnDeCoder               d.setup900MHz</div><div class="line">d.chipnum                    d.getMACdata                 d.recv_mbox                  d.setEnableCCA               d.setup900MHzContTrans</div><div class="line">d.chipstr                    d.getMACthreshold            d.recv_queue                 d.setEnableMdmDCFilter       d.setup900MHzHopTrans</div><div class="line">d.cleanup                    d.getMARCSTATE               d.recv_thread                d.setEnableMdmFEC            d.setup_rfstudio_902PktTx</div><div class="line">d.clearDebugCodes            d.getMdmChanBW               d.recv_threadcounter         d.setEnableMdmManchester     d.specan</div><div class="line">d.ctrl_thread                d.getMdmChanSpc              d.reprAESMode                d.setEnablePktAppendStatus   d.startHopping</div><div class="line">d.debug                      d.getMdmDRate                d.reprClientState            d.setEnablePktCRC            d.stopHopping</div><div class="line">d.devnum                     d.getMdmDeviatn              d.reprDebugCodes             d.setEnablePktDataWhitening  d.strobeModeCAL</div><div class="line">d.discover                   d.getMdmModulation           d.reprFreqConfig             d.setFHSSstate               d.strobeModeFSTXON</div><div class="line">d.endec                      d.getMdmNumPreamble          d.reprHardwareConfig         d.setFreq                    d.strobeModeIDLE</div><div class="line">d.ep0GetAddr                 d.getMdmSyncMode             d.reprMACdata                d.setFsIF                    d.strobeModeRX</div><div class="line">d.ep0Peek                    d.getMdmSyncWord             d.reprMdmModulation          d.setFsOffset                d.strobeModeReturn</div><div class="line">d.ep0Ping                    d.getPartNum                 d.reprModemConfig            d.setMACdata                 d.strobeModeTX</div><div class="line">d.ep0Poke                    d.getPktAddr                 d.reprPacketConfig           d.setMACperiod               d.testTX</div><div class="line">d.ep0Reset                   d.getPktLEN                  d.reprRadioConfig            d.setMACthreshold            d.trash</div><div class="line">d.ep5timeout                 d.getPktPQT                  d.reprRadioState             d.setMaxPower                d.xmit_event</div><div class="line">d.freq_offset_accumulator    d.getRSSI                    d.reprRadioTestSignalConfig  d.setMdmChanBW               d.xmit_queue</div><div class="line">d.getAESmode                 d.getRadioConfig             d.reprSoftwareConfig         d.setMdmChanSpc              d.xsema</div><div class="line">d.getAmpMode                 d.idx                        d.reset_event                d.setMdmDRate</div><div class="line">d.getBSLimit                 d.lowball                    d.resetup                    d.setMdmDeviatn</div><div class="line">d.getBuildInfo               d.lowballRestore             d.rf_configure               d.setMdmModulation</div><div class="line"></div><div class="line">In [10]: d.</div></pre></td></tr></table></figure>
<h3 id="1-5-接收信号"><a href="#1-5-接收信号" class="headerlink" title="1.5 接收信号"></a>1.5 接收信号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433800000)  // 设置信号频段为 433.8 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.setMdmDRate(4800)  // </div><div class="line"></div><div class="line">In [4]: d.setMaxPower()</div><div class="line"></div><div class="line">In [5]: d.lowball()</div><div class="line"></div><div class="line">In [6]: d.RFlisten()  // 开始监听数据</div><div class="line">Entering RFlisten mode...  packets arriving will be displayed on the screen</div><div class="line">(press Enter to stop)</div><div class="line">(1495207873.725) Received:  80004405072024210db80100080041004098760290020241482206c3b000014bc18c000000280360200b0f20281b0f60000000000088490f23d9f2004140969ea0900433f930088290b0118028e48430540183f04010843c800180008c82840004042021000000000004c640020a43c0120ec1c4010010200000606c7c012168295b50084318f00000040a028242c8e428126200481100000031c838004151a000c2080081012800081800001e40000006405c120a00928420c2c8681843040a180000000000000016c000020646c0080000084040400000000000063e0000020200909206ae1000103f68540220e5bd05a06cfa10023616b040  | ..D...$!......A.@.v....AH<span class="string">".....K.....(.`....(..`......I.#...A@.....3.0......(..0T...@..&lt;...........!.......@..C...........`l|.!h)[P.C........B..(.b.H....1.8.AQ.......(......@...@\........h.C...............F.....@@@......&gt;............?hT......l...6..@</span></div><div class="line">(1495207875.830) Received:  5322e404212004130000202300186020000000bc31842044218000120008410000100800400020000048681fb780010027008000002200002c3c9e0001008002c0c83a164240620ec5c0c61006000000000012044148740840025810c0000040039b043000000000043d8441484008488842000013e8180a6368e90b43000021200400000000000521ac50400140084200000000000014020500c87a04c01200b3c0060000040025150b2aa020000080c20a2212c00000000063e0310f7338290f63565e984840884b0f40d80a0040000002c200000008000202029252824000028604100000f750c200000000382d842003bf8400200056c0d0  | S"..!......<span class="comment">#..`.....1..D!.....A.....@....Hh.....'...."..,&lt;........:.B@b.............AHt.@.X....@...0.....=.AH@.H.B......ch..C..!........!.P@.@.B...........z...........%..*......."......c.1.s8).cV^.H@.K.@...@.............R.@........P.....8-........V..</span></div><div class="line">(1495207876.325) Received:  b1a435883185958430057439c60e10c00001000010f0000000420251400212400040ccc20050000000173d8ea1143983b0f43d8490840040a10c00020000010f20a02b17404c7b0f434801001a2c2100000000004020794f43d8da14c7d1046187258c0000008000041d8e21ec256200040402210c21eda18400400000000f23e83b0f43d87a3c218ba58422000000000c2d87a06c6d0820241d0b631821c7050800000000031763e85b0f73f0c150d610c21ee610c00783b1fcf63ec639be75c2b1<span class="built_in">fc</span>3c87b9ec2d87b0c01002063010800000000010d63e8790f43d829010118031839d843000000091<span class="built_in">fc</span>1d83b1f73d85a1ec7d0ce1ec63811f  | ..5.1...0.t9.............B.Q@..@.@...P....=...9...=....@..........+.@L&#123;.CH...,!.....@.yOC......a.%.........!.%b....!.!....@....<span class="comment">#.;.C.z&lt;!...".....-..lm..$..c.!.........c.[.s..P............&gt;.9.u...&lt;...-......0........&gt;...=.....1...0.........=...&#125;...c..</span></div><div class="line">(1495207877.241) Received:  e0240400212c0004010f3c042000000000187a0b43d8fb1fdfc8fa1ec23387688d60000000000808010004880020244c0120000029210800080000000321e86d17a1ec1d0f21e42000326520000002000020a005010020001020e40000200874802000008000080485e02011036120040021842112908400000000018fa1e43d8fa3f8e3e863087de4204000000000110000000000004f63ffe3ecf90f63a84100490882000000000043d80b998000281042985b08431e2808000000000018fe1ec3c08202c04006004280c0ee820000000000243e8790f6024550361e87b28610f790c20004000000c2d8fa1ec3b1b1fce61ec2100182063000  | .$..!,....&lt;.......z.C........3.h.`............<span class="variable">$L</span>....)!.......!.m.....!...2e....................t.............a...!.!...........=.....c.&#125;..@...........Oc.....c.A.I.......C.....(.B.[.C.(..............@..B.........$&gt;....EP6............................0.</div><div class="line">(1495207877.706) Received:  ff5f63840c81b09433801085b480000000010004048082a0048080f43fafb18c21ef829800000000060e87d0f63eced8fa1ed3c63ef63182b0b6220290863a8210101080008600a000000000000000acb0100284905000801083bfd6b0000000000650d61ec7c0f21245c01a04c0020020000000040010503c8798f43d87b1f420801007be8630000000013d0f6bf86c7d0fa1<span class="built_in">fc</span>733f4ba80282f65ac7d0f9100058b81042109614040002000010b2020480801241d082048210c3dec710000000029aed7bfb1fbe1ec2dc4218fbc841000400000047d8721e47f0f43c7b586309690000000000000001092002030120a8e10720040125a10c00  | ._c.....3...................?...!............&gt;......&gt;.1...<span class="string">"...:......................P............P......E.............P&lt;...=.........0....=.k.l&#125;...s?K....Z.....X..B...............A...............&#123;......B...A.....G.r.G..&lt;&#123;Xc.i....................%...</span></div></pre></td></tr></table></figure>
<h3 id="1-5-发送-OOK-信号"><a href="#1-5-发送-OOK-信号" class="headerlink" title="1.5 发送 OOK 信号"></a>1.5 发送 OOK 信号</h3><p>方法一</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433e6)  // 设置信号频段为 433 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.setMdmDRate(int(1.0/0.000550))  // </div><div class="line"></div><div class="line">In [4]: d.RFxmit(<span class="string">"\x8E\x8E\x88\x88\x8E\x88\x88\x00\x00\x00"</span> * 20)  // 发送十六进制编码的信号 <span class="string">"\x8E\x8E\x88\x88\x8E\x88\x88\x00\x00\x00"</span> 20次</div></pre></td></tr></table></figure>
<p>方法二</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: d.setFreq(433800000)  // 设置信号频段为 433.8 MHz</div><div class="line"></div><div class="line">In [2]: d.setMdmModulation(MOD_ASK_OOK)  // 设置信号调制模式为 ASK / OOK</div><div class="line"></div><div class="line">In [3]: d.makePktFLEN(4)  // 设置包长度为 4 以为我们这里只发送 4 bytes</div><div class="line"></div><div class="line">In [4]: d.setMdmDRate(4800)  // 设置波特率</div><div class="line"></div><div class="line">In [5]: d.setMaxPower()</div><div class="line"></div><div class="line">In [6]: <span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):d.RFxmit(<span class="string">'\xDE\xAD\xBE\xEF'</span>)  // 重复发送 15 次数据</div></pre></td></tr></table></figure>
<h3 id="1-6-使用-Python-脚本"><a href="#1-6-使用-Python-脚本" class="headerlink" title="1.6 使用 Python 脚本"></a>1.6 使用 Python 脚本</h3><p>Python 脚本</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Ths is a rudimentary implementation of packet reception using YARD Stick One</span></div><div class="line"><span class="comment"># with RfCat demonstrated in Rapid Radio Reversing presented at ToorCon 17</span></div><div class="line"><span class="comment"># (2015).</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># File Name: sl.py</span></div><div class="line"><span class="comment"># usage from rfcat interactive shell:</span></div><div class="line"><span class="comment">#   %run sl.py</span></div><div class="line"><span class="comment">#   rxsl(d)</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> rflib <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="comment"># This validity check is only verifying certain bytes that are present in all</span></div><div class="line"><span class="comment"># packets.  It really should be followed up (or replaced) by a checksum</span></div><div class="line"><span class="comment"># verification.</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">packet_valid</span><span class="params">(p)</span>:</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">0</span>]) != <span class="number">0x6d</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">1</span>]) != <span class="number">0xb6</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">6</span>]) != <span class="number">0x6d</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> ord(p[<span class="number">7</span>]) != <span class="number">0xb6</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">if</span> (ord(p[<span class="number">29</span>]) &amp; <span class="number">0xfc</span>) != <span class="number">0</span>:</div><div class="line">		<span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">	<span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="comment"># This could probably be simpler and/or easier to read.  It extracts every</span></div><div class="line"><span class="comment"># third bit in order to decode the pulse width modulation (PWM).  The PWM</span></div><div class="line"><span class="comment"># implemented by StealthLock is well behaved in that the pulse durations and</span></div><div class="line"><span class="comment"># interval durations are all one or two times the length of a time unit and</span></div><div class="line"><span class="comment"># data bits are represented by a consistent number (3) of time units.  This is</span></div><div class="line"><span class="comment"># the time unit I have used in the RfCat symbol rate configuration, so a long</span></div><div class="line"><span class="comment"># pulse appears as symbols (1, 1, 0) and a short pulse appears as (1, 0, 0).</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwm_decode</span><span class="params">(p)</span>:</span></div><div class="line">	biginteger = <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> byte <span class="keyword">in</span> p:</div><div class="line">		biginteger &lt;&lt;= <span class="number">8</span></div><div class="line">		biginteger |= ord(byte)</div><div class="line">	biginteger &gt;&gt;= <span class="number">12</span></div><div class="line">	out = <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">28</span>, (len(p)*<span class="number">8</span><span class="number">-12</span>)/<span class="number">3</span>, <span class="number">1</span>):</div><div class="line">		out &lt;&lt;= <span class="number">1</span></div><div class="line">		out |= ((biginteger &amp; <span class="number">1</span>) ^ <span class="number">1</span>)</div><div class="line">		biginteger &gt;&gt;=<span class="number">3</span></div><div class="line">	<span class="keyword">return</span> out</div><div class="line"></div><div class="line"><span class="comment"># checksum byte is 0xff minus 8-bit addition of previous bytes, like so:</span></div><div class="line"><span class="comment"># hex(0xff-(0x02+0x98+0x76+0xff+0xff)&amp;0xff)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rxsl</span><span class="params">(device)</span>:</span>  <span class="comment"># 函数方法</span></div><div class="line">	device.setFreq(<span class="number">314980000</span>)</div><div class="line">	device.setMdmModulation(MOD_ASK_OOK)</div><div class="line">	device.setMdmDRate(<span class="number">2450</span>)</div><div class="line">	device.setPktPQT(<span class="number">0</span>)</div><div class="line">	device.setMdmSyncMode(<span class="number">2</span>)</div><div class="line">	device.setMdmSyncWord(<span class="number">0x06db</span>)</div><div class="line">	device.setMdmNumPreamble(<span class="number">0</span>)</div><div class="line">	device.setMaxPower()</div><div class="line">	device.lowball()</div><div class="line">	device.makePktFLEN(<span class="number">30</span>)</div><div class="line"></div><div class="line">	<span class="keyword">while</span> <span class="keyword">not</span> keystop():</div><div class="line">		<span class="keyword">try</span>:</div><div class="line">			pkt, ts = device.RFrecv()</div><div class="line">			<span class="keyword">if</span> packet_valid(pkt):</div><div class="line">				<span class="comment">#print "Received:  %s" % pkt.encode('hex')</span></div><div class="line">				<span class="keyword">print</span> <span class="string">"0x%012x"</span> % pwm_decode(pkt)</div><div class="line">		<span class="keyword">except</span> ChipconUsbTimeoutException:</div><div class="line">			<span class="keyword">pass</span></div><div class="line">	sys.stdin.read(<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p>在 RfCat 命令行内调用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rfcat -r</span></div><div class="line"><span class="string">'RfCat, the greatest thing since Frequency Hopping!'</span></div><div class="line"></div><div class="line">Research Mode: enjoy the raw power of rflib</div><div class="line"></div><div class="line">currently your environment has an object called <span class="string">"d"</span> <span class="keyword">for</span> dongle.  this is how</div><div class="line">you interact with the rfcat dongle:</div><div class="line">    &gt;&gt;&gt; d.ping()</div><div class="line">    &gt;&gt;&gt; d.setFreq(433000000)</div><div class="line">    &gt;&gt;&gt; d.setMdmModulation(MOD_ASK_OOK)</div><div class="line">    &gt;&gt;&gt; d.makePktFLEN(250)</div><div class="line">    &gt;&gt;&gt; d.RFxmit(<span class="string">"HALLO"</span>)</div><div class="line">    &gt;&gt;&gt; d.RFrecv()</div><div class="line">    &gt;&gt;&gt; <span class="built_in">print</span> d.reprRadioConfig()</div><div class="line"></div><div class="line"></div><div class="line">In [1]: %run sl.py  // 运行 sl.py 脚本</div><div class="line"></div><div class="line">In [2]: rxsl(d)  // 使用脚本内的方法</div></pre></td></tr></table></figure>
<h2 id="2-rfpwnon-信号暴力穷举"><a href="#2-rfpwnon-信号暴力穷举" class="headerlink" title="2. rfpwnon 信号暴力穷举"></a>2. rfpwnon 信号暴力穷举</h2><p><a href="https://github.com/exploitagency/github-rfpwnon" target="_blank" rel="external">rfpwnon</a> 是一款基于 rfcat 实现的的无线电信号暴力穷举攻击的 Python 脚本</p>
<h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">apt-get install python python-pip rfcat</div><div class="line">pip install bitstring</div><div class="line">wget https://raw.githubusercontent.com/exploitagency/github-rfpwnon/master/rfpwnon.py</div><div class="line">./rfpwnon.py --help</div></pre></td></tr></table></figure>
<h3 id="2-2-帮助信息"><a href="#2-2-帮助信息" class="headerlink" title="2.2 帮助信息"></a>2.2 帮助信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ./rfpwnon.py -h</span></div><div class="line">usage: rfpwnon.py [-h] [-v] [<span class="_">-f</span> BASEFREQ] [-b BAUDRATE] [<span class="_">-l</span> BINLENGTH]</div><div class="line">                  [-r REPEATTIMES] [--keys] [-p PPAD] [-t TPAD] [--raw]</div><div class="line">                  [--tri] [--show]</div><div class="line"></div><div class="line">Application to use a rfcat compatible device to brute force a particular AM</div><div class="line">OOK or raw binary signal.</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help      show this <span class="built_in">help</span> message and <span class="built_in">exit</span>  // 显示帮助信息</div><div class="line">  -v, --version   show program<span class="string">'s version number and exit  // 显示软件版本</span></div><div class="line">  -f BASEFREQ     Specify the target frequency to transmit on, default is  // 指定信号频段，默认为 915000000 Hz</div><div class="line">                  915000000.</div><div class="line">  -b BAUDRATE     Specify the baudrate of the signal, default is 2000.  // 指定波特率，默认为 2000</div><div class="line">  -l BINLENGTH    Specify the binary length of the signal to brute force. By  // 指定要生成的二进制长度</div><div class="line">                  default this is the binary length before pwm encoding. When</div><div class="line">                  the flag --raw is set this is the binary length of the pwm</div><div class="line">                  encoded signal.</div><div class="line">  -r REPEATTIMES  Specify the number of times to repeat the signal. By default  // 指定一个信号重复的次数</div><div class="line">                  this is set to 1 and uses the de bruijn sequence for speed.   // 当设为 1 时使用 de bruijn 序列的速度</div><div class="line">                  When set greater than one the script sends each possible      // 当设置大于 1 时脚本会花费更多的时间去执行</div><div class="line">                  permutation of the signal individually and takes much longer</div><div class="line">                  to complete. For some applications the signal is required to</div><div class="line">                  be sent multiple times.</div><div class="line">  --keys          Displays the values being transmitted in binary, hex, and  // 显示正在传输的二进制，十六进制和十进制值</div><div class="line">                  decimal both before and after pwm encoding.</div><div class="line">  -p PPAD         Specify your own binary padding to be attached before the  // 指定要附加在所生成二进制之前的固定二进制值</div><div class="line">                  brute forced binary.</div><div class="line">  -t TPAD         Specify your own binary padding to be attached after the  // 指定要附加在所生成二进制之后的固定二进制值</div><div class="line">                  brute forced binary.</div><div class="line">  --raw           This flag disables the script from performing the pwm</div><div class="line">                  encoding of the binary signal. When set you must specify the</div><div class="line">                  full pwm encoded binary length using -l.</div><div class="line">  --tri           This flag sets up the script to brute force a trinary</div><div class="line">                  signal.</div><div class="line">  --show          Prints de Bruijn sequence before transmitting.  // 显示 de Bruijn 序列</div></pre></td></tr></table></figure>
<h3 id="2-3-使用实例"><a href="#2-3-使用实例" class="headerlink" title="2.3 使用实例"></a>2.3 使用实例</h3><p>指定波特率为 <code>2000</code> 生成 <code>4</code> 位长的所有二进制信号，每个信号重复发送 <code>5</code> 次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315000000 -b 2000 <span class="_">-l</span> 4 -r 5</div></pre></td></tr></table></figure>
<p>指定波特率为 <code>1818</code> 每个信号的开头的二进制编码为 <code>100101</code> 在其之后生成 <code>10</code> 为长的所有二进制信号，每个信号重复发送 <code>2</code> 次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315060000 -b 1818 -p 100101 <span class="_">-l</span> 10 -r 2</div></pre></td></tr></table></figure>
<p>指定波特率为 <code>1818</code> 生成 <code>16</code> 为长的所有二进制信号，每个信号重复发送 <code>2</code> 次。这会花费很多时间来发送完所有的信号。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rfpwnon.py <span class="_">-f</span> 315060000 -b 1818 <span class="_">-l</span> 16 -r 2</div></pre></td></tr></table></figure>
<h2 id="3-ToorChat"><a href="#3-ToorChat" class="headerlink" title="3. ToorChat"></a>3. ToorChat</h2><p><a href="https://github.com/hathcox/ToorChat" target="_blank" rel="external">ToorChat</a> 是一款使用 <a href="https://greatscottgadgets.com/tc13badge/" target="_blank" rel="external">ToorCon 2013 徽章</a>的聊天应用程序。<br>YARD State One 的硬件设计上与 ToorCon 2013 badge 使用的芯片与固件是一样的，所以这程序也是可以通用的。<br>ToorChat 聊天工具使用时需要至少两个 RfCat 支持的硬件才能通过无线电正常通信。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/hak5/ToorChat.git</div><div class="line"><span class="built_in">cd</span> ToorChat</div><div class="line">./toorchat.py</div></pre></td></tr></table></figure>
<p><img src="//files.iternull.com/images/2017-05-17_01-0003.png" alt=""></p>
<h2 id="4-固件"><a href="#4-固件" class="headerlink" title="4. 固件"></a>4. 固件</h2><p>YARD Stick One 的固件就是 <a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">rfcat</a> 提供的，Bootloader 使用的是 <a href="https://github.com/AdamLaurie/CC-Bootloader" target="_blank" rel="external">CC-Bootloader</a>。固件和硬件是开源的，你可以自己编写固件实现你需要的功能。</p>
<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li><a href="http://greatscottgadgets.com/yardstickone/" target="_blank" rel="external">Great Scott Gadgets - YARD Stick One</a></li>
<li><a href="https://github.com/greatscottgadgets/yardstick" target="_blank" rel="external">GitHub: YARD Stick One</a></li>
<li><a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">rfcat project</a></li>
<li><a href="https://andrewmohawk.com/2012/09/06/hacking-fixed-key-remotes/" target="_blank" rel="external">Hacking fixed key remotes</a></li>
<li><a href="http://andrewmohawk.com/2015/08/31/hacking-fixed-key-remotes-with-only-rfcat/" target="_blank" rel="external">Hacking fixed key remotes with (only) RFCat</a></li>
<li><a href="https://www.youtube.com/watch?v=pkTlTCUeec0" target="_blank" rel="external">How to begin hacking with the YARD Stick One - Hak5 1908</a></li>
<li><a href="https://www.youtube.com/watch?v=F3bISk5t8cA" target="_blank" rel="external">How to Hack Wireless Remotes with Radio Replay Attacks - Hak5 1909</a></li>
<li><a href="https://www.youtube.com/watch?v=EZU2AZtfJbI" target="_blank" rel="external">Hacking Wireless Doorbells and Software Defined Radio tips - Hak5 1910</a></li>
<li><a href="https://www.youtube.com/watch?v=LqmVaf2KHYA" target="_blank" rel="external">Hacking Keyless Entry Remotes - Hak5 1911</a></li>
<li><a href="https://www.youtube.com/watch?v=blpycY5JCm0" target="_blank" rel="external">How to Hack Radio with Brute Force Attacks - Hak5 1912</a></li>
<li><a href="https://www.youtube.com/watch?v=eVqIe3na_Zk" target="_blank" rel="external">Radio Hacking: Reverse Engineering Protocols Part 1 - Hak5 1913</a></li>
<li><a href="https://www.youtube.com/watch?v=vf38-8LbDuw" target="_blank" rel="external">Radio Hacking: Reverse Engineering Protocols Part 2 - Hak5 1914</a></li>
<li><a href="https://pandwarf.com/news/yard-stick-one-vs-rtl-sdr-vs-pandwarf/" target="_blank" rel="external">Yard Stick One vs RTL-SDR vs PandwaRF: Fight of the dwarves</a></li>
<li><a href="http://greatscottgadgets.com/2015/12-29-rapid-radio-reversing-toorcon-2015/" target="_blank" rel="external">Rapid Radio Reversing, ToorCon 2015</a></li>
<li><a href="https://github.com/gyaresu/opensesame-yardstick" target="_blank" rel="external">opensesame-yardstick</a></li>
<li><a href="https://www.hak5.org/episodes/hak5-1908-how-to-begin-hacking-with-the-yard-stick-one" target="_blank" rel="external">Hak5 1908 – How to begin hacking with the YARD Stick One</a></li>
<li><a href="http://leetupload.com/blagosphere/index.php/2014/02/16/you-know-how-to-send-my-signal-setting-up-rfcat-from-scratch/" target="_blank" rel="external">You know how to send my signal — Setting up RFCat from scratch</a></li>
<li><a href="https://www.legacysecuritygroup.com/index.php/categories/13-sdr/22-rfpwnon-py-the-ultimate-rfcat-ask-ook-brute-force-tool" target="_blank" rel="external">rfpwnon.py rfcat ASK OOK brute force tool</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://greatscottgadgets.com/yardstickone/&quot;&gt;YARD Stick One&lt;/a&gt; 是一款 1 GHz 以下的 USB 无线收发器设备，基于 TI 的 &lt;a href=&quot;http://www.ti.com/product/CC1110-CC1111&quot;&gt;CC1111&lt;/a&gt; 芯片。你可以将 YARD Stick One 用于进行各种遥控信号的重放，汽车遥控锁的安全研究等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.iternull.com/tags/Hardware/"/>
    
      <category term="Radio" scheme="https://blog.iternull.com/tags/Radio/"/>
    
      <category term="YARD Stick One" scheme="https://blog.iternull.com/tags/YARD-Stick-One/"/>
    
  </entry>
  
  <entry>
    <title>ITEAD 86式WiFi智能插座拆解</title>
    <link href="https://blog.iternull.com/posts/2017/03/01/Itead-Wall-WiFi-Smart-Socket.html"/>
    <id>https://blog.iternull.com/posts/2017/03/01/Itead-Wall-WiFi-Smart-Socket.html</id>
    <published>2017-03-01T07:30:20.000Z</published>
    <updated>2017-03-24T22:14:04.477Z</updated>
    
    <content type="html"><![CDATA[<p>在淘宝上发现了一款我非常想要的产品，还是 ITEAD 生产的。在这款产品之前已经有一些智能家居的产品了，比如小米家就有很多款智能家居产品。但都有一个共同点，不能兼容其它厂商的产品，你也没法自定义它。<br>但 ITEAD 的产品有一个特点，就是会留一个串口给用户，在不损坏产品的情况下能刷其它固件，给了用户更多的控制权。另一点 ITEAD 的 WiFi 智能家居产品使用的芯片基本上都是 <a href="http://www.esp8266.com/wiki/doku.php?id=start" target="_blank" rel="external">ESP8266</a> 这也是非常好的一点， ESP8266 是一款很好的 WiFi 芯片，易于开发，有很多活跃的开发社区和用户。<br><a id="more"></a></p>
<h3 id="购买链接-Buy"><a href="#购买链接-Buy" class="headerlink" title="购买链接 (Buy)"></a>购买链接 (Buy)</h3><blockquote>
<ul>
<li><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.FKIVK3&amp;id=530885314299&amp;_u=111dg2jm9dab" target="_blank" rel="external">淘宝</a></li>
<li><a href="https://www.aliexpress.com/item/2016-New-Arrival-Smart-Wireless-WIFI-Control-Socket-Plug-With-Android-IOS-Phone-App-White-Remote/32703922119.html" target="_blank" rel="external">AliExpress</a></li>
</ul>
</blockquote>
<p><img src="//files.iternull.com/images/2017-03-01_01-0001.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0002.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0003.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0004.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0005.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0006.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0007.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0008.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0009.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0010.jpg" alt=""><br><img src="//files.iternull.com/images/2017-03-01_01-0011.jpg" alt=""></p>
<p>这款产品芯片使用的是 <a href="http://www.esp8266.com/wiki/doku.php?id=start" target="_blank" rel="external">ESP8266</a> Flash memory 使用的是 <a href="http://www.datasheetspdf.com/datasheet/PN25F08.html" target="_blank" rel="external">PN25F08</a> 并预留了串口焊盘，这给用户自定义硬件提供了方便。<br>但还有些地方值得继续改进，首先看产品外观的第一感觉就是做的有些粗糙。其次安全性有待提高，插座口没有带安全门，有小孩子的家庭谨慎购买，这会增加孩子触电的几率。<br>内部的 AC 转 DC 电源模块设计的不是很安全，特别是交流电输入端，用长排针连接这一点。给装固定螺丝留的翻盖式设计，当盖回去的时候红色的火线容易卡住旁边的 PCB 电路板，这既不方便也不安全。</p>
<p>如果有兴趣可以尝试使用 <a href="http://www.letscontrolit.com/wiki/index.php/ESPEasy" target="_blank" rel="external">ESPEasy</a> 固件去兼容其它云平台实现操控，打造自己的智能家。</p>
<p>总体来说这是一款物有所值的产品，48人民币包邮，远低于小米智能插座基础版的价格。更重要的是这为以后的智能家装市场迈出第一步。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在淘宝上发现了一款我非常想要的产品，还是 ITEAD 生产的。在这款产品之前已经有一些智能家居的产品了，比如小米家就有很多款智能家居产品。但都有一个共同点，不能兼容其它厂商的产品，你也没法自定义它。&lt;br&gt;但 ITEAD 的产品有一个特点，就是会留一个串口给用户，在不损坏产品的情况下能刷其它固件，给了用户更多的控制权。另一点 ITEAD 的 WiFi 智能家居产品使用的芯片基本上都是 &lt;a href=&quot;http://www.esp8266.com/wiki/doku.php?id=start&quot;&gt;ESP8266&lt;/a&gt; 这也是非常好的一点， ESP8266 是一款很好的 WiFi 芯片，易于开发，有很多活跃的开发社区和用户。&lt;br&gt;
    
    </summary>
    
    
      <category term="Smart Socket" scheme="https://blog.iternull.com/tags/Smart-Socket/"/>
    
      <category term="WiFi" scheme="https://blog.iternull.com/tags/WiFi/"/>
    
      <category term="ITEAD" scheme="https://blog.iternull.com/tags/ITEAD/"/>
    
  </entry>
  
  <entry>
    <title>分析无线遥控器信号并制作 Hack 硬件进行攻击</title>
    <link href="https://blog.iternull.com/posts/2017/02/04/Use-Arduino-brute-force-to-attack-remote-control.html"/>
    <id>https://blog.iternull.com/posts/2017/02/04/Use-Arduino-brute-force-to-attack-remote-control.html</id>
    <published>2017-02-04T14:32:46.000Z</published>
    <updated>2017-02-26T13:51:10.024Z</updated>
    
    <content type="html"><![CDATA[<p>无线遥控器（无线电遥控器）在我们生活中非常常见，应用于各种场景，方便着用户的使用。不过大多数还是用于安防方面的，比如: 遥控报警器、电动卷帘门、电动伸缩门、遥控电开关、无线遥控门铃……<br>不过国内关注和研究这类硬件安全的人比较少，我知道你们大多都是 Web 安全狗，我挖洞挖不过你们所以做了一只硬件安全狗。<br><a id="more"></a></p>
<h2 id="1、无线遥控器简介"><a href="#1、无线遥控器简介" class="headerlink" title="1、无线遥控器简介"></a>1、无线遥控器简介</h2><p>无线遥控器从安全角度看大致分为两类，一类是最普遍的固定码遥控器，特点是廉价、应用广泛、市场大、用户多；另一类是滚动码遥控器，特点是价格较贵、相对比较安全、用于汽车安全防盗等安全要求较高的地方。</p>
<p>固定码遥控器有很多种编码方式，国内常见的是 3 态 8 位的编码或者厂商出厂时烧录的随机码。滚动码这里不做讲解，我都还得到这类遥控器，滚动码相对来说比较安全，但也并非绝对安全，你的汽车用到就是滚动码遥控器，然而盗贼在 N 年前就能买到干扰破解你汽车防盗的设备了。</p>
<p>无线遥控器从信号调制方式可以大致分成 <a href="https://en.wikipedia.org/wiki/On-off_keying" target="_blank" rel="external">OOK</a> 和 <a href="https://en.wikipedia.org/wiki/Frequency-shift_keying" target="_blank" rel="external">FSK</a> 两种方式，当然这只是常见的，还有其他的信号调制方式。</p>
<h2 id="2、三态八位遥控器"><a href="#2、三态八位遥控器" class="headerlink" title="2、三态八位遥控器"></a>2、三态八位遥控器</h2><p>3 态 8 位遥控器是我们常见的遥控器，它属于固定码遥控器。在电瓶车防盗器、电动卷帘门、电动伸缩门、遥控电开关、无线遥控门铃这些应用中都能见到这种遥控器，因为这种遥控器很廉价。</p>
<h3 id="2-1-什么是三态八位遥控器？"><a href="#2-1-什么是三态八位遥控器？" class="headerlink" title="2.1 什么是三态八位遥控器？"></a>2.1 什么是三态八位遥控器？</h3><p>3 态 8 位遥控器顾名思义，它有 3 种码位状态 8 个码位。二进制是由 <code>0</code> 和 <code>1</code> 组成的，所以 2 位(bit)长的二进制有 4 种可能性 <code>00</code> <code>01</code> <code>10</code> <code>11</code> ， 3 态 8 位遥控器使用的是这其中的 3 种 <code>00</code> <code>01</code> <code>11</code> 这是 3 态。<br>8 位是指有 8 个编码位，每个编码位可使用 3 态中的任意一种，所以是 <code>2 * 8 = 16</code> 总共 16 位(bit)长的二进制，但是常见的无线遥控器是的数据长度是 24 位(bit)，因为后 8 位(bit)是定义按键值的（如果你对信号解码出来的是 25 位(bit)长，你可以除去末尾的 <code>0</code> ；如果是 25 位(bit)长，末尾的是 <code>1</code> 这可能是你解码错了）。<br>常见的 4 键遥控器的的每个键值都是出厂就固定了的，分别是 <code>11000000</code> <code>00110000</code> <code>00001100</code> <code>00000011</code></p>
<h3 id="2-2-厂商烧录的固定码"><a href="#2-2-厂商烧录的固定码" class="headerlink" title="2.2 厂商烧录的固定码"></a>2.2 厂商烧录的固定码</h3><p>如果你的固定码遥控器解码后的二进制中有一对 <code>10</code> 码（注意是一对，前一对的后 <code>1</code> 跟后一对的前 <code>0</code> 组成的 <code>10</code> 是不算的）这说明你的遥控器不属于 3 态 8 位遥控器，是厂商出厂时烧录的固定码，这种遥控器的后 8 位(bit)按键值也不一定是标准的 4 种可能性。</p>
<p>这类固定码遥控器的接收端一般都是学习行的，会有一个学习键。作用是配对新的遥控器，如果当前遥控器坏了，你可以买个同类型的遥控器，长按学习键再按遥控器，就可以学习到新遥控器的编码的信息，这样你就能继续使用了。</p>
<h3 id="2-3-辨别是否是三态八位"><a href="#2-3-辨别是否是三态八位" class="headerlink" title="2.3 辨别是否是三态八位"></a>2.3 辨别是否是三态八位</h3><p>辨别是否是 3 态 8 位遥控器最靠谱的方法就是拆开来看 PCB 板子，有 3 排 8 列焊盘的肯定是，否则就不是，使用 3 态 8 位拨码开关的也是。</p>
<p><img src="//files.iternull.com/images/2017-02-04_01-0001.png" alt=""></p>
<h3 id="2-4-三态八位遥控器编码"><a href="#2-4-三态八位遥控器编码" class="headerlink" title="2.4 三态八位遥控器编码"></a>2.4 三态八位遥控器编码</h3><p>国内常见的编码方法都是直接焊接 PCB 上的焊盘，极少使用拨码开关，节省成本？当然你也能买到 3 态 8 位的拨码遥控器。</p>
<p><img src="//files.iternull.com/images/2017-02-04_01-0002.png" alt=""></p>
<p>从上图中可以看出总共有 3 排 8 列焊盘，这也就是 3 态（上中下） 8 位的定义方式。中间的一排连接的是芯片的引脚，当芯片的一个引脚与 High 焊接上后产生的编码是 <code>11</code> 与 Low 焊接上后产生的编码是 <code>00</code> 不焊接的默认编码是 <code>01</code> 。</p>
<p>编码是成对的，遥控器上是这个编码，接收器上也得是这个编码否则是没法使用的。</p>
<h2 id="3、分析安全缺陷"><a href="#3、分析安全缺陷" class="headerlink" title="3、分析安全缺陷"></a>3、分析安全缺陷</h2><p>从上文中我们知道了遥控器的二进制编码长度是 24 位(bit)，前 16 位(bit)是由 3 态 8 位编码方式定义的，后 8 位(bit)是厂商固定死的的按键值。一个遥控器上的每个按键的前 16 位(bit)都是一样的，后 8 位(bit)是不一样的，就 4 种可能性。<br>假设如果每个按键都是没有规律的随机码，那么你想通过暴力穷举出正确的编码，你需要尝试 <code>2 ^ 24 = 16777216</code> 总共 16777216 种可能性。<br>假设后 8 位(bit)是固定的 4 种可能性，前 16 位(bit)是随机的，那你只需要尝试前 16 位(bit)的所有可能性在拼接上后 8 位(bit)的固定值，你需要尝试 <code>2 ^ 16 = 65536</code> <code>4 ^ 8 = 65536</code> 每个按键总共 65536 种可能性。<br>由于 3 态 8 位里是没有 <code>10</code> 码的，所有你需要尝试的次数是 <code>3 ^ 8 = 6561</code> 每个按键总共 6561 种可能性。</p>
<p>知道了暴力穷举攻击需要尝试的次数后我们再来算一下需要的时间，我对一个普通的遥控器做信号发送的采集，10 秒钟时间内我在接收端收到一百零几次遥控信号，也就是说一分钟至少可以发送（尝试） 600 个可能性。<br>尝试 24 位(bit)长度的所有组合所需的时间是 <code>16777216 / 600 = 27962</code> 27962 分钟左右，大概 20 天不到。尝试 16 位(bit)长度一个按键的所有组合所需的时间是 <code>65536 / 600 = 109</code> 109 分钟左右，大概一个多小时。<br>尝试 3 态 8 位一个按键的所有组合所需的时间是 <code>6561 / 600 = 11</code> 大概 11 分钟左右！！</p>
<p>那么 <a href="https://samy.pl/" target="_blank" rel="external">Samy Kamkar</a> 在 8 秒内打开车库门的 <a href="http://samy.pl/opensesame/" target="_blank" rel="external">OpenSesame</a> 项目是怎么做到的？<br>首先 Samy Kamkar 的那个车库门的遥控器并非是 3 态 8 位的，编码长度好像只有 12 位(bit)， <code>2 ^ 12 = 4096</code> 总共 4096 种组合。<br>最关键是遥控设备的接收端使用的是<a href="https://en.wikipedia.org/wiki/Shift_register" target="_blank" rel="external">移位寄存器</a>，所以使用 <a href="https://en.wikipedia.org/wiki/De_Bruijn_sequence" target="_blank" rel="external">De Bruijn 序列</a> 即可在非常短的时间内完成所有可能性的尝试。</p>
<p>但我们常见的 3 态 8 位遥控设备的接收端用得并非是移位寄存器，所以没法使用 De Bruijn 序列实现暴力穷举攻击。检测接收端是否使用了移位寄存器的一个方法是在正确的编码前加个 <code>0</code> 。<br>如果使用了移位寄存器，那么会跳过错误的一个位(bit)检查下一个正确的，并给予响应。如果没使用移位寄存器，那么什么反应都没有，因为你发送的这个编码是错误的。</p>
<h2 id="4、制作-Hacking-硬件"><a href="#4、制作-Hacking-硬件" class="headerlink" title="4、制作 Hacking 硬件"></a>4、制作 Hacking 硬件</h2><p>从上面理论分析中我们知道了这种遥控设备所存在的其中一个缺陷，要尝试利用这个缺陷实现对设备的攻击方法不止一种。你可以抱着你的笔记本和 SDR 设备去攻击它，或者我们尝试制作自己的便捷式硬件来利用这个缺陷实现对设备的攻击。</p>
<p>这个我们使用 Arduino 和 RF 模块实现攻击功能。使用 Arduino 是因为廉价、易上手，当然你有能力的话也可以使用其他单片机去实现，或者自己设计电路，使用更好的 CC1111 芯片去实现 RF 功能。</p>
<h3 id="4-1-硬件列表"><a href="#4-1-硬件列表" class="headerlink" title="4.1 硬件列表"></a>4.1 硬件列表</h3><ol>
<li>Arduino Pro Micro</li>
<li>315 MHz or 433 MHz 无线模块</li>
<li>轻触按钮</li>
<li>10 K 电阻</li>
<li>面包板</li>
<li>面包板跳线</li>
</ol>
<h3 id="4-2-硬件连接方式"><a href="#4-2-硬件连接方式" class="headerlink" title="4.2 硬件连接方式"></a>4.2 硬件连接方式</h3><p><img src="//files.iternull.com/images/2017-02-04_01-0003.png" alt=""><br><img src="//files.iternull.com/images/2017-02-04_01-0004.jpg" alt=""></p>
<h3 id="4-3-功能代码"><a href="#4-3-功能代码" class="headerlink" title="4.3 功能代码"></a>4.3 功能代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">  Brute Force Attack 4 ^ 8 Remote Control</div><div class="line">  </div><div class="line">  https://github.com/iternull/bruteforce3-8remote</div><div class="line">  </div><div class="line">*/</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RCSwitch.h&gt;</span></span></div><div class="line"></div><div class="line">RCSwitch mySwitch = RCSwitch();</div><div class="line"></div><div class="line"><span class="comment">// 定义 4 个按键针脚</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> button_a = <span class="number">10</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> button_b = <span class="number">16</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> button_c = <span class="number">14</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> button_d = <span class="number">15</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> butStatA = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> butStatB = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> butStatC = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> butStatD = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> dfa = <span class="number">256</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">  Serial.begin(<span class="number">9600</span>);</div><div class="line">  </div><div class="line">  mySwitch.enableTransmit(<span class="number">9</span>);    <span class="comment">// 定义发送模块的数据传输针脚</span></div><div class="line">  mySwitch.setPulseLength(<span class="number">170</span>);   <span class="comment">// 定义脉冲长度，这个值具体看你使用的遥控器而定</span></div><div class="line">  pinMode(button_a, INPUT);</div><div class="line">  pinMode(button_b, INPUT);</div><div class="line">  pinMode(button_c, INPUT);</div><div class="line">  pinMode(button_d, INPUT);</div><div class="line">  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="comment">// read the state of the pushbutton value:</span></div><div class="line">  butStatA = digitalRead(button_a);</div><div class="line">  butStatB = digitalRead(button_b);</div><div class="line">  butStatC = digitalRead(button_c);</div><div class="line">  butStatD = digitalRead(button_d);</div><div class="line"></div><div class="line">  <span class="comment">// Button A</span></div><div class="line">  <span class="keyword">if</span> (butStatA == HIGH) &#123;    <span class="comment">// check if the pushbutton is pressed.</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">0</span>; i &lt; <span class="number">65535</span>; i++ )&#123;</div><div class="line">      <span class="keyword">long</span> key = <span class="keyword">long</span>(i * dfa) + <span class="keyword">int</span>(<span class="number">192</span>);</div><div class="line">      mySwitch.send(key, <span class="number">24</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">// Button B</span></div><div class="line">  <span class="keyword">if</span> (butStatB == HIGH) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">0</span>; i &lt; <span class="number">65535</span>; i++ )&#123;</div><div class="line">      <span class="keyword">long</span> key = <span class="keyword">long</span>(i * dfa) + <span class="keyword">int</span>(<span class="number">48</span>);</div><div class="line">      mySwitch.send(key, <span class="number">24</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">// Button C</span></div><div class="line">  <span class="keyword">if</span> (butStatC == HIGH) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">0</span>; i &lt; <span class="number">65535</span>; i++ )&#123;</div><div class="line">      <span class="keyword">long</span> key = <span class="keyword">long</span>(i * dfa) + <span class="keyword">int</span>(<span class="number">12</span>);</div><div class="line">      mySwitch.send(key, <span class="number">24</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">// Button D</span></div><div class="line">  <span class="keyword">if</span> (butStatD == HIGH) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">0</span>; i &lt; <span class="number">65535</span>; i++ )&#123;</div><div class="line">      <span class="keyword">long</span> key = <span class="keyword">long</span>(i * dfa) + <span class="keyword">int</span>(<span class="number">3</span>);</div><div class="line">      mySwitch.send(key, <span class="number">24</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>注：这段代码实现的是发送 <code>4 ^ 8</code> 的所有可能性。</li>
</ul>
<p>生成 <code>3 ^ 8</code> 的所有可能性的算法我还没实现，暂时也没时间去继续研究如何实现了，<strong>过完年得去找工作了</strong>。</p>
<h2 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h2><p>在实际测试中暴力穷举攻击确实是有效的，但由于时间匆忙，硬件设计和代码都不是最优化的，所攻击的速度还是差了点。如果你使用的是这种类型的遥控设备也不用担心会这么样。</p>
<p><a href="https://github.com/iternull/bruteforce3-8remote" target="_blank" rel="external">bruteforce3-8remote</a> 这个项目后续还会更新，争取达到最高的可用度，还会再加一些功能。<br>目前我得先去忙着找工作，才是正事。未来还会研究一些其他的硬件安全的破解/逆向项目的。</p>
<p>最后感谢一下我的一位小伙伴（匿名）给的一些帮助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无线遥控器（无线电遥控器）在我们生活中非常常见，应用于各种场景，方便着用户的使用。不过大多数还是用于安防方面的，比如: 遥控报警器、电动卷帘门、电动伸缩门、遥控电开关、无线遥控门铃……&lt;br&gt;不过国内关注和研究这类硬件安全的人比较少，我知道你们大多都是 Web 安全狗，我挖洞挖不过你们所以做了一只硬件安全狗。&lt;br&gt;
    
    </summary>
    
    
      <category term="433 MHz" scheme="https://blog.iternull.com/tags/433-MHz/"/>
    
      <category term="Attack" scheme="https://blog.iternull.com/tags/Attack/"/>
    
      <category term="Arduino" scheme="https://blog.iternull.com/tags/Arduino/"/>
    
      <category term="Brute Force" scheme="https://blog.iternull.com/tags/Brute-Force/"/>
    
  </entry>
  
  <entry>
    <title>解码无线遥控器信号的 N 种方法</title>
    <link href="https://blog.iternull.com/posts/2017/02/02/Decoding-Remote-Control-Signals.html"/>
    <id>https://blog.iternull.com/posts/2017/02/02/Decoding-Remote-Control-Signals.html</id>
    <published>2017-02-02T14:38:14.000Z</published>
    <updated>2017-02-11T05:57:02.101Z</updated>
    
    <content type="html"><![CDATA[<p>本文中的无线遥控器指的是以 <a href="https://en.wikipedia.org/wiki/On-off_keying" target="_blank" rel="external">OOK</a> 方式调制信号的无线遥控器，这是我们在生活中最常见的遥控器。<br><a id="more"></a></p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0001.jpg" alt=""> </p>
<h3 id="1、RC-Switch"><a href="#1、RC-Switch" class="headerlink" title="1、RC Switch"></a>1、RC Switch</h3><p><a href="https://github.com/sui77/rc-switch" target="_blank" rel="external">rc switch</a> 是 <a href="https://www.arduino.cc/" target="_blank" rel="external">Arduino</a> 的一个库。这个库可以让你使用 Arduino 接收/解码遥控器信号，并发送自定义编码的信号。</p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0002.png" alt=""> </p>
<h3 id="2、RTL-433"><a href="#2、RTL-433" class="headerlink" title="2、RTL_433"></a>2、RTL_433</h3><p><a href="https://github.com/merbanan/rtl_433" target="_blank" rel="external">rtl_433</a> 是一个基于 <code>RTL2832</code> 电视棒的 <code>433.92 MHz</code> 通用数据接收器，设计是被用来解码无线温度计数据的，也具有解码其他常见信号编码的功能。<br> <code>rtl_433</code> 并非只能接收 <code>433 MHz</code> 频段的信号，默认是接收 <code>433920000 Hz</code> 的频段，可以通过 <code>-f</code> 参数指定频段。</p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0003.png" alt=""></p>
<h3 id="3、RFCat"><a href="#3、RFCat" class="headerlink" title="3、RFCat"></a>3、RFCat</h3><p><a href="https://bitbucket.org/atlas0fd00m/rfcat" target="_blank" rel="external">rfcat</a> 是一个基于 <a href="http://www.ti.com/" target="_blank" rel="external">TI</a> <a href="http://www.ti.com/product/CC1110-CC1111" target="_blank" rel="external">C1111</a> 芯片的项目。<br>rfcat 支持 <a href="http://www.ti.com/tool/cc1111emk868-915" target="_blank" rel="external">CC1111EMK</a>、<a href="http://www.ti.com/tool/EZ430-CHRONOS" target="_blank" rel="external">Chronos USB RF Dongle</a>、<a href="http://greatscottgadgets.com/yardstickone/" target="_blank" rel="external">YARD Stick One</a> 3 款硬件，这 3 款硬件都支持收发功能，价格也比较贵。<br>需要在硬件上刷上 rfcat 制定的 Bootloader 才能使用，rfcat 客户端是 Python 语言编写的，对其再开发也比较容易，其中有款名叫 <a href="https://github.com/exploitagency/github-rfpwnon" target="_blank" rel="external">rfpwnon</a> 的信号暴力攻击攻击就是再其基础上开发的。</p>
<h3 id="4、Inspectrum"><a href="#4、Inspectrum" class="headerlink" title="4、Inspectrum"></a>4、Inspectrum</h3><p><a href="https://github.com/miek/inspectrum" target="_blank" rel="external">inspectrum</a> 是一款专业的用于对来着 <a href="https://en.wikipedia.org/wiki/Software-defined_radio" target="_blank" rel="external">SDR</a> 设备捕获的信号文件进行分析解码的工具。<br>inspectrum 配合 <a href="https://github.com/tresacton/dspectrum" target="_blank" rel="external">dspectrum</a> 使用，对信号解码会更方便。</p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0004.png" alt=""></p>
<ul>
<li>注：Kali Linux 官方仓库里的版本太老了，安装上后会发现没有你想要的功能。请手动编译安装，如果编译出错请检查是否安装了 <code>libliquid-dev</code> 这个依赖包，或者根据错误提示解决问题。</li>
</ul>
<h3 id="5、WaveConverter"><a href="#5、WaveConverter" class="headerlink" title="5、WaveConverter"></a>5、WaveConverter</h3><p><a href="https://github.com/paulgclark/waveconverter" target="_blank" rel="external">WaveConverter</a> 是另一款专业的用于对来自 <a href="https://en.wikipedia.org/wiki/Software-defined_radio" target="_blank" rel="external">SDR</a> 设备信号的解码工具。</p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0005.png" alt=""></p>
<h3 id="6、Audacity"><a href="#6、Audacity" class="headerlink" title="6、Audacity"></a>6、Audacity</h3><p><a href="http://www.audacityteam.org/" target="_blank" rel="external">Audacity</a> 是一款音频编辑软件。Audacity 也是对 <a href="https://en.wikipedia.org/wiki/Software-defined_radio" target="_blank" rel="external">SDR</a> 设备所采集的信号解码里的老牌工具，功能很强大，对捕获的 <a href="https://en.wikipedia.org/wiki/Impulse_response" target="_blank" rel="external">IR</a> 信号也能解码。不过使用麻烦，新手上手可能比较困难。</p>
<p><img src="//files.iternull.com/images/2017-02-02_01-0006.png" alt=""></p>
<hr>
<ul>
<li>注：以上列出来的只是常见的方法。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文中的无线遥控器指的是以 &lt;a href=&quot;https://en.wikipedia.org/wiki/On-off_keying&quot;&gt;OOK&lt;/a&gt; 方式调制信号的无线遥控器，这是我们在生活中最常见的遥控器。&lt;br&gt;
    
    </summary>
    
    
      <category term="433 MHz" scheme="https://blog.iternull.com/tags/433-MHz/"/>
    
      <category term="Decoding" scheme="https://blog.iternull.com/tags/Decoding/"/>
    
  </entry>
  
  <entry>
    <title>使用 Arduino 和 RC Switch 逆向遥控器</title>
    <link href="https://blog.iternull.com/posts/2017/01/29/Use-the-Arduino-and-RC-Switch-reverse-remote-controls.html"/>
    <id>https://blog.iternull.com/posts/2017/01/29/Use-the-Arduino-and-RC-Switch-reverse-remote-controls.html</id>
    <published>2017-01-29T09:07:41.000Z</published>
    <updated>2017-02-11T06:01:31.175Z</updated>
    
    <content type="html"><![CDATA[<p>我们平常对遥控器信号的截取、分析、重放，一般用得都是 SDR 设备，常见的有 R820T2+RTL2832U, CC1111EMK, Yardstick One, HackRF One ……<br>其中 R820T2+RTL2832U 电视棒是最廉价的 SDR 设备，35 人民币左右就能得到，其余的都是比较昂贵的设备。不过使用电视棒你只能接收信号，不能发送信号。</p>
<p>这里我们使用更廉价的设备（Arduino + 315 or 433 MHz 超再生模块）来实现对常见固定码遥控器信号的分析与重放。<br><a id="more"></a><br>常见型号的 Arduino 开发板都可以支持，无线模块建议不同频段的多买几对，价格也不贵。</p>
<h2 id="1、接收-解码信号"><a href="#1、接收-解码信号" class="headerlink" title="1、接收/解码信号"></a>1、接收/解码信号</h2><p>这里我们使用 <a href="https://github.com/sui77/rc-switch" target="_blank" rel="external">RC Switch</a> 库接收和解码信号。</p>
<h3 id="1-1-安装-RC-Switch-库"><a href="#1-1-安装-RC-Switch-库" class="headerlink" title="1.1 安装 RC Switch 库"></a>1.1 安装 RC Switch 库</h3><p>打开 Arduino IDE ，在选项栏 项目 &gt; 加载库 &gt; 管理库 里打开库管理器，搜索 <code>rc switch</code> 并安装它。</p>
<p><img src="//files.iternull.com/images/2017-01-29_01-0001.png" alt=""></p>
<h3 id="1-2-连接-Arduino-和接收模块"><a href="#1-2-连接-Arduino-和接收模块" class="headerlink" title="1.2 连接 Arduino 和接收模块"></a>1.2 连接 Arduino 和接收模块</h3><p><img src="//files.iternull.com/images/2017-01-29_01-0002.png" alt=""></p>
<p>使用数据线连接 Arduino 到电脑，并在 Arduino IDE 里选择对应的板和端口号。</p>
<p><img src="//files.iternull.com/images/2017-01-29_01-0003.png" alt=""></p>
<h3 id="1-3-上传代码"><a href="#1-3-上传代码" class="headerlink" title="1.3 上传代码"></a>1.3 上传代码</h3><p>打开信号接收的示例代码。在选项栏 文件 &gt; 示例 &gt; rc-switch &gt; ReceiveDemo_Simple</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">  Simple example for receiving</div><div class="line">  </div><div class="line">  https://github.com/sui77/rc-switch/</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RCSwitch.h&gt;</span></span></div><div class="line"></div><div class="line">RCSwitch mySwitch = RCSwitch();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</div><div class="line">  Serial.begin(<span class="number">9600</span>);</div><div class="line">  mySwitch.enableReceive(<span class="number">0</span>);  <span class="comment">// Receiver on interrupt 0 =&gt; that is pin #2</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</div><div class="line">  <span class="keyword">if</span> (mySwitch.available()) &#123;</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> value = mySwitch.getReceivedValue();</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (value == <span class="number">0</span>) &#123;</div><div class="line">      Serial.print(<span class="string">"Unknown encoding"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      Serial.print(<span class="string">"Received "</span>);</div><div class="line">      Serial.print( mySwitch.getReceivedValue() );</div><div class="line">      Serial.print(<span class="string">" / "</span>);</div><div class="line">      Serial.print( mySwitch.getReceivedBitlength() );</div><div class="line">      Serial.print(<span class="string">"bit "</span>);</div><div class="line">      Serial.print(<span class="string">"Protocol: "</span>);</div><div class="line">      Serial.println( mySwitch.getReceivedProtocol() );</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    mySwitch.resetAvailable();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>点击上传，上传代码到 Arduino</p>
<p><img src="//files.iternull.com/images/2017-01-29_01-0004.png" alt=""></p>
<p>想要注意的一点，在 <code>void setup()</code> 里有一行代码是定义数据接收的针脚的，不同的 Arduino 版本针脚不一样，如果接错线会导致 Arduino 没法正常工作，具体可以参考 Arduino 的文档。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mySwitch.enableReceive(<span class="number">0</span>);  <span class="comment">// Receiver on interrupt 0 =&gt; that is pin #2</span></div></pre></td></tr></table></figure>
<h3 id="1-4-查看信号解码"><a href="#1-4-查看信号解码" class="headerlink" title="1.4 查看信号解码"></a>1.4 查看信号解码</h3><p>打开串口监视器。在选项栏 工具 &gt; 串口监视器 或者按快捷键 <code>Ctrl + Shift + M</code></p>
<p>然后你可以按下遥控器，Arduino 会解码它，并在串口监视器上显示出你按下的按键所发送的代码。</p>
<p><img src="//files.iternull.com/images/2017-01-29_01-0005.png" alt=""></p>
<h2 id="2、重放信号"><a href="#2、重放信号" class="headerlink" title="2、重放信号"></a>2、重放信号</h2><p>当你知道了信号的代码后你就可以对它进行信号的重放。</p>
<h3 id="2-1-连接-Arduino-和发送模块"><a href="#2-1-连接-Arduino-和发送模块" class="headerlink" title="2.1 连接 Arduino 和发送模块"></a>2.1 连接 Arduino 和发送模块</h3><p><img src="//files.iternull.com/images/2017-01-29_01-0006.png" alt=""></p>
<h3 id="2-2-修改示例代码"><a href="#2-2-修改示例代码" class="headerlink" title="2.2 修改示例代码"></a>2.2 修改示例代码</h3><p>打开信号发送的示例代码。在选项栏 文件 &gt; 示例 &gt; rc-switch &gt; SendDemo</p>
<p>示例代码里有好几种发送选项，和好几个被注释的发送参数。</p>
<p>这里我们使用十进制的发送方式。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">  Example for different sending methods</div><div class="line">  </div><div class="line">  https://github.com/sui77/rc-switch/</div><div class="line">  </div><div class="line">*/</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;RCSwitch.h&gt;</span></span></div><div class="line"></div><div class="line">RCSwitch mySwitch = RCSwitch();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">  Serial.begin(<span class="number">9600</span>);</div><div class="line">  </div><div class="line">  <span class="comment">// Transmitter is connected to Arduino Pin #10  </span></div><div class="line">  mySwitch.enableTransmit(<span class="number">10</span>);</div><div class="line"></div><div class="line">  <span class="comment">// Optional set pulse length.</span></div><div class="line">  <span class="comment">// mySwitch.setPulseLength(320);</span></div><div class="line">  </div><div class="line">  <span class="comment">// Optional set protocol (default is 1, will work for most outlets)</span></div><div class="line">  <span class="comment">// mySwitch.setProtocol(2);</span></div><div class="line">  </div><div class="line">  <span class="comment">// Optional set number of transmission repetitions.</span></div><div class="line">  <span class="comment">// mySwitch.setRepeatTransmit(15);</span></div><div class="line">  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="comment">/* See Example: TypeA_WithDIPSwitches */</span></div><div class="line">  <span class="comment">/*</span></div><div class="line">  mySwitch.switchOn("11111", "00010");</div><div class="line">  delay(1000);</div><div class="line">  mySwitch.switchOff("11111", "00010");</div><div class="line">  delay(1000);</div><div class="line">  */</div><div class="line"></div><div class="line">  <span class="comment">/* Same switch as above, but using decimal code */</span></div><div class="line">  mySwitch.send(<span class="number">5393</span>, <span class="number">24</span>);  <span class="comment">// 5393 表示发送的信号代码， 24 表示数据长度。</span></div><div class="line">  delay(<span class="number">1000</span>);              <span class="comment">// 暂停 1000 毫秒后再执行下一行代码。</span></div><div class="line">  mySwitch.send(<span class="number">5396</span>, <span class="number">24</span>);</div><div class="line">  delay(<span class="number">1000</span>);  </div><div class="line"></div><div class="line">  <span class="comment">/* Same switch as above, but using binary code */</span></div><div class="line">  <span class="comment">/*</span></div><div class="line">  mySwitch.send("000000000001010100010001");</div><div class="line">  delay(1000);  </div><div class="line">  mySwitch.send("000000000001010100010100");</div><div class="line">  delay(1000);</div><div class="line">  */</div><div class="line"></div><div class="line">  <span class="comment">/* Same switch as above, but tri-state code */</span> </div><div class="line">  <span class="comment">/*</span></div><div class="line">  mySwitch.sendTriState("00000FFF0F0F");</div><div class="line">  delay(1000);  </div><div class="line">  mySwitch.sendTriState("00000FFF0FF0");</div><div class="line">  delay(1000);</div><div class="line">  */</div><div class="line"></div><div class="line">  delay(<span class="number">20000</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-3-上传代码"><a href="#2-3-上传代码" class="headerlink" title="2.3 上传代码"></a>2.3 上传代码</h3><p><img src="//files.iternull.com/images/2017-01-29_01-0004.png" alt=""></p>
<p>代码上传完成后会一直向外发送信号。</p>
<h2 id="3、可能遇到的问题"><a href="#3、可能遇到的问题" class="headerlink" title="3、可能遇到的问题"></a>3、可能遇到的问题</h2><p>1、串口监视器没有显示，不能正常接收信号。</p>
<p>导致出现正在错误的情况有很多，比如打开的端口错误、接收模块与 Arduino 的连接错误、遥控器和接收模块不是同一个频段的……</p>
<p>2、发送的信号正常但被遥控的设备没响应。</p>
<p>遇到这种情况你需要使用 RC Switch 库的 ReceiveDemo_Advanced 示例代码进行接收和解码信号，其中有一个 <code>PulseLength</code> 字段，RC Switch 库默认的值是 <code>320</code>，而常见的遥控器是 <code>185</code> 你需要修改发送代码的 <code>mySwitch.setPulseLength(185);</code> 参数。</p>
<hr>
<ul>
<li>RC Switch: <a href="https://github.com/sui77/rc-switch" target="_blank" rel="external">https://github.com/sui77/rc-switch</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们平常对遥控器信号的截取、分析、重放，一般用得都是 SDR 设备，常见的有 R820T2+RTL2832U, CC1111EMK, Yardstick One, HackRF One ……&lt;br&gt;其中 R820T2+RTL2832U 电视棒是最廉价的 SDR 设备，35 人民币左右就能得到，其余的都是比较昂贵的设备。不过使用电视棒你只能接收信号，不能发送信号。&lt;/p&gt;
&lt;p&gt;这里我们使用更廉价的设备（Arduino + 315 or 433 MHz 超再生模块）来实现对常见固定码遥控器信号的分析与重放。&lt;br&gt;
    
    </summary>
    
    
      <category term="433 MHz" scheme="https://blog.iternull.com/tags/433-MHz/"/>
    
      <category term="Arduino" scheme="https://blog.iternull.com/tags/Arduino/"/>
    
      <category term="315 MHz" scheme="https://blog.iternull.com/tags/315-MHz/"/>
    
      <category term="RC Switch" scheme="https://blog.iternull.com/tags/RC-Switch/"/>
    
  </entry>
  
  <entry>
    <title>对码与拨码遥控器的拷贝方法</title>
    <link href="https://blog.iternull.com/posts/2017/01/11/Onthe-code-amd-dial-code-remote-control.html"/>
    <id>https://blog.iternull.com/posts/2017/01/11/Onthe-code-amd-dial-code-remote-control.html</id>
    <published>2017-01-11T07:05:18.000Z</published>
    <updated>2017-02-11T05:59:54.032Z</updated>
    
    <content type="html"><![CDATA[<p>对码遥控器是能自动学习另一个同频段的遥控器。拨码遥控器是带一个 3 态 8 位拨码开关的遥控器，使用时需要开盖拨动开关位。<br><a id="more"></a></p>
<h2 id="对码遥控器拷贝方法"><a href="#对码遥控器拷贝方法" class="headerlink" title="对码遥控器拷贝方法"></a>对码遥控器拷贝方法</h2><p><img src="//files.iternull.com/images/2017-01-11_02-0001.jpg" alt=""></p>
<h3 id="清码"><a href="#清码" class="headerlink" title="清码"></a>清码</h3><p>同时按下遥控器上排的两个按键，指示灯不停的闪动后，再松开您的手，即表示清除成功。<br>清除成功的辨别方法是随意按遥控器四个按键的一个，指示灯仅闪一下后熄灭。</p>
<h3 id="对拷"><a href="#对拷" class="headerlink" title="对拷"></a>对拷</h3><p>一个手拿着原来的遥控器一个手拿着拷贝遥控器，两个遥控器尽量靠近，同时按下两个遥控器开门键，<br>拷贝遥控器指示灯快速闪动即表示复制成功，再松开您的手。依次按相同方法，将其它三个按键拷贝上去。<br>（拷贝时候如果灯不闪动，可以换个位置，将两个遥控器的头部对着再拷贝试试。总之可以多换几个位置试试。）</p>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p>若误操作清除掉有用代码后（即可能不小心按了上面的两个键），<br>在没有重新拷贝其他遥控器之前可同时按下遥控器下排两个按键指示灯快速闪烁再松开手表示恢复完成了。</p>
<h2 id="拨码遥控器拷贝方法"><a href="#拨码遥控器拷贝方法" class="headerlink" title="拨码遥控器拷贝方法"></a>拨码遥控器拷贝方法</h2><p><img src="//files.iternull.com/images/2017-01-11_02-0002.jpg" alt=""></p>
<h3 id="对应码表拨码"><a href="#对应码表拨码" class="headerlink" title="对应码表拨码"></a>对应码表拨码</h3><p><img src="//files.iternull.com/images/2017-01-11_02-0003.png" alt=""></p>
<h3 id="对应焊点拨码"><a href="#对应焊点拨码" class="headerlink" title="对应焊点拨码"></a>对应焊点拨码</h3><p><img src="//files.iternull.com/images/2017-01-11_02-0004.jpg" alt=""></p>
<p>如果遥控器上没有拨码表，也没有焊点那这可能是一个学习码的遥控器，一般在被控制端会有个学习键。<br>在适配遥控器时还要注意区分工作频段，通常在主板晶振上会有对应的数字如：433、315 什么的那就是这个遥控器对应的频段。<br>不同频段的遥控器是没反通用的，还有一个判断方法是拿一个以知频段的遥控器一种发出信号看是否会产生干扰，<br>如果会这说明这两个遥控器是在同一频段的，这方法不一定总是有效。</p>
<hr>
<ul>
<li><a href="http://jingyan.baidu.com/article/6b97984db4c0961ca2b0bf15.html" target="_blank" rel="external">http://jingyan.baidu.com/article/6b97984db4c0961ca2b0bf15.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对码遥控器是能自动学习另一个同频段的遥控器。拨码遥控器是带一个 3 态 8 位拨码开关的遥控器，使用时需要开盖拨动开关位。&lt;br&gt;
    
    </summary>
    
    
      <category term="433 MHz" scheme="https://blog.iternull.com/tags/433-MHz/"/>
    
  </entry>
  
  <entry>
    <title>使用 FFmpeg 下载 Twitch 视频</title>
    <link href="https://blog.iternull.com/posts/2017/01/11/FFmpeg-Download-Twitch-Video.html"/>
    <id>https://blog.iternull.com/posts/2017/01/11/FFmpeg-Download-Twitch-Video.html</id>
    <published>2017-01-11T06:25:17.000Z</published>
    <updated>2017-02-11T05:58:22.475Z</updated>
    
    <content type="html"><![CDATA[<p>Twitch 是一个视频网站，使用的是流媒体播放技术。我之前使用另一种方法来使用迅雷下载视频，不过网站好像升级了方法失效了。<br>这里介绍使用 FFmpeg 的下载的方法。<br><a id="more"></a><br>使用流媒体播放技术会先获取一个 M3U8 格式的文件，M3U8 是包含多媒体播放列表的计算机文件格式，M3U8 文件指定一个或多个媒体文件的位置，而不是视频本身。</p>
<p>打开浏览器调试功能或者称作开发者功能，这以 Chrome 为例。</p>
<p>先按 <code>F12</code> 打开浏览器开发者功能，再浏览器里打开一个 Twitch 的<a href="https://www.twitch.tv/reddit/v/113771480" target="_blank" rel="external">视频</a>页面。</p>
<p>点击开发者工具的 Network 功能，在过滤器输入框内输入 <code>m3u8</code>，然后你就会看到几个以 <code>.m3u8</code> 后缀命名的文件，没有的话刷新一下页面。<br>我们需要的是一个以当前视频 ID 命名的 <code>.m3u8</code> 文件。在那个文件上右键 <code>Open link in new tab</code> 会打开一个新窗口，直接下载这个文件。</p>
<p><img src="//files.iternull.com/images/2017-01-11_01-0001.png" alt=""></p>
<p>打开文件会看到如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#EXTM3U</div><div class="line">#EXT-X-TWITCH-INFO:ORIGIN=&quot;swift&quot;,CLUSTER=&quot;akamai_vod&quot;,REGION=&quot;AS&quot;,MANIFEST-CLUSTER=&quot;akamai_vod&quot;,USER-IP=&quot;*.*.*.*&quot;</div><div class="line">#EXT-X-MEDIA:TYPE=VIDEO,GROUP-ID=&quot;chunked&quot;,NAME=&quot;Source&quot;,AUTOSELECT=YES,DEFAULT=YES</div><div class="line">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=2224881,CODECS=&quot;avc1.64001F,mp4a.40.2&quot;,RESOLUTION=&quot;960x540&quot;,VIDEO=&quot;chunked&quot;</div><div class="line">https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/chunked/index-dvr.m3u8</div><div class="line">#EXT-X-MEDIA:TYPE=VIDEO,GROUP-ID=&quot;high&quot;,NAME=&quot;High&quot;,AUTOSELECT=YES,DEFAULT=YES</div><div class="line">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1860187,CODECS=&quot;avc1.000000,mp4a.40.2&quot;,RESOLUTION=&quot;0x0&quot;,VIDEO=&quot;high&quot;</div><div class="line">https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/high/index-dvr.m3u8</div><div class="line">#EXT-X-MEDIA:TYPE=VIDEO,GROUP-ID=&quot;medium&quot;,NAME=&quot;Medium&quot;,AUTOSELECT=YES,DEFAULT=YES</div><div class="line">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1042492,CODECS=&quot;avc1.000000,mp4a.40.2&quot;,RESOLUTION=&quot;0x0&quot;,VIDEO=&quot;medium&quot;</div><div class="line">https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/medium/index-dvr.m3u8</div><div class="line">#EXT-X-MEDIA:TYPE=VIDEO,GROUP-ID=&quot;low&quot;,NAME=&quot;Low&quot;,AUTOSELECT=YES,DEFAULT=YES</div><div class="line">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=733910,CODECS=&quot;avc1.000000,mp4a.40.2&quot;,RESOLUTION=&quot;0x0&quot;,VIDEO=&quot;low&quot;</div><div class="line">https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/low/index-dvr.m3u8</div><div class="line">#EXT-X-MEDIA:TYPE=VIDEO,GROUP-ID=&quot;mobile&quot;,NAME=&quot;Mobile&quot;,AUTOSELECT=YES,DEFAULT=YES</div><div class="line">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=324657,CODECS=&quot;avc1.000000,mp4a.40.2&quot;,RESOLUTION=&quot;0x0&quot;,VIDEO=&quot;mobile&quot;</div><div class="line">https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/mobile/index-dvr.m3u8</div></pre></td></tr></table></figure>
<p>我们一般使用 <code>chunked</code> 的链接。<br>复制你选择的链接，使用 FFmpeg 下载并转码他。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./ffmpeg -i &quot;https://vod120-ttvnw.akamaized.net/v1/AUTH_system/vods_986f/reddit_24198780160_581094262/chunked/index-dvr.m3u8&quot; -c copy -bsf:a aac_adtstoasc file_name.mkv</div></pre></td></tr></table></figure>
<p><code>file_name.mkv</code> 是你的文件名，如果不报错就会完整的下载整段视频。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Twitch 是一个视频网站，使用的是流媒体播放技术。我之前使用另一种方法来使用迅雷下载视频，不过网站好像升级了方法失效了。&lt;br&gt;这里介绍使用 FFmpeg 的下载的方法。&lt;br&gt;
    
    </summary>
    
    
      <category term="FFmpeg" scheme="https://blog.iternull.com/tags/FFmpeg/"/>
    
      <category term="Twitch" scheme="https://blog.iternull.com/tags/Twitch/"/>
    
  </entry>
  
  <entry>
    <title>Synergy 使用简介</title>
    <link href="https://blog.iternull.com/posts/2016/08/05/Synergy-Introduction.html"/>
    <id>https://blog.iternull.com/posts/2016/08/05/Synergy-Introduction.html</id>
    <published>2016-08-05T05:59:51.000Z</published>
    <updated>2017-02-11T06:00:56.741Z</updated>
    
    <content type="html"><![CDATA[<p>Synergy 是一款可以让你的多台电脑共享一套键盘和鼠标的工具，并且支持共享剪贴板。<br>Synergy 是款跨平台的开源软件有收费版与免费版，支持 Win/Mac/Linux 可以有效提高工作效率。<br><a id="more"></a></p>
<h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>Synergy 曾经是完全免费的，现在官方推荐你购买付费版本，不过也放出了免费版本。<br>Synergy 官网：<a href="http://symless.com/synergy/" target="_blank" rel="external">http://symless.com/synergy/</a><br>Synergy 免费版本下载：<a href="http://symless.com/download/free/" target="_blank" rel="external">http://symless.com/download/free/</a></p>
<h2 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a>2、配置</h2><p>使用 Synergy 只是需要 2 台电脑，插了要共享出去的键盘和鼠标的电脑作为服务端，其他的电脑作为客户端。</p>
<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p><img src="//files.iternull.com/images/2016-08-05_01-0001.png" alt=""></p>
<p>勾选为服务端模式，选择自己配置服务端设置，点击 <code>Configure Server</code> 会弹出服务端的配置界面。</p>
<p><img src="//files.iternull.com/images/2016-08-05_01-0002.png" alt=""></p>
<p>配置界面默认只有本机的配置图标，需要手动添加其他电脑进来。</p>
<p>例如在本机的右侧有一台 Windows 笔记本，点击右上角的电脑图标拖动到本机图标的右侧（位置请根据显示屏的物理定义，否则鼠标移动会非常别扭）。</p>
<p>双击新拖进来的图标打开窗口设置界面，在 <code>Screen name</code> 输入框里填入要添加电脑的主机名（主机名必须与那台主机的主机名一样），点击 <code>OK</code> 保存退出。<br>要删除某台客户端电脑直接拖动图标到左上角的垃圾桶即可。<br>添加完主机后点击 <code>OK</code> 保存退出。</p>
<p>保存配置文件到本地<br>点击 <code>File</code> 选项下的 <code>Save configure</code> 保存到自己指定的目录里，或者按快捷键 <code>Ctrl + Alt + S</code> 保存。<br>点击右下角 <code>Start</code> 启动 Synergy 服务。</p>
<p><img src="//files.iternull.com/images/2016-08-05_01-0003.png" alt=""></p>
<p>Synergy 窗口界面可以关闭，Synergy 会自动在后台运行，如果要退出 Synergy 点击 <code>File</code> 选项下的 <code>Quit</code> 即可退出。</p>
<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p><img src="//files.iternull.com/images/2016-08-05_01-0004.png" alt=""></p>
<p>勾选为客户端模式，在 <code>Server IP</code> 输入框里填入服务端的 <code>IP</code> ，点击右下角 <code>Start</code> 启动 Synergy 服务，链接到服务端。</p>
<h2 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h2><p>配置完成后，并且无报错即可正常使用了。<br>移动鼠标到超出本机的右侧边界即可移动到右侧另一台电脑的屏幕上，键盘也自动会切换过去。</p>
<p>其余更多功能请自行摸索。</p>
<hr>
<ul>
<li>Synergy Wiki: <a href="https://github.com/symless/synergy/wiki" target="_blank" rel="external">https://github.com/symless/synergy/wiki</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Synergy 是一款可以让你的多台电脑共享一套键盘和鼠标的工具，并且支持共享剪贴板。&lt;br&gt;Synergy 是款跨平台的开源软件有收费版与免费版，支持 Win/Mac/Linux 可以有效提高工作效率。&lt;br&gt;
    
    </summary>
    
    
      <category term="Synergy" scheme="https://blog.iternull.com/tags/Synergy/"/>
    
      <category term="Keyborad" scheme="https://blog.iternull.com/tags/Keyborad/"/>
    
      <category term="Mouse" scheme="https://blog.iternull.com/tags/Mouse/"/>
    
  </entry>
  
  <entry>
    <title>GnuPG 入门教程</title>
    <link href="https://blog.iternull.com/posts/2016/07/16/GPG-Getting-Started-Tutorial.html"/>
    <id>https://blog.iternull.com/posts/2016/07/16/GPG-Getting-Started-Tutorial.html</id>
    <published>2016-07-16T02:26:33.000Z</published>
    <updated>2017-06-09T21:03:13.757Z</updated>
    
    <content type="html"><![CDATA[<p>GnuPG (GNU Privacy Guard，GPG) 是一种加密软件，它是 PGP 加密软件的满足 GPL 协议的替代物。GnuPG 依照由 IETF 制定的 OpenPGP 技术标准设计。GnuPG 是用于加密、数字签章及产生非对称匙对的软件。GPG 兼容 PGP (Pretty Good Privacy) 的功能。<br><a id="more"></a></p>
<h2 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h2><ul>
<li>Debian / Ubuntu</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install gnupg</div></pre></td></tr></table></figure>
<ul>
<li>CentOS / Fedora</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gnupg</div></pre></td></tr></table></figure>
<h2 id="2、第一次使用"><a href="#2、第一次使用" class="headerlink" title="2、第一次使用"></a>2、第一次使用</h2><p>首先你要有一对自己的密钥，才能开始使用。</p>
<h3 id="2-1、生成密钥对"><a href="#2-1、生成密钥对" class="headerlink" title="2.1、生成密钥对"></a>2.1、生成密钥对</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --gen-key</div></pre></td></tr></table></figure>
<p>回车以后，会跳出一大段文字：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">gpg (GnuPG) 1.4.12; Copyright (C) 2012 Free Software Foundation, Inc.</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.</div><div class="line"></div><div class="line">gpg: directory `/home/zero/.gnupg<span class="string">' created</span></div><div class="line">gpg: new configuration file `/home/zero/.gnupg/gpg.conf' created</div><div class="line">gpg: WARNING: options <span class="keyword">in</span> `/home/zero/.gnupg/gpg.conf<span class="string">' are not yet active during this run</span></div><div class="line">gpg: keyring `/home/zero/.gnupg/secring.gpg' created</div><div class="line">gpg: keyring `/home/zero/.gnupg/pubring.gpg<span class="string">' created</span></div><div class="line">Please select what kind of key you want:</div><div class="line">   (1) RSA and RSA (default)</div><div class="line">   (2) DSA and Elgamal</div><div class="line">   (3) DSA (sign only)</div><div class="line">   (4) RSA (sign only)</div><div class="line">Your selection?		// 选择加密算法，默认选择 (1) RSA 加密，直接回车</div><div class="line">RSA keys may be between 1024 and 4096 bits long.</div><div class="line">What keysize do you want? (2048)		// 选择加密长度，默认 (2048)</div><div class="line">Requested keysize is 2048 bits</div><div class="line">Please specify how long the key should be valid.</div><div class="line">         0 = key does not expire</div><div class="line">      &lt;n&gt;  = key expires in n days</div><div class="line">      &lt;n&gt;w = key expires in n weeks</div><div class="line">      &lt;n&gt;m = key expires in n months</div><div class="line">      &lt;n&gt;y = key expires in n years</div><div class="line">Key is valid for? (0)		// 密钥失效时间，默认为 (0) 永不失效</div><div class="line">Key does not expire at all</div><div class="line">Is this correct? (y/N) y		// 确认上述配置正确</div><div class="line"></div><div class="line">You need a user ID to identify your key; the software constructs the user ID</div><div class="line">from the Real Name, Comment and Email Address in this form:</div><div class="line">    "Heinrich Heine (Der Dichter) &lt;heinrichh@duesseldorf.de&gt;"</div><div class="line"></div><div class="line">Real name: Test User		// 输入自己的真实名字</div><div class="line">Email address: test@example.com		// 输入自己的邮箱</div><div class="line">Comment:		// 补充内容</div><div class="line">You selected this USER-ID:</div><div class="line">    "Test User &lt;test@example.com&gt;"</div><div class="line"></div><div class="line">Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? o		// 确认选项，可修改输入的内容，没问题输入 (O) 回车确认</div><div class="line">You need a Passphrase to protect your secret key.		// 输入一个密码来保护私钥不被盗用</div><div class="line"></div><div class="line">We need to generate a lot of random bytes. It is a good idea to perform</div><div class="line">some other action (type on the keyboard, move the mouse, utilize the</div><div class="line">disks) during the prime generation; this gives the random number</div><div class="line">generator a better chance to gain enough entropy.</div><div class="line"></div><div class="line">Not enough random bytes available.  Please do some other work to give</div><div class="line">the OS a chance to collect more entropy! (Need 201 more bytes)</div><div class="line"></div><div class="line">// 等待密钥生成，这时可以做一些其它事情（像是敲打键盘、移动鼠标、读写硬盘之类的），</div><div class="line">// 这会让随机数字发生器有更好的机会获得足够的熵数。</div><div class="line">// 建议另起一个终端，写一个耗性能的 for 循环脚本运行，否则要等很久。</div><div class="line"></div><div class="line">.........+++++</div><div class="line">.....+++++</div><div class="line">We need to generate a lot of random bytes. It is a good idea to perform</div><div class="line">some other action (type on the keyboard, move the mouse, utilize the</div><div class="line">disks) during the prime generation; this gives the random number</div><div class="line">generator a better chance to gain enough entropy.</div><div class="line"></div><div class="line">Not enough random bytes available.  Please do some other work to give</div><div class="line">the OS a chance to collect more entropy! (Need 84 more bytes)</div><div class="line">..+++++</div><div class="line"></div><div class="line">Not enough random bytes available.  Please do some other work to give</div><div class="line">the OS a chance to collect more entropy! (Need 120 more bytes)</div><div class="line">.....+++++</div><div class="line">gpg: /home/zero/.gnupg/trustdb.gpg: trustdb created</div><div class="line">gpg: key 675394C8 marked as ultimately trusted</div><div class="line">public and secret key created and signed.</div><div class="line"></div><div class="line">gpg: checking the trustdb</div><div class="line">gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model</div><div class="line">gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u</div><div class="line">pub   2048R/675394C8 2016-07-16</div><div class="line">      Key fingerprint = 86AB 2D80 CEED 59DC F046  F75C D027 CF07 6753 94C8</div><div class="line">uid                  Test User &lt;test@example.com&gt;</div><div class="line">sub   2048R/D2951F3C 2016-07-16</div></pre></td></tr></table></figure></p>
<p>密钥对已经生成好了，ID 是 <code>675394C8</code></p>
<h3 id="2-2、管理密钥"><a href="#2-2、管理密钥" class="headerlink" title="2.2、管理密钥"></a>2.2、管理密钥</h3><p>列出系统中所有的密钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --list-keys</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/home/zero/.gnupg/pubring.gpg</div><div class="line">-----------------------------</div><div class="line">pub   2048R/675394C8 2016-07-16</div><div class="line">uid                  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   2048R/D2951F3C 2016-07-16</div><div class="line"></div><div class="line">pub   2048R/4D67E763 2016-07-16</div><div class="line">uid                  Test User2 &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   2048R/D2C6D99E 2016-07-16</div></pre></td></tr></table></figure>
<p>第一行显示公钥文件名 (~/.gnupg/pubring.gpg)，第二行显示公钥特征（2048位，Hash字符串和生成时间），<br>第三行显示用户信息，第四行显示私钥特征。拥有多把密钥会在下面继续列出。</p>
<p>列出系统中所有的私钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --list-secret-keys</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/home/zero/.gnupg/secring.gpg</div><div class="line">-----------------------------</div><div class="line">sec   2048R/675394C8 2016-07-16</div><div class="line">uid                  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">ssb   2048R/D2951F3C 2016-07-16</div></pre></td></tr></table></figure>
<p>列出系统中所有的公钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --list-public-keys</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/home/zero/.gnupg/pubring.gpg</div><div class="line">-----------------------------</div><div class="line">pub   2048R/675394C8 2016-07-16</div><div class="line">uid                  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   2048R/D2951F3C 2016-07-16</div><div class="line"></div><div class="line">pub   2048R/4D67E763 2016-07-16</div><div class="line">uid                  Test User2 &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   2048R/D2C6D99E 2016-07-16</div></pre></td></tr></table></figure>
<p>从密钥列表中删除某个公钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --delete-key 675394C8</div></pre></td></tr></table></figure>
<p>从密钥列表中删除某个私钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --delete-secret-keys 675394C8</div></pre></td></tr></table></figure>
<p>从密钥列表中删除某个私钥和公钥的密钥对</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --delete-secret-and-public-keys 675394C8</div></pre></td></tr></table></figure>
<h3 id="2-3、导出密钥"><a href="#2-3、导出密钥" class="headerlink" title="2.3、导出密钥"></a>2.3、导出密钥</h3><p>公钥文件以二进制形式储存在 (~/.gnupg/pubring.gpg)，<code>--armor</code> 参数可以将其转换为 ASCII 码显示。</p>
<p>导出公钥到文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --armor --output public-key.asc --export 675394C8</div></pre></td></tr></table></figure>
<p><code>--export</code> 指定导出哪把公钥，<code>--output</code> 指定输出的文件名 <code>public-key.asc</code></p>
<p>导出私钥到文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --armor --output private-key.asc --export-secret-keys 675394C8</div></pre></td></tr></table></figure>
<p><code>--export-secret-keys</code> 指定导出哪把私钥，<code>--output</code> 指定输出的文件名 <code>private-key.asc</code></p>
<p>导出撤销证书</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --output revoke-key.asc --gen-revoke 675394C8</div></pre></td></tr></table></figure>
<p>撤销证书是以备以后密钥作废时，可以请求外部的公钥服务器撤销你的公钥。</p>
<h3 id="2-4、上传公钥"><a href="#2-4、上传公钥" class="headerlink" title="2.4、上传公钥"></a>2.4、上传公钥</h3><p>你可以把公钥放在自己网站上供其它人获取，或者上传到网络上专门储存用户公钥的服务器。</p>
<p>上传公钥到 <code>subkeys.pgp.net</code> 服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --send-keys 675394C8 --keyserver hkp://subkeys.pgp.net</div></pre></td></tr></table></figure>
<p>生成公钥指纹</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --fingerprint 675394C8</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pub   2048R/675394C8 2016-07-16</div><div class="line">      Key fingerprint = 86AB 2D80 CEED 59DC F046  F75C D027 CF07 6753 94C8</div><div class="line">uid                  Test User &lt;<span class="built_in">test</span>@example.com&gt;</div><div class="line">sub   2048R/D2951F3C 2016-07-16</div></pre></td></tr></table></figure>
<p>由于公钥服务器没有检查机制，任何人都可以用你的名义上传公钥，所以没有办法保证服务器上的公钥的可靠性。<br>通常你可以在网站上公布一个公钥指纹，让其他人核对下载到的公钥是否为真。</p>
<h3 id="2-5、倒入密钥"><a href="#2-5、倒入密钥" class="headerlink" title="2.5、倒入密钥"></a>2.5、倒入密钥</h3><p>倒入密钥文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --import public-key.asc</div></pre></td></tr></table></figure>
<p>从默认公钥服务器 <code>keys.gnupg.net</code> 上倒入公钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --recv-keys 675394C8</div></pre></td></tr></table></figure>
<p>从公钥服务器上倒入密钥并验证公钥指纹</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gpg --keyserver hkp://subkeys.pgp.net --search-keys 675394C8</div><div class="line">gpg --fingerprint 675394C8</div></pre></td></tr></table></figure>
<h2 id="3、加密和解密"><a href="#3、加密和解密" class="headerlink" title="3、加密和解密"></a>3、加密和解密</h2><p>示例文件 <code>msg.txt</code>，内容是 <code>Hello World</code></p>
<h3 id="3-1、对称加密"><a href="#3-1、对称加密" class="headerlink" title="3.1、对称加密"></a>3.1、对称加密</h3><p>对称加密无需使用到密钥，类似与普通的秘密加密。</p>
<p>加密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -c msg.txt</div></pre></td></tr></table></figure>
<p>键入 2 次密码后会生成一个 <code>.gpg</code> 的加密文件。</p>
<p>解密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg msg.txt.gpg</div></pre></td></tr></table></figure>
<p>使用 <code>-o</code> 参数指定解密输出的文件名，<code>-d</code> 指定被解密的文件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -o hello.txt <span class="_">-d</span> msg.txt.gpg</div></pre></td></tr></table></figure>
<h3 id="3-2、公钥加密"><a href="#3-2、公钥加密" class="headerlink" title="3.2、公钥加密"></a>3.2、公钥加密</h3><p>加密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --recipient 675394C8 --output msg-encrypt.txt.gpg --encrypt msg.txt</div></pre></td></tr></table></figure>
<p>简写命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -ea -r test@example.com msg.txt</div></pre></td></tr></table></figure>
<p><code>-e</code> 就是 <code>--encrypt</code> 表示加密数据， <code>-a</code> 就是 <code>--armor</code> 表示创建 ASCII 的输出（不使用这个参数输出的文件是一个二进制文件，以 <code>.gpg</code> 结尾），<code>-r</code> 就是 <code>--recipient</code> 指定加密的用户ID名称，可以是 Hash 值或邮箱。</p>
<p>解密文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --output msg_1.txt --decrypt msg-encrypt.txt.gpg</div></pre></td></tr></table></figure>
<p>简写命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg msg.txt.asc</div></pre></td></tr></table></figure>
<h2 id="4、签名和验证"><a href="#4、签名和验证" class="headerlink" title="4、签名和验证"></a>4、签名和验证</h2><h3 id="4-1、数字签名"><a href="#4-1、数字签名" class="headerlink" title="4.1、数字签名"></a>4.1、数字签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -o msg.txt.sig <span class="_">-s</span> msg.txt</div></pre></td></tr></table></figure>
<p><code>-o</code> 就是 <code>--output</code> 表示指定输出到哪个文件，<code>-s</code> 就是 <code>--sign</code> 表示指定一个要签名的文件</p>
<h3 id="4-2、文本签名"><a href="#4-2、文本签名" class="headerlink" title="4.2、文本签名"></a>4.2、文本签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -o msg.txt.sig --clearsign msg.txt</div></pre></td></tr></table></figure>
<h3 id="4-3、分离式签名"><a href="#4-3、分离式签名" class="headerlink" title="4.3、分离式签名"></a>4.3、分离式签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg -o msg.txt.sig -ab msg.txt</div></pre></td></tr></table></figure>
<p><code>msg.txt.sig</code> 仅包括签名，分离式签名的意思是原文件和签名是分开的，<code>-a</code> 就是 <code>--armor</code> 表示创建 ASCII 的输出，<code>-b</code> 就是 <code>--detach-sign</code> 表示分离式签名。</p>
<h3 id="4-4、签名和加密"><a href="#4-4、签名和加密" class="headerlink" title="4.4、签名和加密"></a>4.4、签名和加密</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --local-user 675394C8 --recipient 4D67E763 --armor --sign --encrypt msg.txt</div></pre></td></tr></table></figure>
<p><code>--local-user</code> 表示发送者ID，也就是自己的私钥ID用于签名，<code>--recipient</code> 表示接收者的公钥ID。</p>
<h3 id="4-5、验证签名"><a href="#4-5、验证签名" class="headerlink" title="4.5、验证签名"></a>4.5、验证签名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gpg --verify msg.txt.sig</div></pre></td></tr></table></figure>
<hr>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://www.gnupg.org/gph/en/manual.html" target="_blank" rel="external">The GNU Privacy Handbook</a></li>
<li><a href="http://wiki.ubuntu.org.cn/GPG/PGP" target="_blank" rel="external">GPG/PGP - Ubuntu中文</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2013/07/gpg.html" target="_blank" rel="external">GPG入门教程</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GnuPG (GNU Privacy Guard，GPG) 是一种加密软件，它是 PGP 加密软件的满足 GPL 协议的替代物。GnuPG 依照由 IETF 制定的 OpenPGP 技术标准设计。GnuPG 是用于加密、数字签章及产生非对称匙对的软件。GPG 兼容 PGP (Pretty Good Privacy) 的功能。&lt;br&gt;
    
    </summary>
    
    
      <category term="GPG" scheme="https://blog.iternull.com/tags/GPG/"/>
    
  </entry>
  
  <entry>
    <title>在 Debian 上安装 Selfoss</title>
    <link href="https://blog.iternull.com/posts/2016/02/13/How-to-Install-Selfoss-of-Debian.html"/>
    <id>https://blog.iternull.com/posts/2016/02/13/How-to-Install-Selfoss-of-Debian.html</id>
    <published>2016-02-13T15:42:49.000Z</published>
    <updated>2016-08-19T09:53:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://selfoss.aditu.de/" target="_blank" rel="external">Selfoss</a> 是一个基于 Web 的 RSS 阅读器开源项目。需要自己搭建服务端，支持Web、<a href="https://play.google.com/store/apps/details?id=fr.ydelouis.selfoss" target="_blank" rel="external">Android</a>、<a href="https://itunes.apple.com/us/app/cataracta/id817392033" target="_blank" rel="external">IOS</a> 客户端<br><a id="more"></a></p>
<h2 id="安装-Web-服务端程序"><a href="#安装-Web-服务端程序" class="headerlink" title="安装 Web 服务端程序"></a>安装 Web 服务端程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install apache2 libapache2-mod-php5 php5 php5-cgi php5-cli php5-fpm php5-gd php5-json php5-mysql php5-sqlite mysql-server mysql-client</div></pre></td></tr></table></figure>
<p>Debian在安装MySQL的会要求设置MySQL的root密码</p>
<h2 id="配置-Apache"><a href="#配置-Apache" class="headerlink" title="配置 Apache"></a>配置 Apache</h2><p>编辑配置文件找到设置网站根目录的选项，把 <code>AllowOverride</code> 选项的 <code>None</code> 改成 <code>All</code> 具体配置如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/apache2/apache2.conf</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;Directory /var/www/&gt;</div><div class="line">        Options Indexes FollowSymLinks</div><div class="line">        <span class="comment">#AllowOverride None</span></div><div class="line">        AllowOverride All</div><div class="line">        Require all granted</div><div class="line">&lt;/Directory&gt;</div></pre></td></tr></table></figure>
<h2 id="启用模块"><a href="#启用模块" class="headerlink" title="启用模块"></a>启用模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a2enmod rewrite</div><div class="line">a2enmod headers</div></pre></td></tr></table></figure>
<h2 id="配置-MySQL"><a href="#配置-MySQL" class="headerlink" title="配置 MySQL"></a>配置 MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service mysql start</div><div class="line">mysql -u root -p</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CREATE DATABASE selfoss;		// 数据库名称为 selfoss</div><div class="line">CREATE USER selfoss IDENTIFIED  BY <span class="string">'password'</span>;		// 用户名为 selfoss 密码为 mypassword</div><div class="line">GRANT ALL PRIVILEGES ON selfoss.* TO <span class="string">'selfoss'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'password'</span>;		// 配置 selfoss 用户允许操作 selfoss 数据库</div></pre></td></tr></table></figure>
<h2 id="安装-Selfoss"><a href="#安装-Selfoss" class="headerlink" title="安装 Selfoss"></a>安装 Selfoss</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /var/www/html</div><div class="line">wget https://github.com/ZMOM1031/selfoss/releases/download/2.14-1/selfoss-2.14-1.zip</div><div class="line">unzip selfoss-2.14.zip</div><div class="line">rm -rf selfoss-2.14.zip</div><div class="line">chown -R www-data:www-data ./</div><div class="line">vim config.ini</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">; see http://selfoss.aditu.de <span class="keyword">for</span> more information about</div><div class="line">; the configuration parameters</div><div class="line">[globals]</div><div class="line">db_type=mysql</div><div class="line">db_database=selfoss</div><div class="line">db_username=selfoss</div><div class="line">db_password=password</div><div class="line">db_port=3306</div><div class="line">username=admin		// 可选</div><div class="line">password=		// 可选 这里填的密码是<span class="built_in">hash</span>值，安装好后可在 http://yourwebsite.com/password 页面中生成</div></pre></td></tr></table></figure>
<h2 id="启动-Web-服务"><a href="#启动-Web-服务" class="headerlink" title="启动 Web 服务"></a>启动 Web 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service apache2 start</div></pre></td></tr></table></figure>
<h2 id="配置-cron-自动更新内容"><a href="#配置-cron-自动更新内容" class="headerlink" title="配置 cron 自动更新内容"></a>配置 cron 自动更新内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crontab <span class="_">-e</span></div><div class="line">0 * * * * /usr/bin/php /var/www/vhosts/reader.iternull.com/cliupdate.php</div></pre></td></tr></table></figure>
<h2 id="RSS-链接"><a href="#RSS-链接" class="headerlink" title="RSS 链接"></a>RSS 链接</h2><p>RSS Feed地址是什么？如何添加？如何订阅？<br>Feed地址有好几种类型，常见的为以下几种。具体可以在首页上找，类似 RSS 的图标。当然有些网站自己把 RSS 功能关了，或者没配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http://www.exmaple.com/atom.xml</div><div class="line">http://www.exmaple.com/rss</div><div class="line">http://www.exmaple.com/feed</div><div class="line">http://www.exmaple.com/feed/</div><div class="line">http://www.exmaple.com/?feed=rss2</div><div class="line">......</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://selfoss.aditu.de/&quot;&gt;Selfoss&lt;/a&gt; 是一个基于 Web 的 RSS 阅读器开源项目。需要自己搭建服务端，支持Web、&lt;a href=&quot;https://play.google.com/store/apps/details?id=fr.ydelouis.selfoss&quot;&gt;Android&lt;/a&gt;、&lt;a href=&quot;https://itunes.apple.com/us/app/cataracta/id817392033&quot;&gt;IOS&lt;/a&gt; 客户端&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.iternull.com/tags/Linux/"/>
    
      <category term="Selfoss" scheme="https://blog.iternull.com/tags/Selfoss/"/>
    
  </entry>
  
  <entry>
    <title>Sphinx 安装与使用</title>
    <link href="https://blog.iternull.com/posts/2016/01/11/Sphinx-Installation-and-use.html"/>
    <id>https://blog.iternull.com/posts/2016/01/11/Sphinx-Installation-and-use.html</id>
    <published>2016-01-11T14:13:53.000Z</published>
    <updated>2016-08-19T12:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.sphinx-doc.org/" target="_blank" rel="external">Sphinx</a> 是一个使用 Python 开发的文档编写生成程序，使用 <a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="external">reStructuredText</a> 语法编写文档，编译输出 HTML 页面文件、PDF 文件或其它格式的文件。<br><a id="more"></a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Sphinx 前请确保以安装 <code>Python</code> 和 <code>pip</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install shpinx</div></pre></td></tr></table></figure></p>
<h2 id="创建一个文档项目"><a href="#创建一个文档项目" class="headerlink" title="创建一个文档项目"></a>创建一个文档项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sphinx-quickstart</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line">root@null:~/Codes/Docs/Selfoss# sphinx-quickstart</div><div class="line">Welcome to the Sphinx 1.3.3 quickstart utility.</div><div class="line"></div><div class="line">Please enter values for the following settings (just press Enter to</div><div class="line">accept a default value, if one is given in brackets).</div><div class="line"></div><div class="line">Enter the root path for documentation.</div><div class="line">&gt; Root path for the documentation [.]:</div><div class="line">// 输入文档根路径</div><div class="line">// 根路径的文件 [.]:</div><div class="line">// 默认不用更改，直接回车</div><div class="line"></div><div class="line">You have two options for placing the build directory for Sphinx output.</div><div class="line">Either, you use a directory &quot;_build&quot; within the root path, or you separate</div><div class="line">&quot;source&quot; and &quot;build&quot; directories within the root path.</div><div class="line">&gt; Separate source and build directories (y/n) [n]: y</div><div class="line">// 独立的源和生成目录 (y/n) [n]:</div><div class="line">// 建议文档源代码与生成目录区别开，输入 y 回车</div><div class="line"></div><div class="line">Inside the root directory, two more directories will be created; &quot;_templates&quot;</div><div class="line">for custom HTML templates and &quot;_static&quot; for custom stylesheets and other static</div><div class="line">files. You can enter another prefix (such as &quot;.&quot;) to replace the underscore.</div><div class="line">&gt; Name prefix for templates and static dir [_]:</div><div class="line">// 模板和静态文件夹的前缀 [_]:</div><div class="line">// 使用默认的&quot;_&quot;，直接回车</div><div class="line"></div><div class="line">The project name will occur in several places in the built documentation.</div><div class="line">&gt; Project name: Selfoss</div><div class="line">// 项目名称</div><div class="line">&gt; Author name(s): ZMOM1031</div><div class="line">// 作者名称</div><div class="line"></div><div class="line">Sphinx has the notion of a &quot;version&quot; and a &quot;release&quot; for the</div><div class="line">software. Each version can have multiple releases. For example, for</div><div class="line">Python the version is something like 2.5 or 3.0, while the release is</div><div class="line">something like 2.5.1 or 3.0a1.  If you don&apos;t need this dual structure,</div><div class="line">just set both to the same value.</div><div class="line">&gt; Project version: 1.0.0</div><div class="line">// 项目版本号</div><div class="line">&gt; Project release [1.0.0]:</div><div class="line">// 项目发布版本号</div><div class="line"></div><div class="line">If the documents are to be written in a language other than English,</div><div class="line">you can select a language here by its language code. Sphinx will then</div><div class="line">translate text that it generates into that language.</div><div class="line"></div><div class="line">For a list of supported codes, see</div><div class="line">http://sphinx-doc.org/config.html#confval-language.</div><div class="line">&gt; Project language [en]: zh_CN</div><div class="line">// 项目使用的语言</div><div class="line"></div><div class="line">The file name suffix for source files. Commonly, this is either &quot;.txt&quot;</div><div class="line">or &quot;.rst&quot;.  Only files with this suffix are considered documents.</div><div class="line">&gt; Source file suffix [.rst]:</div><div class="line">// 文档源代码的后缀</div><div class="line"></div><div class="line">One document is special in that it is considered the top node of the</div><div class="line">&quot;contents tree&quot;, that is, it is the root of the hierarchical structure</div><div class="line">of the documents. Normally, this is &quot;index&quot;, but if your &quot;index&quot;</div><div class="line">document is a custom template, you can also set this to another filename.</div><div class="line">&gt; Name of your master document (without suffix) [index]:</div><div class="line"></div><div class="line">Sphinx can also add configuration for epub output:</div><div class="line">&gt; Do you want to use the epub builder (y/n) [n]:</div><div class="line">// 是否使用 epub 电子书生成</div><div class="line"></div><div class="line">Please indicate if you want to use one of the following Sphinx extensions:</div><div class="line">&gt; autodoc: automatically insert docstrings from modules (y/n) [n]:</div><div class="line">&gt; doctest: automatically test code snippets in doctest blocks (y/n) [n]:</div><div class="line">&gt; intersphinx: link between Sphinx documentation of different projects (y/n) [n]:</div><div class="line">&gt; todo: write &quot;todo&quot; entries that can be shown or hidden on build (y/n) [n]:</div><div class="line">&gt; coverage: checks for documentation coverage (y/n) [n]:</div><div class="line">&gt; pngmath: include math, rendered as PNG images (y/n) [n]:</div><div class="line">&gt; mathjax: include math, rendered in the browser by MathJax (y/n) [n]:</div><div class="line">&gt; ifconfig: conditional inclusion of content based on config values (y/n) [n]:</div><div class="line">&gt; viewcode: include links to the source code of documented Python objects (y/n) [n]:</div><div class="line"></div><div class="line">A Makefile and a Windows command file can be generated for you so that you</div><div class="line">only have to run e.g. `make html&apos; instead of invoking sphinx-build</div><div class="line">directly.</div><div class="line">&gt; Create Makefile? (y/n) [y]:</div><div class="line">&gt; Create Windows command file? (y/n) [y]:</div><div class="line"></div><div class="line">Creating file ./source/conf.py.</div><div class="line">Creating file ./source/index.rst.</div><div class="line">Creating file ./Makefile.</div><div class="line">Creating file ./make.bat.</div><div class="line"></div><div class="line">Finished: An initial directory structure has been created.</div><div class="line"></div><div class="line">You should now populate your master file ./source/index.rst and create other documentation</div><div class="line">source files. Use the Makefile to build the docs, like so:</div><div class="line">   make builder</div><div class="line">where &quot;builder&quot; is one of the supported builders, e.g. html, latex or linkcheck.</div></pre></td></tr></table></figure>
<p>初始化一个项目后会在当前目录创建以下文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── build				// 编译输出文件夹</div><div class="line">├── make.bat			// Windows 使用的 make 脚本</div><div class="line">├── Makefile			// 定义编译信息的</div><div class="line">└── source				// 文档源代码存放文件夹</div><div class="line">    ├── conf.py			// 项目配置文件</div><div class="line">    ├── index.rst		// 文档首页源代码</div><div class="line">    ├── _static			// 静态文件夹？</div><div class="line">    └── _templates		// 模板文件夹</div></pre></td></tr></table></figure>
<h2 id="编写文档"><a href="#编写文档" class="headerlink" title="编写文档"></a>编写文档</h2><p>编写文档使用 <code>reStructuredText</code> 语法，并保存到 <code>source</code> 目录里，文件后缀名使用 <code>.rst</code></p>
<h2 id="编译文档"><a href="#编译文档" class="headerlink" title="编译文档"></a>编译文档</h2><p>编译生成 HTML 网页文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make html</div></pre></td></tr></table></figure></p>
<p>除了生成 HTML 文件外，还可以使用 <code>make</code> 生成其它文件。</p>
<h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>这里的主题指的是生成的 HTML 页面样式。官方提供了好几种<a href="http://www.sphinx-doc.org/en/stable/theming.html" target="_blank" rel="external">样式</a>，这里使用的是 <a href="https://readthedocs.org/" target="_blank" rel="external">Read The Docs</a> 的样式</p>
<p>安装样式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install sphinx_rtd_theme</div></pre></td></tr></table></figure></p>
<p>编辑配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim <span class="built_in">source</span>/conf.py</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">import sphinx_rtd_theme</div><div class="line"></div><div class="line">html_theme = &quot;sphinx_rtd_theme&quot;</div><div class="line"></div><div class="line">html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]</div></pre></td></tr></table></figure>
<p>其他样式配置稍有差异，请按照样式官方的配置方法配置</p>
<hr>
<ul>
<li>Sphinx 中文文档：<a href="https://sphinx-doc-zh.readthedocs.org/" target="_blank" rel="external">https://sphinx-doc-zh.readthedocs.org/</a></li>
<li>Sphinx 中文文档：<a href="https://zh-sphinx-doc.readthedocs.org/" target="_blank" rel="external">https://zh-sphinx-doc.readthedocs.org/</a></li>
<li>reStructuredText 中文文档：<a href="http://sphinx-doc-zh.readthedocs.org/" target="_blank" rel="external">http://sphinx-doc-zh.readthedocs.org/</a></li>
<li>reStructuredText 在线编辑器：<a href="http://rst.ninjs.org/" target="_blank" rel="external">http://rst.ninjs.org/</a></li>
<li>Read The Docs 文档存放：<a href="https://readthedocs.org/" target="_blank" rel="external">https://readthedocs.org/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; 是一个使用 Python 开发的文档编写生成程序，使用 &lt;a href=&quot;http://docutils.sourceforge.net/rst.html&quot;&gt;reStructuredText&lt;/a&gt; 语法编写文档，编译输出 HTML 页面文件、PDF 文件或其它格式的文件。&lt;br&gt;
    
    </summary>
    
    
      <category term="Sphinx" scheme="https://blog.iternull.com/tags/Sphinx/"/>
    
  </entry>
  
  <entry>
    <title>如何访问暗网</title>
    <link href="https://blog.iternull.com/posts/2016/01/06/How-to-Access-the-Dark-Web.html"/>
    <id>https://blog.iternull.com/posts/2016/01/06/How-to-Access-the-Dark-Web.html</id>
    <published>2016-01-06T14:52:27.000Z</published>
    <updated>2017-02-11T05:59:10.070Z</updated>
    
    <content type="html"><![CDATA[<p>这里介绍到暗网指的是基于 Tor 的匿名网站。<br><a id="more"></a></p>
<h2 id="安装-Tor-浏览器"><a href="#安装-Tor-浏览器" class="headerlink" title="安装 Tor 浏览器"></a>安装 Tor 浏览器</h2><p>访问 Tor 官网 <a href="https://www.torproject.org/" target="_blank" rel="external">www.torproject.org</a> 下载对应系统和语言的 Tor 浏览器版本。<br>安装时一直点下一步就行。</p>
<h2 id="配置-Tor-浏览器"><a href="#配置-Tor-浏览器" class="headerlink" title="配置 Tor 浏览器"></a>配置 Tor 浏览器</h2><p>第一次打开 Tor Browser，点击配置。</p>
<h3 id="网络服务提供商-ISP-是否对-Tor-网络连接进行封锁？"><a href="#网络服务提供商-ISP-是否对-Tor-网络连接进行封锁？" class="headerlink" title="网络服务提供商 (ISP) 是否对 Tor 网络连接进行封锁？"></a>网络服务提供商 (ISP) 是否对 Tor 网络连接进行封锁？</h3><p>墙内选择”是”，具体依据自己的网络环境选择。</p>
<p><img src="//files.iternull.com/images/2016-01-06_01-0001.png" alt=""></p>
<h3 id="选择使用集成网桥或输入自定义网桥"><a href="#选择使用集成网桥或输入自定义网桥" class="headerlink" title="选择使用集成网桥或输入自定义网桥"></a>选择使用集成网桥或输入自定义网桥</h3><p>默认选择即可</p>
<p><img src="//files.iternull.com/images/2016-01-06_01-0002.png" alt=""></p>
<h3 id="是否需要本地代理访问互联网"><a href="#是否需要本地代理访问互联网" class="headerlink" title="是否需要本地代理访问互联网"></a>是否需要本地代理访问互联网</h3><p>选择”是” (关键点)</p>
<p><img src="//files.iternull.com/images/2016-01-06_01-0003.png" alt=""></p>
<h3 id="本地代理配置"><a href="#本地代理配置" class="headerlink" title="本地代理配置"></a>本地代理配置</h3><p>代理类型、地址、端口、、、依据自己使用的代理服务而定<br>这里以 Shadowsocks 为例</p>
<p><img src="//files.iternull.com/images/2016-01-06_01-0004.png" alt=""></p>
<p>最后点击链接，等待片刻，运气好的话就链接上 Tor 网络了。</p>
<h2 id="访问网站"><a href="#访问网站" class="headerlink" title="访问网站"></a>访问网站</h2><p>基于 Tor 的匿名网站使用的是 <code>.onion</code> 的域名，在地址栏输入网址即可访问，除了可以访问 Tor 网站外，正常<br>网站也是可以访问的，当然也是基于 Tor 匿名访问的。</p>
<p><img src="//files.iternull.com/images/2016-01-06_01-0005.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里介绍到暗网指的是基于 Tor 的匿名网站。&lt;br&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://blog.iternull.com/tags/Web/"/>
    
      <category term="Tor" scheme="https://blog.iternull.com/tags/Tor/"/>
    
      <category term="Tor Browser" scheme="https://blog.iternull.com/tags/Tor-Browser/"/>
    
  </entry>
  
  <entry>
    <title>如何创建一个 Tor .onion 网站</title>
    <link href="https://blog.iternull.com/posts/2016/01/05/How-to-Create-a-Tor-onion-Site.html"/>
    <id>https://blog.iternull.com/posts/2016/01/05/How-to-Create-a-Tor-onion-Site.html</id>
    <published>2016-01-05T14:02:38.000Z</published>
    <updated>2017-02-11T05:59:18.911Z</updated>
    
    <content type="html"><![CDATA[<p>Tor 隐藏服务使用 .onion 域名。这里将向你演示如何创建一个安全配置以阻止信息泄露、隐藏服务的 .onion 网站。<br><a id="more"></a></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>不要在这台服务器上运行或做其它事情。</li>
<li>在新服务器或 VPS 上进行全新安装。</li>
<li>不要保留或运行来自 VPS 提供商那儿的任何服务。</li>
<li>用 Paypal 支付你的 VPS 服务，不过最好使用 Bitcoin。</li>
<li>不要向 VPS 提供关于你的任何身份信息。</li>
<li>不要在这台服务器上运行 Tor 中继，因为 Tor 中继在真实世界的公开 IP 是公开的。</li>
<li>不要从这台服务器发送电子邮件。</li>
<li>不要运行讨厌的或卑鄙的 Web 软件。如果你的 Web 软件有管理员登陆或管理员账号，把密码改成复杂的 26 个字符组成的密码。很多 Tor 网站被攻破只是某人猜到了管理员登陆密码。</li>
<li>避免使用任何 JavaScript 之类脚本的 Web 软件。</li>
<li>确保你的 Web 应用不会泄露任何错误信息或身份信息，比如在错误信息中的真实公开 IP。</li>
<li>审查 Web 前端代码，确保它不会从 jquery.com、Google Fonts 或任何外部服务拉取资源。</li>
<li>及时做好 VPS 的安全更新。</li>
</ul>
<p><strong>本文使用 Debian Wheezy , Nginx , Tor 提供 Web 服务。Nginx 将被配置为只监听 Tor，只可通过 Tor 访问。</strong></p>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>安装 Nginx</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install nginx</div></pre></td></tr></table></figure>
<p>关闭 Nginx 版本信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">http &#123;</div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">        server_tokens off;</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<p>关闭 Nginx 日志</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">http &#123;</div><div class="line"></div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">        ##</div><div class="line">        # Logging Settings</div><div class="line">        ##</div><div class="line"></div><div class="line">        #access_log /var/log/nginx/access.log;</div><div class="line">        #error_log /var/log/nginx/error.log;</div><div class="line"></div><div class="line">	error_log /dev/null crit;</div></pre></td></tr></table></figure>
<h2 id="配置-Nginx-监听-localhost-8080-端口"><a href="#配置-Nginx-监听-localhost-8080-端口" class="headerlink" title="配置 Nginx 监听 localhost 8080 端口"></a>配置 Nginx 监听 localhost 8080 端口</h2><p>Nginx网站默认根目录位置在 <code>/usr/share/nginx/www</code> 可修改配置文件更改目录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/nginx/sites-available/default</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 127.0.0.1:8080 default_server;</div><div class="line">        server_name localhost;</div><div class="line"></div><div class="line">        root /usr/share/nginx/www;</div><div class="line">        index index.html index.htm;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">                allow 127.0.0.1;</div><div class="line">                deny all;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="重启-Nginx"><a href="#重启-Nginx" class="headerlink" title="重启 Nginx"></a>重启 Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure>
<p>关闭并移除 <code>rsyslog</code> 以关闭系统日志</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service rsyslog stop</div><div class="line">apt-get remove --purge rsyslog</div></pre></td></tr></table></figure>
<p>关闭并移除所有可被用来发送邮件的程序 (MTA)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">service exim stop</div><div class="line">service postfix stop</div><div class="line">service sendmail stop</div><div class="line">apt-get remove --purge exim</div><div class="line">apt-get remove --purge postfix</div><div class="line">apt-get remove --purge sendmail</div></pre></td></tr></table></figure>
<p>移除 <code>wget</code> 防止受到恶意脚本攻击时不会受到损害</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get remove wget</div></pre></td></tr></table></figure>
<p>禁用 SSH 连接时的 Debian 版本信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DebianBanner no</div></pre></td></tr></table></figure>
<h2 id="安装-Tor"><a href="#安装-Tor" class="headerlink" title="安装 Tor"></a>安装 Tor</h2><p>按照 torproject.org 文档添加 <code>Debian repo</code> 在<a href="https://www.torproject.org/docs/debian.html.en" target="_blank" rel="external">这里</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install tor</div></pre></td></tr></table></figure>
<h2 id="配置Tor服务"><a href="#配置Tor服务" class="headerlink" title="配置Tor服务"></a>配置Tor服务</h2><p>确保下面几行配置正确</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/tor/torrc</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">HiddenServiceDir /var/lib/tor/hidden_service/</div><div class="line">HiddenServicePort 80 127.0.0.1:8080</div></pre></td></tr></table></figure>
<p>启动(或重启) Tor 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service tor start</div></pre></td></tr></table></figure>
<p>当 Tor 启动时，它会在你的 <code>HiddenServiceDir</code> 文件夹创建了私钥，和一个唯一的 <code>.onion</code> 域名。</p>
<p>下面是这些文件的样子。当然，你应该永远不要暴露或显示你的私钥！保密。下面的密钥是供演示和学习之用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">root@debian:~# cd /var/lib/tor/hidden_service/</div><div class="line">root@debian:/var/lib/tor/hidden_service# ls</div><div class="line">hostname  private_key</div><div class="line">root@debian:/var/lib/tor/hidden_service# cat private_key </div><div class="line">-----BEGIN RSA PRIVATE KEY-----</div><div class="line">MIICXAIBAAKBgQC9ymfMgQk12AFT4PXWV+XfmZ1tVDaGajya/jIuwnwtjFdMWe7m</div><div class="line">VDWMjs8Z02GGJhH6tIIpoDUrWLi+YchNHlQBi2AnBFzAoSlfRcvobeBAaWuQn+aH</div><div class="line">Uzr+xVXOADSIcfgtT5Yd13RKmUEKFV8AO9u652zYP1ss0l+S2mY/J/t/3wIDAQAB</div><div class="line">AoGAMjQwcPBRN2UENOP1I9XsgNFpy1nTcor3rShArg3UO1g8X34Kq/Lql1vPfM1l</div><div class="line">ps67Qs4tAEXYyraVaAcFrSCwp6MyeKYwxZtT7ki7q3rbMycvbYquxquh0uGy4aed</div><div class="line">K8XWjPrUv3yzQSYslOehVWMTH7xTzaOvp5uhpAlHFRqN5MECQQDmpFkXmtfEGwqT</div><div class="line">bRbKegRs9siNY6McWBCGrYc/BrpXEiK0j2QcrjC/dMJ4P9O4A94aG4NSI/005fII</div><div class="line">vxrOmD9VAkEA0qhBVWeZD7amfvPYChQo0B4ACZZdJlcUd/x1JSOYbVKvRCvJLxjT</div><div class="line">5LMwg93jj2m386jXWx8n40Zcus6BTDr6YwJBAKH8E0ZszdVBWLAqEbOq9qjAuiHz</div><div class="line">NH+XqiOshCxTwVOdvRorCxjJjhspGdvyl/PJY5facuShuhgI13AlJ+KpMvECQHDJ</div><div class="line">l1lzw1bPc2uLgUM8MfHj7h8z+6G4hAQODmaZHVaDK8XzL59gyqqrajFgTyOM9emm</div><div class="line">n89w6flcxe9a+41mEoMCQBaM91yvrfp7N9BeDMCHlSDfAzX7sDqQn44ftHvZZI9V</div><div class="line">4IouuRuLlqN0iaw4V73v3MUeqXoasmdeZ89bVGhVrC8=</div><div class="line">-----END RSA PRIVATE KEY-----</div><div class="line">root@debian:/var/lib/tor/hidden_service# cat hostname </div><div class="line">juyy62wplbkk7gzy.onion</div><div class="line">root@debian:/var/lib/tor/hidden_service#</div></pre></td></tr></table></figure>
<h2 id="配置并使用防火墙"><a href="#配置并使用防火墙" class="headerlink" title="配置并使用防火墙"></a>配置并使用防火墙</h2><p>启用防火墙，有选择地允许 22 端口。如果稍微偏执些，根本不要允许 22 端口，仅仅从提供商的控制面板控制台来管理。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get install ufw</div><div class="line">ufw allow ssh</div><div class="line">ufw <span class="built_in">enable</span></div></pre></td></tr></table></figure>
<p>运气好的话，你现在应该可以访问你 <code>.onion</code> 的网址了，默认是 <code>Nginx</code> 页面。</p>
<p><img src="//files.iternull.com/images/2016-01-05_01-0001.png" alt=""></p>
<hr>
<ul>
<li>注：长城防火墙内的主机用此方法搭建的服务可能无法连接到 Tor 网络。</li>
<li>原文：<a href="https://scottlinux.com/2013/10/11/how-to-create-a-tor-onion-site/" target="_blank" rel="external">https://scottlinux.com/2013/10/11/how-to-create-a-tor-onion-site/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tor 隐藏服务使用 .onion 域名。这里将向你演示如何创建一个安全配置以阻止信息泄露、隐藏服务的 .onion 网站。&lt;br&gt;
    
    </summary>
    
    
      <category term="Web" scheme="https://blog.iternull.com/tags/Web/"/>
    
      <category term="Tor" scheme="https://blog.iternull.com/tags/Tor/"/>
    
      <category term="onion" scheme="https://blog.iternull.com/tags/onion/"/>
    
  </entry>
  
  <entry>
    <title>WinSetupFromUSB 使用介绍</title>
    <link href="https://blog.iternull.com/posts/2015/12/21/WinSetupFromUSB-Introduction.html"/>
    <id>https://blog.iternull.com/posts/2015/12/21/WinSetupFromUSB-Introduction.html</id>
    <published>2015-12-21T06:08:25.000Z</published>
    <updated>2017-02-11T06:01:40.147Z</updated>
    
    <content type="html"><![CDATA[<p>WinSetupFromUSB 是一款制作多系统镜像启动U盘的工具，使用Grub4Dos做引导。<br>本人以前试过使用Grub制作多系统安装盘，效果不好，加载慢、花屏、崩溃，只能引导小的PE系统镜像。<br><a id="more"></a><br><img src="//files.iternull.com/images/2015-12-21_01-0001.png" alt=""></p>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>去 <a href="http://www.winsetupfromusb.com/" target="_blank" rel="external">WinSetupFromUSB</a> 官网下载 <a href="http://downloads.winsetupfromusb.com/WinSetupFromUSB-1-6.exe" target="_blank" rel="external">WinSetupFromUSB 1.6</a><br>下载时可能没法下载，这是网站的问题，开发者没加上网页的某个功能，需要手动使用浏览器调试工具提取下载链接。<br>下载下来的是一个自解压的压缩包，运行它，解压到当前目录，打开文件夹，运行你系统位数对应的版本。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>第一次使用建议先备份U盘原有的文件后再格式化。WinSetupFromUSB 会自动检测到U盘。<br>第一次创建启动盘记得勾选上 <code>Auto format it with FBInst</code> 有一堆选项，默认不用改。</p>
<p><img src="//files.iternull.com/images/2015-12-21_01-0002.png" alt=""></p>
<p>在下面的 <code>Add to USB disk</code> 的选项里选择对应系统镜像的选项，添加系统镜像，一个选项框一次只能添加一个镜像。</p>
<p><img src="//files.iternull.com/images/2015-12-21_01-0003.png" alt=""></p>
<p>最下面一排选项：<br>(Advanced options) 高级设置(不知道自己在干什么的不要乱点)<br>(Test in QEMU) 使用QEMU虚拟机测试<br>(Show Log) 查看软件运行日志</p>
<p>最后点击 <code>GO</code> 开始制作<br>完成后弹出 <code>job done</code> 的窗口</p>
<p>添加系统镜像，制作过一次启动U盘后已经把Grub4Dos写入U盘了，下次再添加就行不要再勾选 <code>Auto format it with FBInst</code> 直接在对应的选项框里添加镜像文件，点击 <code>GO</code> 写入U盘</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>FAT32 文件系统默认最大单文件大小是 <code>4GB</code> 遇到大于4GB的系统镜像不用担心，WinSetupFromUSB 默认会对文件进行分卷。</p>
<p>在创建 Linux 系统镜像的时候可以在高级选项里，设置创建一个持久性的文件，默认 <code>300MB</code>，其实就是创建一个指定大小的文件 <code>ext2</code> 格式，在加载这个镜像的时候自动挂载，你可以在里面存文件，从起不会丢失。如果使用的是FAT32格式的制作的启动盘可以不用考虑使用这个</p>
<p><img src="//files.iternull.com/images/2015-12-21_01-0004.png" alt=""></p>
<hr>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul>
<li>教程：<a href="http://www.winsetupfromusb.com/tutorials/" target="_blank" rel="external">http://www.winsetupfromusb.com/tutorials/</a></li>
<li>常问问题：<a href="http://www.winsetupfromusb.com/faq/" target="_blank" rel="external">http://www.winsetupfromusb.com/faq/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WinSetupFromUSB 是一款制作多系统镜像启动U盘的工具，使用Grub4Dos做引导。&lt;br&gt;本人以前试过使用Grub制作多系统安装盘，效果不好，加载慢、花屏、崩溃，只能引导小的PE系统镜像。&lt;br&gt;
    
    </summary>
    
    
      <category term="WinSetupFromUSB" scheme="https://blog.iternull.com/tags/WinSetupFromUSB/"/>
    
  </entry>
  
  <entry>
    <title>SecUSB 安全充电的工作原理</title>
    <link href="https://blog.iternull.com/posts/2015/09/28/SecUSB-Working-Principle.html"/>
    <id>https://blog.iternull.com/posts/2015/09/28/SecUSB-Working-Principle.html</id>
    <published>2015-09-28T00:38:29.000Z</published>
    <updated>2017-02-11T06:00:43.055Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//files.iternull.com/images/2015-09-28_01-0001.png" alt=""><br><a id="more"></a><br>要了解它的工作原理，先要了解USB每根针脚的含义。</p>
<h2 id="USB引脚"><a href="#USB引脚" class="headerlink" title="USB引脚"></a>USB引脚</h2><table>
<thead>
<tr>
<th>Pin</th>
<th>名称</th>
<th>电缆颜色</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>VCC</td>
<td>Red</td>
<td>+5 VDC</td>
</tr>
<tr>
<td>2</td>
<td>D-</td>
<td>White</td>
<td>Data -</td>
</tr>
<tr>
<td>3</td>
<td>D+</td>
<td>Green</td>
<td>Data +</td>
</tr>
<tr>
<td>4</td>
<td>GND</td>
<td>Black</td>
<td>Ground</td>
</tr>
</tbody>
</table>
<h2 id="USB引脚信号"><a href="#USB引脚信号" class="headerlink" title="USB引脚信号"></a>USB引脚信号</h2><p>USB是一种串行总线。它使用4屏蔽线：两个用于电源(+5V &amp; GND)，两个用于差分数据信号（在引脚标记为D+和D-）。NRZI（不归零反转），用于与一个同步字段发送数据来同步主机和接收机时钟的编码方案。在USB数据线<code>Data+</code>和<code>Data-</code>信号通过双绞线进行发送。没有终止需要。半双工差分信号有助于消除在较长线路的电磁噪声的影响。</p>
<h2 id="安全充电原理"><a href="#安全充电原理" class="headerlink" title="安全充电原理"></a>安全充电原理</h2><p>可以看出普通USB有<code>4</code>根引脚，<code>2</code>根是用做电源线的，另<code>2</code>根是用作数据传输的，那么只要把数据传输的线路断开，就从物理上隔离了数据，恶意程序也就无法从电脑上通过USB传输到你手机上了。<br><img src="//files.iternull.com/images/2015-09-28_01-0002.jpg" alt=""></p>
<hr>
<!--
虽然知道原理，但并没什么鸟用，我手上根本就没有，说年初京东上有卖，一直到现在都没看见哪有，又不好意思死皮赖脸的去找人家要(笑)。
当然自己也可以做一个，拿一个USB公头和母头元件焊在一起，外面用塑料壳包上，当然外观肯定没SecUSB好看了。
第一次知道SecUSB的时候，还是360研发出来的，用作安全充电的防止黑客通过USB侵入手机的，还以为是什么高大上的黑科技(笑)。
我这么把原理写出来，要是被黑商发现了，拿去批量生产，会不会被360打(笑)。
-->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;//files.iternull.com/images/2015-09-28_01-0001.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="SecUSB" scheme="https://blog.iternull.com/tags/SecUSB/"/>
    
      <category term="USB" scheme="https://blog.iternull.com/tags/USB/"/>
    
  </entry>
  
  <entry>
    <title>树莓派上使用RC522模块读取ID卡(Node.js)</title>
    <link href="https://blog.iternull.com/posts/2015/09/12/Raspberry-Pi-RFID-RC522-Nodejs.html"/>
    <id>https://blog.iternull.com/posts/2015/09/12/Raspberry-Pi-RFID-RC522-Nodejs.html</id>
    <published>2015-09-12T14:27:18.000Z</published>
    <updated>2017-02-11T06:00:24.937Z</updated>
    
    <content type="html"><![CDATA[<p>原本是想研究怎么用RFID开发板克隆一张RFID的，但是没折腾出来。<br>如何读取数据倒是折腾出来了，这里用到了<code>Raspberry Pi</code> <code>RFID-RC522</code> <code>杜邦线</code><br><a id="more"></a></p>
<h2 id="线路连接"><a href="#线路连接" class="headerlink" title="线路连接"></a>线路连接</h2><table>
<thead>
<tr>
<th>(RC522)</th>
<th>(GPIO RPi)</th>
</tr>
</thead>
<tbody>
<tr>
<td>SDA</td>
<td>24 (GPIO08)</td>
</tr>
<tr>
<td>SCK</td>
<td>23 (GPIO11)</td>
</tr>
<tr>
<td>MOSI</td>
<td>19 (GPIO10)</td>
</tr>
<tr>
<td>MISO</td>
<td>21 (GPIO09)</td>
</tr>
<tr>
<td>IRQ</td>
<td></td>
</tr>
<tr>
<td>GND</td>
<td>25 (Ground)</td>
</tr>
<tr>
<td>SRT</td>
<td>22 (GPIO25)</td>
</tr>
<tr>
<td>3.3V</td>
<td>1  (3V3)</td>
</tr>
</tbody>
</table>
<p><strong> Raspberry-Pi Model A/B </strong></p>
<p><img src="//files.iternull.com/images/2015-09-12_01-0001.png" alt=""></p>
<p><strong> Raspberry-Pi Model B+/A+/2 </strong></p>
<p><img src="//files.iternull.com/images/2015-09-12_01-0002.png" alt=""></p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装<code>Node.js</code></h2><p>使用第三方开发者编译打包的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://node-arm.herokuapp.com/node_archive_armhf.deb</div><div class="line">dpkg -i node_archive_armhf.deb</div></pre></td></tr></table></figure>
<p>另外你也可以到<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>官网去下载源代码自己编译或者下载编译好的rpi版本，个人觉rpi得就<code>0.10.26</code>版本好用点，其他各种报错</p>
<h2 id="安装Node-js类的依赖"><a href="#安装Node-js类的依赖" class="headerlink" title="安装Node.js类的依赖"></a>安装<code>Node.js类的依赖</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install express</div><div class="line">npm install -g node-gyp</div><div class="line">npm install socket.io</div></pre></td></tr></table></figure>
<h2 id="安装BCM-2835"><a href="#安装BCM-2835" class="headerlink" title="安装BCM 2835"></a>安装<code>BCM 2835</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget http://www.airspayce.com/mikem/bcm2835/bcm2835-1.45.tar.gz</div><div class="line">tar xvf bcm2835-1.35.tar.gz</div><div class="line">cd bcm2835-1.35/</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h2 id="安装RC522-RFID"><a href="#安装RC522-RFID" class="headerlink" title="安装RC522-RFID"></a>安装<code>RC522-RFID</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save rc522-rfid</div></pre></td></tr></table></figure>
<h2 id="启动RFID程序"><a href="#启动RFID程序" class="headerlink" title="启动RFID程序"></a>启动RFID程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/luigifreitas/Raspberry-Pi-RFID.git</div><div class="line">cd Raspberry-Pi-RFID</div><div class="line">node rfid.js</div></pre></td></tr></table></figure>
<h2 id="使用RFID"><a href="#使用RFID" class="headerlink" title="使用RFID"></a>使用<code>RFID</code></h2><p>程序启动后终端会卡在那，把ID卡放到读卡器上，终端上就会显示出卡号<br>在游览器上也可以查看，输入Raspberry-Pi的<code>IPv4</code>地址，当<code>RC522</code>在读取RFID卡片时就能在Web页面中查看到了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://&lt;You Raspberry-Pi IP addr&gt;:8000</div></pre></td></tr></table></figure>
<p><img src="//files.iternull.com/images/2015-09-12_01-0003.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原本是想研究怎么用RFID开发板克隆一张RFID的，但是没折腾出来。&lt;br&gt;如何读取数据倒是折腾出来了，这里用到了&lt;code&gt;Raspberry Pi&lt;/code&gt; &lt;code&gt;RFID-RC522&lt;/code&gt; &lt;code&gt;杜邦线&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="RFID" scheme="https://blog.iternull.com/tags/RFID/"/>
    
      <category term="Raspberry Pi" scheme="https://blog.iternull.com/tags/Raspberry-Pi/"/>
    
      <category term="RC522" scheme="https://blog.iternull.com/tags/RC522/"/>
    
  </entry>
  
  <entry>
    <title>DOS病毒样本</title>
    <link href="https://blog.iternull.com/posts/2015/09/09/DOS-Virus-Samples.html"/>
    <id>https://blog.iternull.com/posts/2015/09/09/DOS-Virus-Samples.html</id>
    <published>2015-09-09T05:00:51.000Z</published>
    <updated>2017-02-11T05:57:08.810Z</updated>
    
    <content type="html"><![CDATA[<p>这是我在找一个名为<code>Crash</code>(崩溃)的DOS系统病毒时发现的。<code>Crash</code>病毒是在1992年由一个俄罗斯人编写的。<br><a id="more"></a></p>
<h3 id="Virus-DOS-Crash"><a href="#Virus-DOS-Crash" class="headerlink" title="Virus.DOS.Crash"></a>Virus.DOS.Crash</h3><p><img src="//files.iternull.com/images/2015-09-09_01-0001.jpg" alt=""></p>
<h3 id="Virus-DOS-Kuku"><a href="#Virus-DOS-Kuku" class="headerlink" title="Virus.DOS.Kuku"></a>Virus.DOS.Kuku</h3><p><img src="//files.iternull.com/images/2015-09-09_01-0002.gif" alt=""></p>
<h3 id="Virus-DOS-Phantom1"><a href="#Virus-DOS-Phantom1" class="headerlink" title="Virus.DOS.Phantom1"></a>Virus.DOS.Phantom1</h3><p><img src="//files.iternull.com/images/2015-09-09_01-0003.gif" alt=""></p>
<h3 id="Virus-DOS-Walker"><a href="#Virus-DOS-Walker" class="headerlink" title="Virus.DOS.Walker"></a>Virus.DOS.Walker</h3><p><img src="//files.iternull.com/images/2015-09-09_01-0004.gif" alt=""></p>
<h3 id="我查看了几个病毒的代码看到了这些"><a href="#我查看了几个病毒的代码看到了这些" class="headerlink" title="我查看了几个病毒的代码看到了这些"></a>我查看了几个病毒的代码看到了这些</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.Darkest Avenger</div><div class="line">..M.......This i</div><div class="line">s not dedicated </div><div class="line">to Sara Gordon.I</div><div class="line">t is dedicated t</div><div class="line">o her GROOVE!..$</div></pre></td></tr></table></figure>
<ul>
<li>大概意思：是最黑暗复仇者M 这并不是专用于萨拉·戈登。它是专门为她GROOVE！<br><img src="//files.iternull.com/images/2015-09-09_01-0005.png" alt=""></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">..z.WALKER V1.00</div><div class="line"> - This absolute</div><div class="line">ly harmless and </div><div class="line">selfdestructive </div><div class="line">program is writt</div><div class="line">en by UJHPTTLZ i</div><div class="line">n the city of Is</div><div class="line">tanbul, 1992....</div></pre></td></tr></table></figure>
<ul>
<li>意思是：WALKER V1.00 - 这绝对是无害的，自我毁灭程序是住在伊斯坦布尔城市的UJHPTTLZ在1992年编写的<br>这病毒的年纪比我还大好几年<br><img src="//files.iternull.com/images/2015-09-09_01-0006.png" alt=""></li>
</ul>
<h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><ul>
<li>viruses-2010-05-18.tar.bz2<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">magnet:?xt=urn:btih:34EBE49A48AA532DEB9C0DD08A08A017AA04D810</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这是一个早期病毒样本集合的的压缩归档，总共40GB多，解压后60GB多，27W多个样本，都是些古老的病毒，除了DOS外还有Win32等其他病毒样本。<br>有些病毒是带声音的，不要一说到DOS就想到单色屏幕，全命令行界面，没声音，完全看不懂，DOS还是很强大的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我在找一个名为&lt;code&gt;Crash&lt;/code&gt;(崩溃)的DOS系统病毒时发现的。&lt;code&gt;Crash&lt;/code&gt;病毒是在1992年由一个俄罗斯人编写的。&lt;br&gt;
    
    </summary>
    
    
      <category term="DOS" scheme="https://blog.iternull.com/tags/DOS/"/>
    
      <category term="Virus" scheme="https://blog.iternull.com/tags/Virus/"/>
    
  </entry>
  
  <entry>
    <title>在树莓派上用电视棒搜索飞机无线电信号</title>
    <link href="https://blog.iternull.com/posts/2015/09/07/Raspberry-Pi-ADS-B-Radio.html"/>
    <id>https://blog.iternull.com/posts/2015/09/07/Raspberry-Pi-ADS-B-Radio.html</id>
    <published>2015-09-06T17:44:03.000Z</published>
    <updated>2017-02-11T11:30:14.102Z</updated>
    
    <content type="html"><![CDATA[<p>在树莓派使用DVB-T电视棒调试ADS-B信号，做一个虚拟雷达服务。<br>这里主要介绍如何用<code>dump1090</code>查看附近的飞机信息。<br><a id="more"></a><br>树莓派型号：B+<br>运行的系统：Raspbian<br>电视棒型号：RTL2832U</p>
<h2 id="配置运行环境"><a href="#配置运行环境" class="headerlink" title="配置运行环境"></a>配置运行环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt-get update</div><div class="line">apt-get upgrade</div><div class="line">apt-get install vim git git-core cmake libusb-1.0-0-dev build-essential</div></pre></td></tr></table></figure>
<h2 id="安装rtl-sdr"><a href="#安装rtl-sdr" class="headerlink" title="安装rtl-sdr"></a>安装<code>rtl-sdr</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git://git.osmocom.org/rtl-sdr.git</div><div class="line"><span class="built_in">cd</span> rtl-sdr</div><div class="line">mkdir build</div><div class="line"><span class="built_in">cd</span> build</div><div class="line">../ -DINSTALL_UDEV_RULES=ON</div><div class="line">make</div><div class="line">make install</div><div class="line">ldconfig</div><div class="line">cp ./rtl-sdr/rtl-sdr.rules /etc/udev/rules.d/</div></pre></td></tr></table></figure>
<h2 id="添加驱动黑名单"><a href="#添加驱动黑名单" class="headerlink" title="添加驱动黑名单"></a>添加驱动黑名单</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/modprobe.d/raspi-blacklist.conf</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">blacklist dvb_usb_rtl28xxu</div><div class="line">blacklist rtl2832</div><div class="line">blacklist rtl2830</div></pre></td></tr></table></figure>
<h2 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reboot</div></pre></td></tr></table></figure>
<h2 id="安装dump1090"><a href="#安装dump1090" class="headerlink" title="安装dump1090"></a>安装<code>dump1090</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git://github.com/MalcolmRobb/dump1090.git</div><div class="line"><span class="built_in">cd</span> dump1090</div><div class="line">make</div></pre></td></tr></table></figure>
<h2 id="查看附件的飞机信息"><a href="#查看附件的飞机信息" class="headerlink" title="查看附件的飞机信息"></a>查看附件的飞机信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./dump1090 --interactive</div></pre></td></tr></table></figure>
<p>你可以看到飞机的：<br>飞行模式(Mode)、应答号(Sqwk)、航班号(Flight)、高度(Alt)、速度(Spd)、航向(Hdg)、纬度(Lat)、经度(Long)、识别标志(Sig)、、、<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Hex     Mode  Sqwk  Flight   Alt    Spd  Hdg    Lat      Long   Sig  Msgs   Ti\</div><div class="line">-------------------------------------------------------------------------------</div><div class="line">40601f  S     0315  BAW165   33000  550  100   50.203    8.720    8   228    0</div><div class="line">400804  S     3475            4675  157  251                      4    16    0</div><div class="line">3cebf0  S                     2925                                5     4   21</div><div class="line">3c666b  S           DLH25N   10000  265  069                      5    21   33</div><div class="line">aa64ba  S     1000  UAL952   34975  596  137   49.995    8.887   18  1291    0</div><div class="line">4008b3  S     0510  BAW48G   34975  542  121   49.640    8.714    5    93   12</div><div class="line">4ca75e  S     0675  RYR369D  37000  513  091   49.806    9.030    5   487    0</div><div class="line">738071  S     3454  ELY006   37000  589  138   50.036    8.939    5   291    2</div><div class="line">4b16ba  S     1000  SWR815   33000  449  182   49.869    8.997    5   262   24</div><div class="line">4692ca  S     3123  AEE2BR   32000  336  297   50.189    8.619    5   280    5</div></pre></td></tr></table></figure></p>
<h2 id="局域网内共享数据"><a href="#局域网内共享数据" class="headerlink" title="局域网内共享数据"></a>局域网内共享数据</h2><p>使用<code>dump1090</code>的<code>-net</code>选项在主机上开放某个端口为其他主机提供服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">--net-http-port    HTTP server port (default: 8080)</div><div class="line">--net-ri-port      TCP raw input listen port  (default: 30001)</div><div class="line">--net-ro-port      TCP raw output listen port (default: 30002)</div><div class="line">--net-sbs-port     TCP BaseStation output listen port (default: 30003)</div><div class="line">--net-bi-port      TCP Beast input listen port  (default: 30004)</div><div class="line">--net-bo-port      TCP Beast output listen port (default: 30005)</div></pre></td></tr></table></figure></p>
<p>用<code>netstat</code>可以看到开放的端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">root@null:~/dump1090# netstat -l -p | grep dump1090</div><div class="line">tcp        0      0 *:30002                 *:*                     LISTEN      2293/dump1090</div><div class="line">tcp        0      0 *:30003                 *:*                     LISTEN      2293/dump1090</div><div class="line">tcp        0      0 *:30004                 *:*                     LISTEN      2293/dump1090</div><div class="line">tcp        0      0 *:30005                 *:*                     LISTEN      2293/dump1090</div><div class="line">tcp        0      0 *:http-alt              *:*                     LISTEN      2293/dump1090</div><div class="line">tcp        0      0 *:30001                 *:*                     LISTEN      2293/dump1090</div></pre></td></tr></table></figure></p>
<p>如果你运行了HTTP服务，可以到浏览器上打开这个网站访问dump1090的Web服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://&lt;address-or-name-of-Raspberry-Pi&gt;:8080</div></pre></td></tr></table></figure></p>
<p>你还可以用<code>NetCat</code>或<code>PuTTY</code>去测试 接收某个端口的数据</p>
<p>以下是一些产生数据的示例：<br>30002端口(RAW)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">*5D4CC26FD38DE2;</div><div class="line">*5D44D2635DBF97;</div><div class="line">*20000F9766CE80;</div><div class="line">*5F3C6664964D5B;</div><div class="line">*5D3C49C8A3305E;</div><div class="line">*02E18F976016CA;</div><div class="line">*8D4CA7419941C886A0042413DDE4;</div><div class="line">*20000ABD132A08;</div><div class="line">*903C1FBDC1A4A594766D30C7BCDE;</div><div class="line">*903C1FBDC2A4000047B5C9237512;</div><div class="line">*5D3C4AD34E5E5F;</div><div class="line">*5D44D2635DBF97;</div></pre></td></tr></table></figure></p>
<p>30003端口(基站)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">MSG,7,111,11111,89617E,111111,2014/07/04,22:44:06.728,2014/07/04,22:44:06.734,,15875,,,,,,,,,,0</div><div class="line">MSG,8,111,11111,400150,111111,2014/07/04,22:44:06.729,2014/07/04,22:44:06.735,,,,,,,,,,,,0</div><div class="line">MSG,7,111,11111,89617E,111111,2014/07/04,22:44:06.730,2014/07/04,22:44:06.735,,15875,,,,,,,,,,0</div><div class="line">MSG,7,111,11111,3C6664,111111,2014/07/04,22:44:06.732,2014/07/04,22:44:06.735,,14875,,,,,,,,,,0</div><div class="line">MSG,6,111,11111,3C544F,111111,2014/07/04,22:44:06.733,2014/07/04,22:44:06.736,,,,,,,,1000,0,0,0,0</div><div class="line">MSG,7,111,11111,3C544F,111111,2014/07/04,22:44:06.734,2014/07/04,22:44:06.737,,20800,,,,,,,,,,0</div><div class="line">MSG,5,111,11111,40643D,111111,2014/07/04,22:44:06.737,2014/07/04,22:44:06.737,EZY5497 ,37050,,,,,,,0,,0,0</div><div class="line">MSG,7,111,11111,3C4AD3,111111,2014/07/04,22:44:06.740,2014/07/04,22:44:06.738,,5200,,,,,,,,,,0</div><div class="line">MSG,8,111,11111,40643D,111111,2014/07/04,22:44:06.741,2014/07/04,22:44:06.738,,,,,,,,,,,,0</div><div class="line">MSG,5,111,11111,89617E,111111,2014/07/04,22:44:06.746,2014/07/04,22:44:06.739,,15875,,,,,,,0,,0,0</div><div class="line">MSG,8,111,11111,40643D,111111,2014/07/04,22:44:06.747,2014/07/04,22:44:06.739,,,,,,,,,,,,0</div><div class="line">MSG,5,111,11111,40643D,111111,2014/07/04,22:44:06.747,2014/07/04,22:44:06.740,,37050,,,,,,,0,,0,0</div><div class="line">MSG,8,111,11111,484163,111111,2014/07/04,22:44:06.747,2014/07/04,22:44:06.740,,,,,,,,,,,,0</div><div class="line">MSG,7,111,11111,3C666B,111111,2014/07/04,22:44:06.750,2014/07/04,22:44:06.741,,26025,,,,,,,,,,0</div></pre></td></tr></table></figure></p>
<h2 id="自动启动"><a href="#自动启动" class="headerlink" title="自动启动"></a>自动启动</h2><p>如果想要让程序在树莓派开机的时候自动启动，你需要创建一个脚本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/init.d/dump1090</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="comment">### BEGIN INIT INFO</span></div><div class="line"><span class="comment"># Provides:          Start dump1090 in --net mode</span></div><div class="line"><span class="comment"># Required-Start:</span></div><div class="line"><span class="comment"># Required-Stop:</span></div><div class="line"><span class="comment"># Default-Start:     2 3 4 5</span></div><div class="line"><span class="comment"># Default-Stop:      0 1 6</span></div><div class="line"><span class="comment">### END INIT INFO</span></div><div class="line"><span class="comment"># Author: Johannes Weber (johannes@webernetz.net)</span></div><div class="line"></div><div class="line"><span class="comment"># Aktionen</span></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">    start)</div><div class="line">        /home/pi/dump1090/dump1090 --net --quiet &amp;</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        killall dump1090</div><div class="line">        ;;</div><div class="line">    restart)</div><div class="line">        killall dump1090</div><div class="line">        /home/pi/dump1090/dump1090 --net --quiet &amp;</div><div class="line">        ;;</div><div class="line"><span class="keyword">esac</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure>
<p>请注意dump1090文件的目录，改成你对应的目录</p>
<p>赋予执行权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 /etc/init.d/dump1090</div></pre></td></tr></table></figure></p>
<p>添加开机启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update-rc.d dump1090 defaults</div></pre></td></tr></table></figure></p>
<p>还可以使用<code>service</code>命令手动启动和停止服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service dump1090 start</div><div class="line">service dump1090 stop</div></pre></td></tr></table></figure></p>
<p>这里有一个我自己编译打包的<code>.deb</code>安装包，不保证树莓派的全型号都能运行。<br><a href="//files.iternull.com/software/dump1090_2015-09-07_armhf.deb">dump1090_2015-09-07_armhf.deb</a><br><code>rtl-sdr</code>还是需要自己手动编译安装的</p>
<h2 id="可能碰到的问题"><a href="#可能碰到的问题" class="headerlink" title="可能碰到的问题"></a>可能碰到的问题</h2><p>如果你选择自己编译，在编译是报错，请根据提示解决问题。缺什么装什么。<br>如果你运行<code>dump1090 --interactive</code>后，等了好一会都不见有飞机数据的返回，可能是你附件根本就没飞机，或者天线位置不好没接收到信号，或者你的电视棒硬件有问题，或者你妹配置好程序</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>更多玩法，比如把输给共享给其他主机，在地图上显示飞机的飞行轨迹，以及去抓取其他协议的数据，比如GSM<br>PC上一样可以使用，会GNU Radio更佳</p>
<hr>
<ul>
<li>注：本文所有命令均使用<code>root</code>执行，如使用<code>pi</code>用户请在某些命令前加上<code>sudo</code></li>
<li>原文：(<a href="http://blog.webernetz.net/2014/08/02/weiterer-vrs-feed-ads-b-stick-am-raspberry-pi/" target="_blank" rel="external">http://blog.webernetz.net/2014/08/02/weiterer-vrs-feed-ads-b-stick-am-raspberry-pi/</a>)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在树莓派使用DVB-T电视棒调试ADS-B信号，做一个虚拟雷达服务。&lt;br&gt;这里主要介绍如何用&lt;code&gt;dump1090&lt;/code&gt;查看附近的飞机信息。&lt;br&gt;
    
    </summary>
    
    
      <category term="Raspberry Pi" scheme="https://blog.iternull.com/tags/Raspberry-Pi/"/>
    
      <category term="ADS-B" scheme="https://blog.iternull.com/tags/ADS-B/"/>
    
      <category term="Radio" scheme="https://blog.iternull.com/tags/Radio/"/>
    
  </entry>
  
</feed>
